,question,db_id,query,database_schema,num_tokens,elapsed_time,num_tokens_output,tables
0,Which film titles have the most expensive rental rate? Hint: the most expensive rental rate refers to max(rental_rate),movie_3,SELECT title FROM film WHERE rental_rate = ( SELECT MAX(rental_rate) FROM film ),"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `inventory` (
  inventory_id INTEGER,
  film_id INTEGER REFERENCES film(None),
  store_id INTEGER REFERENCES store(None),
  last_update DATETIME
);

",190,6.636439561843872,250,"['film', 'inventory']"
1,How many furniture products were ordered at central superstore? Hint: furniture products refers to Category = 'Furniture',superstore,SELECT COUNT(*) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Category = 'Furniture',"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

",151,6.552527904510498,250,"['central_superstore', 'product']"
2,What was the review context from Jacksonville on 2017/7/22? Hint: Jacksonville refers to city = 'Jacksonville'; on 2017/7/22 refers to Date = '2017-07-22';,retail_complains,SELECT T1.Reviews FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Jacksonville' AND T1.Date = '2017-07-22',"CREATE TABLE `reviews` (
  Date DATE PRIMARY KEY,
  Stars INTEGER,
  Reviews TEXT,
  Product TEXT,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",178,6.531229257583618,250,"['reviews', 'client']"
3,What colour is the van that can be spotted in image no. 1? Hint: colour refers to ATT_CLASS; van refers to OBJ_CLASS = 'van'; image no. 1 refers to IMG_ID = 1,image_and_language,SELECT T4.ATT_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID INNER JOIN IMG_OBJ_ATT AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN ATT_CLASSES AS T4 ON T3.ATT_CLASS_ID = T4.ATT_CLASS_ID WHERE T2.OBJ_CLASS = 'van' AND T1.IMG_ID = 1 GROUP BY T4.ATT_CLASS,"CREATE TABLE `IMG_REL` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",198,6.573491811752319,250,"['img_obj', 'obj_class', 'att_class']"
4,Please list the name of crew that were born before 1970. Hint: born before 1970 refers to birthdate < '1970-01-01',simpson_episodes,"SELECT name FROM Person WHERE SUBSTR(birthdate, 1, 4) < '1970';","CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",166,6.526587247848511,250,['person']
5,"What is the percentage of 5 star ratings River City brand root beer get? Hint: percentage = MULTIPLY(DIVIDE(SUM(BrandID WHERE StarRating = 5), COUNT(BrandID) WHERE BrandName = 'River City'), 1.0); 5 star ratings refers to StarRating = 5; River City refers to BrandName = 'River City';",beer_factory,SELECT CAST(COUNT(CASE WHEN T2.StarRating = 5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.StarRating) FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T1.BrandName = 'River City',"CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

",213,6.596656322479248,250,"['rootbeerbrand', 'rootbeerreview']"
6,What is the fastest car made by Japan? Hint: the fastest refers to max(horsepower); made by Japan refers to country = 'Japan'; name of the car refers to car_name,cars,SELECT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Japan' ORDER BY T1.horsepower DESC LIMIT 1,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",148,6.502581596374512,250,"['data', 'country', 'production']"
7,What is the title and journal homepage of the latest published paper? Hint: latest published paper refers to Max(Year),authors,"SELECT T1.Title, T2.HomePage FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id ORDER BY T1.Year DESC LIMIT 1","CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",140,6.497258901596069,250,"['paper', 'journal']"
8,"How much longer in percentage is the screen time of the most important character in Batman than the least important one? Hint: most important character refers to max(screentime); least important character refers to min(screentime); movie Batman refers to title = 'Batman'; percentage = divide(subtract(max(screentime) , min(screentime)) , min(screentime)) * 100%",movie,"SELECT (MAX(CAST(SUBSTR(T2.screentime, 3, 2) AS REAL)) - MIN(CAST(SUBSTR(T2.screentime, 3, 2) AS REAL))) * 100 / MIN(CAST(SUBSTR(T2.screentime, 3, 2) AS REAL)) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'Batman'","CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

",204,6.592608451843262,250,"['characters', 'movie']"
9,"How much is the total quantity of items from the East region shipped on 3/25/2015? Name the products. Hint: shipped on 3/25/2015 refers to ""Ship Date"" = Date('2015-03-25');",superstore,"SELECT SUM(T1.Quantity), T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Date` = '2015-03-25' AND T2.Region = 'East'","CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `east_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",191,6.5517497062683105,250,"['central_superstore', 'east_superstore']"
10,What is the average age of Norwalk clients? Hint: average age = AVG(age); Norwalk refers to city = 'Norwalk';,retail_complains,SELECT CAST(SUM(T1.age) AS REAL) / COUNT(T1.age) AS average FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Norwalk',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",148,6.510680198669434,250,['client']
11,What is the lowest sentiment polarity score of the Basketball Stars app for people who dislikes the app pretty much and how many downloads does it have? Hint: lowest sentiment polarity score refers to MIN(Sentiment_Polarity); user dislike the app pretty much refers to Sentiment_Polarity<-0.5; number of downloads it has refers to installs;,app_store,"SELECT MIN(T2.Sentiment_Polarity), T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Basketball Stars'","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",185,6.553484916687012,250,"['playstore', 'user_reviews']"
12,What is the brand of the device used by the most users in the M23-26 user group? Hint: brand of the device refers to phone_brand; M23-26 user group refers to `group` = 'M23-26';,talkingdata,"SELECT T.phone_brand FROM ( SELECT T2.phone_brand, COUNT(T1.device_id) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'M23-26' GROUP BY T2.phone_brand ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",228,6.636119842529297,250,['phone_brand_device_model2']
13,"What sea does the Baltic Sea converge with, and how deep is the Baltic Sea? Hint: Coverage refers to mergesWith",mondial_geo,"SELECT T2.Sea2, T1.Depth FROM sea AS T1 INNER JOIN mergesWith AS T2 ON T1.Name = T2.Sea1 WHERE T1.Name = 'Baltic Sea'","CREATE TABLE `sea` (
  Name TEXT PRIMARY KEY,
  Depth REAL
);

CREATE TABLE `geo_sea` (
  Sea TEXT PRIMARY KEY REFERENCES sea(None),
  Country TEXT PRIMARY KEY REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None)
);

",276,6.758932113647461,250,"['sea', 'geo_sea']"
14,What is the name of the state with the most counties? Hint: the most counties refer to MAX(COUNT(county));,address,SELECT T1.name FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state GROUP BY T2.state ORDER BY COUNT(T2.county) DESC LIMIT 1,"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `country` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  county TEXT PRIMARY KEY,
  state TEXT REFERENCES state(abbreviation)
);

",160,6.521532773971558,250,"['state', 'country']"
15,What is the difficulty of the course in which a student with level of intellengence of 5 got an A grade? Hint: difficulty of the course refers to diff;,cs_semester,SELECT T3.diff FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.grade = 'A' AND T1.intelligence = 5,"CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",149,6.51165509223938,250,"['course', 'registration', 'student']"
16,"Write down the conference full name of ""ICWE"" and it's homepage address. Hint: ""ICWE"" is the ShortName of conference",authors,"SELECT FullName, Homepage FROM Conference WHERE ShortName = 'ICWE'","CREATE TABLE `conference` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",146,6.509373664855957,250,['conference']
17,What is the model year of the truck used in shipment id 1003? Hint: shipment id 1003 refers to ship_id = 1003,shipping,SELECT T1.model_year FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.ship_id = '1003',"CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

CREATE TABLE `truck` (
  truck_id INTEGER,
  make TEXT,
  model_year INTEGER
);

",151,6.514235496520996,250,"['shipment', 'truck']"
18,Please provide contact details of all Marketing Managers. State their name and phone number. Hint: Marketing Manager is a job title,works_cycles,"SELECT T1.FirstName, T1.LastName, T2.PhoneNumber FROM Person AS T1 INNER JOIN PersonPhone AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Employee AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T3.JobTitle = 'Marketing Manager'","CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `jobcandidate` (
  JobCandidateID INTEGER,
  BusinessEntityID INTEGER REFERENCES Employee(None),
  Resume TEXT,
  ModifiedDate DATETIME
);

",449,7.179357290267944,250,"['person', 'jobcandidate']"
19,Which state has greater than 50 CBSA officers of metro type? Hint: greater than 50 CBSA officers of metro type refers to COUNT(CBSA_type = 'Metro') > 50;,address,SELECT T2.state FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_type = 'Metro' GROUP BY T2.state HAVING COUNT(T1.CBSA_type) > 50,"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `cbsa` (
  CBSA INTEGER,
  CBSA_name TEXT,
  CBSA_type TEXT
);

",181,6.545650482177734,250,"['state', 'cbsa']"
20,What's the lastest household survey in Angola and when did it take place? Hint: in Angola refers to ShortName = 'Angola'; when refers to PppSurveyYear,world_development_indicators,"SELECT LatestHouseholdSurvey, PppSurveyYear FROM Country WHERE ShortName = 'Angola'","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",158,6.525081634521484,250,"['country', 'countrynotes']"
21,What is the caption for the prediction class id 12? Hint: caption for the prediction class id 12 refers to PRED_CLASS where PRED_CLASS_ID = 12;,image_and_language,SELECT PRED_CLASS FROM PRED_CLASSES WHERE PRED_CLASS_ID = 12,"CREATE TABLE `pred_classes` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

",189,6.555415868759155,250,['pred_classes']
22,"How many stars did ""Eagle Capital"" received from Little Rock on 2013/4/4? Hint: Eagle Capital refers to Product = 'Eagle Capital'; Little Rock is a city; on 2013/4/4 refers to Date = '2013-04-04';",retail_complains,SELECT COUNT(T1.Stars) FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.Product = 'Eagle Capital' AND T2.city = 'Little Rock' AND T1.Date = '2013-04-04',"CREATE TABLE `reviews` (
  Date DATE PRIMARY KEY,
  Stars INTEGER,
  Reviews TEXT,
  Product TEXT,
  district_id INTEGER REFERENCES district(district_id)
);

",187,6.565796613693237,250,['reviews']
23,Please write down the footnote descriptions of Albania in 1981. Hint: Albania is the name of country where Country = 'Albania',world_development_indicators,SELECT DISTINCT T1.Description FROM FootNotes AS T1 INNER JOIN Country AS T2 ON T1.Countrycode = T2.CountryCode WHERE T1.Year = 'YR1981' AND T2.ShortName = 'Albania',"CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",154,6.518522024154663,250,"['countrynotes', 'country']"
24,Which production company produced the movie that made the most money at the box office? Hint: Which production company refers to company_name; most money at the box office refers to max(revenue),movies_4,SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id GROUP BY T1.company_id ORDER BY SUM(T3.revenue) DESC LIMIT 1,"CREATE TABLE `movie_company` (
  movie_id INTEGER REFERENCES movie(None),
  company_id INTEGER REFERENCES production_company(None)
);

",219,6.617413282394409,250,['movie_company']
25,"Name products and their quantity ordered by the company 'GROSELLA-Restaurante' in the sales order that was processed by Nancy Davolio. Hint: name products refers to ProductName; 'GROSELLA-Restaurante' refers to CompanyName; 'Nancy Davolio' is the full name of an employee; full name refers to FirstName, LastName;",retail_world,"SELECT T4.ProductName, T3.Quantity FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID INNER JOIN Products AS T4 ON T3.ProductID = T4.ProductID INNER JOIN Customers AS T5 ON T2.CustomerID = T5.CustomerID WHERE T1.FirstName = 'Nancy' AND T1.LastName = 'Davolio' AND T5.CompanyName = 'GROSELLA-Restaurante'","CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",221,6.632032155990601,250,"['products', 'suppliers', 'customers']"
26,What is the name of the station that is less used by customers who borrow bikes from? Indicate when was the station installed. Hint: less used station where bikes are borrowed from refers to start_station_name which has the least number of customers; subscription_type = 'Customer'; when installed refers to installation_date;,bike_share_1,"SELECT T1.start_station_name, T2.installation_date FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.subscription_type = 'Customer' GROUP BY T1.start_station_name ORDER BY COUNT(T1.subscription_type) LIMIT 1","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",177,6.53992772102356,250,"['trip', 'station']"
27,How many territories are there in the Eastern Region? Hint: Eastern Region refers to RegionDescription = 'Eastern';,retail_world,SELECT COUNT(T1.TerritoryID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",160,6.524341583251953,250,['customers']
28,In which city is the sea whose depth is 4232 meters less than that of the Bay of Bengal?,mondial_geo,SELECT T2.City FROM sea AS T1 INNER JOIN located AS T2 ON T1.Name = T2.Sea INNER JOIN city AS T3 ON T3.Name = T2.City WHERE ( SELECT Depth FROM sea WHERE Name LIKE '%Bengal%' ) - T1.Depth = 4235,"CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `geo_sea` (
  Sea TEXT PRIMARY KEY REFERENCES sea(None),
  Country TEXT PRIMARY KEY REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None)
);

",272,6.751357078552246,250,"['city', 'geo_sea']"
29,"What is the average number of papers published in the journal ""Molecular Brain"" every year from 2008 to 2011? Hint: ""Molecular Brain"" is the FullName of journal; year from 2008 to 2011 refers to Year BETWEEN 2008 AND 2011; average = Divide (Count(Id),4)",authors,SELECT CAST(COUNT(T2.Id) AS REAL) / COUNT(DISTINCT T2.Year) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Molecular Brain' AND T2.Year BETWEEN 2008 AND 2011,"CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",207,6.592043399810791,250,"['journal', 'paper']"
30,"Which of the American customers have experienced a delay in the shipment and how long was the longest? Hint: ""American"" refers to Country = 'USA'; longest delay in shipment refers to Max(Subtract(RequiredDate, ShippedDate)); customer refers to CustomerID",retail_world,"SELECT T1.CompanyName, TIMESTAMPDIFF(DAY, T2.ShippedDate, T2.RequiredDate) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Country = 'USA' AND TIMESTAMPDIFF(DAY, T2.ShippedDate, T2.RequiredDate) < 0","CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",194,6.59339451789856,250,"['orders', 'customers']"
31,Provide the ranking criteria and scores in 2005 that were received by Harvard University. Hint: Harvard University refers to university_name = 'Harvard University'; in 2005 refers to year = 2005; ranking criteria refers to criteria_name;,university,"SELECT T1.criteria_name, T2.score FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'Harvard University' AND T2.year = 2005","CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

CREATE TABLE `ranking_criteria` (
  id INTEGER,
  ranking_system_id INTEGER REFERENCES ranking_system(id),
  criteria_name TEXT
);

",188,6.566014289855957,250,"['university', 'university_ranking_year', 'ranking_criteria']"
32,Please list down ID of movies acted by top 5 actors based on actor rating.,movielens,SELECT T2.movieid FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid GROUP BY T2.actorid ORDER BY AVG(T1.a_quality) DESC LIMIT 5,"CREATE TABLE `movies2actors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  actorid INTEGER PRIMARY KEY REFERENCES actors(None),
  cast_num INTEGER
);

",145,6.514573097229004,250,['movies2actors']
33,How many 20 years old athletes were there in the 1984 Summer Olympic Games? Hint: 20 years old athletes refer to person_id where age = 20; 1984 Summer Olympic Games refer to games_name = '1984 Summer';,olympics,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1984 Summer' AND T2.age = 20,"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",209,6.607861757278442,250,"['games', 'games_competitor']"
34,List 10 crews alongside their jobs who worked on the movie 'Mad Max: Fury Road.' Hint: crews refers to person_name; movie 'Mad Max: Fury Road' refers to title = 'Mad Max: Fury Road',movies_4,SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Mad Max: Fury Road' LIMIT 10,"CREATE TABLE `movie_crew` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  department_id INTEGER REFERENCES department(department_id),
  job TEXT
);

CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

",232,6.656500339508057,250,"['movie_crew', 'person']"
35,Please list the names of the actors who played a role in the movie Batman. Hint: movie Batman refers to title = 'Batman',movie,SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman',"CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

",137,6.506247520446777,250,"['characters', 'actor']"
36,Which region is the majority of the athletes from? Hint: region refers to region_name; the majority of the athletes from refer to MAX(COUNT(region_name));,olympics,SELECT T2.region_name FROM person_region AS T1 INNER JOIN noc_region AS T2 ON T1.region_id = T2.id GROUP BY T2.region_name ORDER BY COUNT(T1.person_id) DESC LIMIT 1,"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `noc_region` (
  id INTEGER,
  noc TEXT,
  region_name TEXT
);

",183,6.558444261550903,250,"['person_region', 'noc_region']"
37,Mention the status of payment of student 299. Hint: status of payment is mentioned in no_payment_due; bool = 'pos' means the student has payment due; bool = 'neg' means the student has no payment due; student299 is a name of student;,student_loan,SELECT bool FROM no_payment_due WHERE name = 'student299',"CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

",213,6.617724657058716,250,['no_payment_due']
38,How many unmarried women were checked for normal pregnancy? Hint: unmarried refers to marital = 'S'; women refers to gender = 'F'; normal pregnancy refers to conditions.DESCRIPTION = 'normal pregnancy';,synthea,SELECT COUNT(DISTINCT T2.patient) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Normal pregnancy' AND T2.gender = 'F' AND T2.marital = 'S',"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",193,6.59162712097168,250,"['conditions', 'patients']"
39,Name the movie with the most ratings. Hint: movie with the most rating refers to MAX(SUM(rating_score));,movie_platform,SELECT movie_title FROM movies GROUP BY movie_title ORDER BY COUNT(movie_title) DESC LIMIT 1,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",143,6.516524314880371,250,"['movies', 'ratings']"
40,What is the github address of the repository that contains files used by solution ID12? Hint: github address refers to Url;,codebase_comments,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 12,"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",145,6.525154113769531,250,"['solution', 'repo']"
41,Which community area has the highest number of crimes reported on the street? Hint: reported on the street refers to location_description = 'STREET'; community area with highest number of crime refers to Max(Count(location_description)); community area refers to community_area_no,chicago_crime,SELECT T1.community_area_no FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no WHERE T2.location_description = 'STREET' GROUP BY T1.community_area_no ORDER BY COUNT(T2.location_description) DESC LIMIT 1,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",187,6.5746917724609375,250,"['crime', 'community_area']"
42,Name the coin and date of transactions with the greatest decline in percent change in 1 hour. Hint: the greatest decline in percent change in 1 hour refers to max(percent_change_1h),coinmarketcap,"SELECT T1.name, T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.percent_change_1h = ( SELECT MIN(percent_change_1h) FROM historical )","CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",145,6.518760919570923,250,"['historical', 'coins']"
43,List all the ids of the images that have a self-relation relationship. Hint: ids of the images refers to IMG_ID; self-relations refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID,image_and_language,SELECT DISTINCT IMG_ID FROM IMG_REL WHERE OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID,"CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",202,6.603151559829712,250,['img_rel']
44,What is the name of the product with the highest retail price? Hint: name of the product refers to p_name; the highest retail price refers to p_retailprice,retails,SELECT p_name FROM part WHERE p_retailprice = ( SELECT MAX(p_retailprice) FROM part ),"CREATE TABLE `part` (
  p_partkey INTEGER,
  p_type TEXT,
  p_size INTEGER,
  p_brand TEXT,
  p_name TEXT,
  p_container TEXT,
  p_mfgr TEXT,
  p_retailprice REAL,
  p_comment TEXT
);

CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

",160,6.535215616226196,250,"['part', 'partsupp']"
45,"In romantic movies, how many of them starred by John Travolta? Hint: romantic movies refers to Genre = 'Romance'; starred by John Travolta refers to Name = 'John Travolta'",movie,SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Romance' AND T3.Name = 'John Travolta',"CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",153,6.532625913619995,250,"['movie', 'actor', 'characters']"
46,"What was the temperature range of station no.1 on 2012/1/1? Hint: on 2012/1/1 refers to date = '2012-01-01'; temperature range refers to Subtract (tmax, tmin); station no.1 refers to station_nbr = 1",sales_in_weather,SELECT tmax - tmin AS temrange FROM weather WHERE station_nbr = 1 AND `date` = '2012-01-01',"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

",184,6.563456296920776,250,['weather']
47,Please list the categories of the app users who are not active when event no.2 happened. Hint: not active refers to is_active = 0; event no. refers to event_id; event_id = 2;,talkingdata,SELECT DISTINCT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id INNER JOIN app_events AS T3 ON T2.app_id = T3.app_id WHERE T3.event_id = 2 AND T3.is_active = 0,"CREATE TABLE `app_all` (
  app_id INTEGER
);

CREATE TABLE `app_events` (
  event_id INTEGER PRIMARY KEY REFERENCES events(event_id),
  app_id INTEGER PRIMARY KEY,
  is_installed INTEGER,
  is_active INTEGER
);

CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `events_relevant` (
  event_id INTEGER,
  device_id INTEGER REFERENCES gender_age(device_id),
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

",217,6.628730297088623,250,"['app_all', 'app_events', 'events', 'events_relevant']"
48,What is the district address associated with the case JB107731? Hint: case JB107731 refers to case_number = 'JB107731',chicago_crime,SELECT T1.address FROM District AS T1 INNER JOIN Crime AS T2 ON T2.district_no = T1.district_no WHERE T2.case_number = 'JB107731',"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",175,6.559503555297852,250,"['crime', 'district']"
49,"Write down the any five of ID and name of category that starts with alphabet ""P"". Hint: category that starts with alphabet ""P"" refers to category_name like 'P%';",public_review_platform,"SELECT category_id, category_name FROM Categories WHERE category_name LIKE 'P%' LIMIT 5","CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",201,6.619956731796265,250,['categories']
50,"What is the linearized sequenced of API calls of the method whose solution path is ""mauriciodeamorim_tdd.encontro2\Tdd.Encontro2.sln""? Hint: linearized sequenced of API calls refers to ApiCalls;",codebase_comments,SELECT T2.ApiCalls FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'mauriciodeamorim_tdd.encontro2Tdd.Encontro2.sln',"CREATE TABLE `Solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

",176,6.559840202331543,250,"['solution', 'apiCalls']"
51,Which professor teaches the highest number of professional or master/graduate courses? Hint: professor refers to taughtBy.p_id; highest number of professional or master/graduate courses refers to max(count(taughtBy.course_id)) where courseLevel = 'Level_500',computer_student,SELECT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500' GROUP BY T2.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1,"CREATE TABLE `course` (
  course_id INTEGER,
  courseLevel TEXT
);

CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

",171,6.546886682510376,250,"['course', 'taughtby']"
52,How many Sales Manager who are working in Sydney? List out their email. Hint: Sales Manager is a job title; Sydney is a city;,car_retails,SELECT T1.email FROM employees AS T1 INNER JOIN offices AS T2 ON T1.officeCode = T2.officeCode WHERE T1.jobTitle LIKE '%Sales Manager%' AND T2.city = 'Sydney',"CREATE TABLE `employees` (
  employeeNumber INTEGER,
  lastName TEXT,
  firstName TEXT,
  extension TEXT,
  email TEXT,
  officeCode TEXT REFERENCES offices(officeCode),
  reportsTo INTEGER REFERENCES employees(employeeNumber),
  jobTitle TEXT
);

",154,6.5252604484558105,250,['employees']
53,What is the most common condition among the female Americans? Hint: the most common condition refers to MAX(COUNT(DESCRIPTION)); among the female Americans refer to PATIENT where gender = 'F' and ethnicity = 'american';,synthea,SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.gender = 'F' AND T1.ethnicity = 'american' GROUP BY T2.DESCRIPTION ORDER BY COUNT(T2.DESCRIPTION) DESC LIMIT 1,"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",196,6.59614634513855,250,"['conditions', 'patients']"
54,"What is the average number of crews for a movie? Hint: average number of crews = divide(count(person_id), COUNT(movie_id))",movies_4,"SELECT CAST(SUM(CD) AS REAL) / COUNT(movie_id) FROM ( SELECT movie_id, COUNT(person_id) AS CD FROM movie_crew GROUP BY movie_id )","CREATE TABLE `movie_crew` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  department_id INTEGER REFERENCES department(department_id),
  job TEXT
);

",214,6.620871543884277,250,['movie_crew']
55,"Among the seafoods, how many of them have an order quantity of more than 50? Hint: ""Seafood"" is the CategoryName; order quantity of more than 50 refers to Quantity > 50",retail_world,SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Categories AS T3 ON T1.CategoryID = T3.CategoryID WHERE T3.CategoryName = 'Seafood' AND T2.Quantity > 50,"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `categories` (
  CategoryID INTEGER,
  CategoryName TEXT,
  Description TEXT
);

",185,6.561436891555786,250,"['products', 'categories']"
56,"What are the precise locations of the cities with an area code of 787? Hint: precise location refers to latitude, longitude",address,"SELECT T2.latitude, T2.longitude FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = '787' GROUP BY T2.latitude, T2.longitude","CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",161,6.5342347621917725,250,"['area_code', 'zip_data']"
57,"Among the users who gave a rating of 5, how many of them are male? Hint: Male users mean that u_gender = 'M'",movielens,SELECT COUNT(T1.userid) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating = 5 AND T2.u_gender = 'M',"CREATE TABLE `users` (
  userid INTEGER,
  age TEXT,
  u_gender TEXT,
  occupation TEXT
);

",162,6.536818504333496,250,['users']
58,What was the total unit sold for item 10 when the average temperature was below the median temperature? Hint: item 10 refers to item_nbr = 10; average temperature below median temperature refers to tavg < avg(tavg); total units refers to Sum(units),sales_in_weather,SELECT SUM(T5.units) FROM weather AS T4 INNER JOIN sales_in_weather AS T5 ON T4.`date` = T5.`date` INNER JOIN relation AS T6 ON T5.store_nbr = T6.store_nbr WHERE T5.item_nbr = 10 AND T4.tavg < ( SELECT AVG(T1.tavg) FROM weather AS T1 INNER JOIN sales_in_weather AS T2 ON T1.`date` = T2.`date` INNER JOIN relation AS T3 ON T2.store_nbr = T3.store_nbr WHERE T2.item_nbr = 10 ),"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `relation` (
  store_nbr INTEGER REFERENCES sales_in_weather(store_nbr),
  station_nbr INTEGER REFERENCES weather(station_nbr)
);

CREATE TABLE `sales_in_weather` (
  date DATE PRIMARY KEY,
  store_nbr INTEGER PRIMARY KEY,
  item_nbr INTEGER PRIMARY KEY,
  units INTEGER
);

",173,6.548175096511841,250,"['weather', 'relation', 'sales_in_weather']"
59,What is the longest review? Hint: review refers to content; longest review refers to Max(content),music_platform_2,SELECT title FROM reviews ORDER BY LENGTH(content) DESC LIMIT 1,"CREATE TABLE `reviews` (
  podcast_id TEXT REFERENCES podcasts(None),
  title TEXT,
  content TEXT,
  rating INTEGER,
  author_id TEXT,
  created_at TEXT
);

",133,6.506397485733032,250,['reviews']
60,Write down the date received of complaints sent via Fax. Hint: sent via Fax refers to Submitted via = 'Fax',retail_complains,SELECT T1.`Date received` FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.`Submitted via` = 'Fax',"CREATE TABLE `callcenterlogs` (
  Date received DATE,
  Complaint ID TEXT PRIMARY KEY,
  rand client TEXT REFERENCES client(client_id),
  phonefinal TEXT,
  vru+line TEXT,
  call_id INTEGER,
  priority INTEGER,
  type TEXT,
  outcome TEXT,
  server TEXT,
  ser_start TEXT,
  ser_exit TEXT,
  ser_time TEXT
);

",146,6.515151023864746,250,['callcenterlogs']
61,"Among the menus that include baked apples with cream, who is the sponsor of the menu with the highest price? Hint: baked apples with cream is a name of dish; highest price refers to MAX(price);",menu,SELECT T4.sponsor FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id INNER JOIN Menu AS T4 ON T4.id = T1.menu_id WHERE T3.name = 'Baked apples with cream' AND T3.id = 107 ORDER BY T2.price DESC LIMIT 1,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",156,6.532207012176514,250,"['dish', 'menuitem']"
62,"Who was the actor that played in the movie ""Batman"" with the longest screentime? Hint: movie ""Batman"" refers to Title = 'Batman'; longest screentime refers to max(screentime)",movie,SELECT T2.Name FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID INNER JOIN movie AS T3 ON T3.MovieID = T1.MovieID WHERE T3.Title = 'Batman' ORDER BY T1.screentime DESC LIMIT 1,"CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",159,6.5333569049835205,250,"['movie', 'actor', 'characters']"
63,Please list the app IDs of all the users in the Securities category.,talkingdata,SELECT T2.app_id FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T1.category = 'Securities',"CREATE TABLE `app_labels` (
  app_id INTEGER REFERENCES app_all(app_id),
  label_id INTEGER REFERENCES label_categories(label_id)
);

",187,6.562947988510132,250,['app_labels']
64,How many film titles were released in 2006? Hint: released in 2006 refers to release_year = 2006,movie_3,SELECT COUNT(film_id) FROM film WHERE release_year = 2006,"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",196,6.5951879024505615,250,['film']
65,What is the name of the most expensive car? Hint: name of the car refers to car_name; the most expensive refers to max(price),cars,SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",138,6.511096477508545,250,"['data', 'price']"
66,Provide the list of the longest movies. Arrange these titles in alphabetical order. Hint: the longest refers to max(length),movie_3,SELECT title FROM film WHERE length = ( SELECT MAX(length) FROM film ),"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",193,6.592014312744141,250,['film']
67,How many distinct orders were there in 2003 when the quantity ordered was less than 30? Hint: year(orderDate) = '2003'; quantityOrdered < 30;,car_retails,"SELECT COUNT(DISTINCT T1.orderNumber) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.quantityOrdered < 30 AND STRFTIME('%Y', T2.orderDate) = '2003'","CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

",169,6.543045997619629,250,['orders']
68,How many trains are running west? Hint: west is a direction,trains,SELECT COUNT(id) FROM trains WHERE direction = 'west',"CREATE TABLE `trains` (
  id INTEGER,
  direction TEXT
);

",116,6.456712961196899,250,['trains']
69,"Among the orders in Central superstore, which art product were ordered the most? Hint: art product refers to Sub-Category = 'Art'; the most refers to max(order_number)",superstore,SELECT T2.`Product Name` FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Sub-Category` = 'Art' GROUP BY T2.`Product Name` ORDER BY COUNT(T2.`Product ID`) DESC LIMIT 1,"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",166,6.5407328605651855,250,['central_superstore']
70,"Which teams have winning rate less than 50%? Hint: team with winning rate less than 50% refers to Divide (won, Sum(won, lost)) < 0.5",professional_basketball,SELECT name FROM teams WHERE CAST(won AS REAL) * 100 / (won + lost) < 50,"CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",192,6.56686544418335,250,['teams']
71,"What is the average number of inspections did risk level 3 taverns have? Hint: risk level 3 refers to risk_level = '3'; tavern refers to facility_type = 'TAVERN'; average number = divide(count(inspection_id), sum(license_no)) where risk_level = '3' and facility_type = 'TAVERN'",food_inspection_2,SELECT CAST(COUNT(T2.inspection_id) AS REAL) / COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = 3 AND T1.facility_type = 'TAVERN',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",201,6.603231906890869,250,"['inspection', 'establishment']"
72,"In 2014, what is the name of the university which was considered a leader in the publications rank? Hint: In 2014 refers to year = 2014; leader refers to MAX(score); in the publications rank refers to criteria_name = 'Publications Rank'; name of university refers to university_name;",university,SELECT T3.university_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T1.criteria_name = 'Publications Rank' AND T2.year = 2014 AND T1.id = 17 ORDER BY T2.score DESC LIMIT 1,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

",202,6.60471510887146,250,"['university', 'university_ranking_year']"
73,"By what percentage is the average salary of Trainees higher than the minimum salary of this postion? Hint: AVG(salary); Trainee is a position title; minimum salary refers to minsalary; calculation = DIVIDE(SUBTRACT(AVG(salary), minsalary), minsalary) * 100",human_resources,"SELECT 100 * (AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) - CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS REAL)) / CAST(REPLACE(SUBSTR(T2.minsalary, 4), ',', '') AS REAL) AS per FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.positiontitle = 'Trainee'","CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

",182,6.559738636016846,250,['position']
74,Name the longest Catalan language Wikipedia page title and state the number of different words in this page. Hint: longest title refers to max(length(title)),language_corpus,"SELECT title, words FROM pages WHERE title = ( SELECT MAX(LENGTH(title)) FROM pages )","CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",158,6.528242826461792,250,['pages']
75,Find out which business ID are opened all the time. Hint: opened all the time refers to Business_Hours where day_id BETWEEN 1 and 7 and opening_time = closing_time;,public_review_platform,SELECT DISTINCT business_id FROM Business_Hours WHERE day_id >= 1 AND day_id < 8 AND opening_time = closing_time,"CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

",206,6.611236572265625,250,['business_hours']
76,What is the shipping cost for order number 10692 from the company Alfreds Futterkiste? Hint: Alfreds Futterkiste is the name of the company; order number 10692 refers to OrderID = 10692;,retail_world,SELECT T2.Freight FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.OrderID = 10692 AND T1.CompanyName = 'Alfreds Futterkiste',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",194,6.592178583145142,250,"['orders', 'shippers']"
77,How many device users are male? Hint: male refers to gender = 'M';,talkingdata,SELECT COUNT(device_id) FROM gender_age WHERE gender = 'M',"CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

",188,6.566418409347534,250,['gender_age']
78,"List the brands of root beer produced by Dr Pepper Snapple Group and calculate their percentage of purchases between 2014 to 2016. Hint: brand of root beer refers to BrandName; produced by Dr Pepper Snapple Group refers to BreweryName = 'Dr Pepper Snapple Group'; percentage of purchases = MULTIPLY(DIVIDE(SUM(BrandID WHERE PurchaseDate > = '2014-01-01' AND PurchaseDate < = '2016-12-31'), COUNT(BrandID) WHERE BreweryName = 'Dr Pepper Snapple Group'), 1.0); between 2014 to 2016 refers to PurchaseDate > = '2014-01-01' AND PurchaseDate < = '2016-12-31;",beer_factory,"SELECT T1.BrandName , CAST(SUM(CASE WHEN T2.PurchaseDate >= '2014-01-01' AND T2.PurchaseDate <= '2016-12-31' THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.BrandID) AS purchase FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID WHERE T1.BreweryName = 'Dr Pepper Snapple Group' GROUP BY T2.BrandID","CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",321,6.873105049133301,250,"['rootbeerbrand', 'transaction']"
79,How many platforms are available for the game Pro Evolution Soccer 2016? Hint: game Pro Evolution Soccer 2016 refers to game_name = 'Pro Evolution Soccer 2016',video_games,SELECT COUNT(T2.id) FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id INNER JOIN game_publisher AS T3 ON T1.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T4.game_name = 'Pro Evolution Soccer 2016',"CREATE TABLE `game_platform` (
  id INTEGER,
  game_publisher_id INTEGER REFERENCES game_publisher(id),
  platform_id INTEGER REFERENCES platform(id),
  release_year INTEGER
);

CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

",179,6.559500694274902,250,"['game_platform', 'game']"
80,What's Lynn N Tsoflias's job title?,works_cycles,SELECT T2.JobTitle FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'Lynn' AND T1.MiddleName = 'N' AND T1.LastName = 'Tsoflias',"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",439,7.174262285232544,250,['person']
81,"Who is the youngest player to have won the Purple Cap? Hint: Who refers to Player_Name; youngest player to have won the Purple Cap refers to min(subtract(Season_Year, DOB))",soccer_2016,"SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Season AS T2 ON T1.Player_Id = T2.Purple_Cap ORDER BY T2.Season_Year - SUBSTR(T1.DOB, 1, 4) LIMIT 1","CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `win_by` (
  Win_Id INTEGER,
  Win_Type TEXT
);

CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

",251,6.6928770542144775,250,"['player', 'win_by', 'match']"
82,"What is the company's profit on the product that was rated second-highest by David? Hint: profit on net on a single product = SUBTRACT(ListPrice, StandardCost); second highest rating refers to Rating = 4; David is the ReviewerName;",works_cycles,SELECT T2.ListPrice - T2.StandardCost FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ReviewerName = 'David' ORDER BY T1.Rating DESC LIMIT 1,"CREATE TABLE `productreview` (
  ProductReviewID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  ReviewerName TEXT,
  ReviewDate DATETIME,
  EmailAddress TEXT,
  Rating INTEGER,
  Comments TEXT,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salesorderdetail` (
  SalesOrderID INTEGER REFERENCES SalesOrderHeader(SalesOrderID),
  SalesOrderDetailID INTEGER,
  CarrierTrackingNumber TEXT,
  OrderQty INTEGER,
  ProductID INTEGER REFERENCES SpecialOfferProduct(ProductID),
  SpecialOfferID INTEGER REFERENCES SpecialOfferProduct(SpecialOfferID),
  UnitPrice REAL,
  UnitPriceDiscount REAL,
  LineTotal REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",482,7.268195867538452,250,"['productreview', 'product', 'salesorderdetail']"
83,Name the most recent movie rented by Dorothy Taylor. Hint: movie name refers to title; the most recent refers to max(rental_date),movie_3,SELECT T4.title FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'DOROTHY' AND T1.last_name = 'TAYLOR' ORDER BY T2.rental_date DESC LIMIT 1,"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",196,6.594287633895874,250,"['actor', 'customer', 'rental', 'film', 'film_actor']"
84,"Who is the customer with an order shipped on March 5, 2013, in the eastern region? Hint: Who is the customer refers to Customer Name; shipped on March 5, 2013 refers to ""Ship Date"" = '2013-03-05'; eastern region refers to Region = 'East'",superstore,SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Ship Date` = '2013-03-05',"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `east_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",203,6.60148024559021,250,"['central_superstore', 'east_superstore']"
85,Provide the population of Arecibo in 2020. Hint: population of Arecibo in 2020 refers to SUM(population_2020) where county = 'ARECIBO';,address,SELECT SUM(T2.population_2020) FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.county = 'ARECIBO',"CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",183,6.5585126876831055,250,"['area_code', 'zip_data']"
86,Name the project titles created by teacher who acquired a doctor degree. Hint: teacher who acquired a doctor degree refers to teacher_prefix = 'Dr.',donor,SELECT T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_message LIKE 'Donation on behalf of Matt Carpenter because I''m a strong believer in education.',"CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",146,6.5150306224823,250,['projects']
87,"Among customers with the last name of Valdez, who purchased the highest quantity? Hint: highest quantity refers to MAX(Quantity);",sales,SELECT T1.FirstName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.LastName = 'Valdez' ORDER BY T2.Quantity DESC LIMIT 1,"CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",140,6.51102876663208,250,"['sales', 'customers']"
88,Which low income country has a series code of DT.DOD.DECT.CD? Name the country code of it. Hint: IncomeGroup = 'Low income';,world_development_indicators,SELECT T1.CountryCode FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T1.IncomeGroup = 'Low income' AND T2.Seriescode = 'DT.DOD.DECT.CD',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `series` (
  SeriesCode TEXT PRIMARY KEY,
  Topic TEXT,
  IndicatorName TEXT,
  ShortDefinition TEXT,
  LongDefinition TEXT,
  UnitOfMeasure TEXT,
  Periodicity TEXT,
  BasePeriod TEXT,
  OtherNotes INTEGER,
  AggregationMethod TEXT,
  LimitationsAndExceptions TEXT,
  NotesFromOriginalSource TEXT,
  GeneralComments TEXT,
  Source TEXT,
  StatisticalConceptAndMethodology TEXT,
  DevelopmentRelevance TEXT,
  RelatedSourceLinks TEXT,
  OtherWebLinks INTEGER,
  RelatedIndicators INTEGER,
  LicenseType TEXT
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",155,6.527381420135498,250,"['country', 'series', 'countrynotes']"
89,Which product ID do not have any work order ID? Hint: Do not have any work order ID means WorkOrderID is null,works_cycles,SELECT ProductID FROM Product WHERE ProductID NOT IN ( SELECT T1.ProductID FROM Product AS T1 INNER JOIN WorkOrder AS T2 ON T1.ProductID = T2.ProductID ),"CREATE TABLE `workorder` (
  WorkOrderID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  OrderQty INTEGER,
  StockedQty INTEGER,
  ScrappedQty INTEGER,
  StartDate DATETIME,
  EndDate DATETIME,
  DueDate DATETIME,
  ScrapReasonID INTEGER REFERENCES ScrapReason(ScrapReasonID),
  ModifiedDate DATETIME
);

",450,7.190932273864746,250,['workorder']
90,"What is the proportion of white males and females in the police force? Hint: white refers to race = 'W'; male refers to gender = 'M'; female refers to gender = 'F'; proportion of white males = divide(count(officers where race = 'W' and gender = 'M'), count(officers)) * 100%; proportion of white females = divide(count(officers where race = 'W' and gender = 'F'), count(officers)) * 100%",shooting,SELECT CAST(SUM(gender = 'M') AS REAL) / SUM(gender = 'F') FROM officers WHERE race = 'W',"CREATE TABLE `officers` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

",217,6.62308931350708,250,['officers']
91,"Calculate the average net profit of phones which have sales channel of distributor. Hint: net profit can be computed as SUBTRACT(Unit Price, Unit Cost); AVG(net profit) where Product Name = 'Phones' and Sales Channel = 'Distributor';",regional_sales,"SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T2.`Product Name` = 'Phones' AND T1.`Sales Channel` = 'Distributor'","CREATE TABLE `products` (
  ProductID INTEGER,
  Product Name TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",181,6.554279088973999,250,"['products', 'sales orders']"
92,List the genres of the movies which actor id 851 is the star.,movielens,SELECT T2.genre FROM movies2actors AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T1.actorid = T3.actorid WHERE T3.actorid = 851,"CREATE TABLE `movies2actors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  actorid INTEGER PRIMARY KEY REFERENCES actors(None),
  cast_num INTEGER
);

",146,6.5182976722717285,250,['movies2actors']
93,How many open businesses in the City of Phoenix have users left a long review? Hint: open businesses refers to active = 'true'; long review refers to review_length = 'Long',public_review_platform,SELECT COUNT(DISTINCT T2.business_id) FROM Reviews AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id WHERE T1.review_length = 'Long' AND T2.active = 'true' AND T2.city = 'Phoenix',"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",199,6.598329782485962,250,"['reviews', 'business']"
94,How many courses are there for basic or medium undergraduate courses? Hint: basic or medium undergraduate courses refers to courseLevel = 'Level_300'; courses refers to course.course_id,computer_student,SELECT COUNT(course_id) FROM course WHERE courseLevel = 'Level_300',"CREATE TABLE `course` (
  course_id INTEGER,
  courseLevel TEXT
);

",152,6.521261930465698,250,['course']
95,"For the players who played the most PBLA games, who was graduated from Central Missouri State college? Hint: the most PBLA games refers to max(games_played); Central Missouri State college refers to college = 'Central Missouri State'",professional_basketball,"SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'PBLA' AND T2.GP = 10 AND T1.college = 'Central Missouri State' GROUP BY T1.firstName, T1.middleName, T1.lastName ORDER BY COUNT(T2.id) DESC LIMIT 1","CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

CREATE TABLE `players` (
  playerID TEXT PRIMARY KEY,
  useFirst TEXT,
  firstName TEXT,
  middleName TEXT,
  lastName TEXT,
  nameGiven TEXT,
  fullGivenName TEXT,
  nameSuffix TEXT,
  nameNick TEXT,
  pos TEXT,
  firstseason INTEGER,
  lastseason INTEGER,
  height REAL,
  weight INTEGER,
  college TEXT,
  collegeOther TEXT,
  birthDate DATE,
  birthCity TEXT,
  birthState TEXT,
  birthCountry TEXT,
  highSchool TEXT,
  hsCity TEXT,
  hsState TEXT,
  hsCountry TEXT,
  deathDate DATE,
  race TEXT
);

",202,6.6040215492248535,250,"['player_allstar', 'players']"
96,"How many paying subscribers gave a rating to the movie ""One Flew Over the Cuckoo's Nest""? Hint: paying subscribers refer to user_has_payment_method = 1; movie ""One Flew Over the Cuckoo's Nest"" refers to movie_id = 'One Flew Over the Cuckoo''s Nest'",movie_platform,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN ratings_users AS T3 ON T1.user_id = T3.user_id WHERE T2.movie_title = 'One Flew Over the Cuckoo''s Nest' AND T3.user_has_payment_method = 1,"CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",195,6.590468406677246,250,"['ratings', 'movies']"
97,How many 2001 Ferrari Enzo were ordered? Hint: 2001 Ferrari Enzo refers to productName;,car_retails,SELECT SUM(t1.orderNumber) FROM orderdetails AS t1 INNER JOIN products AS t2 ON t1.productCode = t2.productCode WHERE t2.productName = '2001 Ferrari Enzo',"CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

CREATE TABLE `orderdetails` (
  orderNumber INTEGER PRIMARY KEY REFERENCES orders(None),
  productCode TEXT PRIMARY KEY REFERENCES products(None),
  quantityOrdered INTEGER,
  priceEach REAL,
  orderLineNumber INTEGER
);

",155,6.527739524841309,250,"['products', 'orderdetails']"
98,List out the country code and country name of the rich countries using Euro as their currency unit Hint: Non-OECD and OECD countries can be regarded as rich countries for those that are part of the High Income Group;,world_development_indicators,"SELECT DISTINCT T1.CountryCode, T2.CountryName FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.CurrencyUnit = 'Euro' AND (T1.IncomeGroup = 'High income: OECD' OR T1.IncomeGroup = 'High income: nonOECD')","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",166,6.54055118560791,250,"['country', 'countrynotes']"
99,List out all bankrupt students that are able to make payment before due? Hint: make payment before due refers to bool = 'neg';,student_loan,SELECT T1.name FROM filed_for_bankrupcy AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'neg',"CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

CREATE TABLE `bool` (
  name TEXT PRIMARY KEY
);

",177,6.5519468784332275,250,"['no_payment_due', 'bool']"
100,What are the character names for a senator of Venice? Hint: character names refers to CharName; a senator of Venice refers to characters.Description = 'a senator of Venice',shakespeare,SELECT CharName FROM characters WHERE Description = 'a senator of Venice',"CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

",159,6.531591176986694,250,['characters']
101,"What are the occurance of word ""del"" in title ""Any anomalÃ­stic""? Hint: This is not",language_corpus,SELECT T2.occurrences FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'del' AND T3.title = 'Any anomalÃ­stic',"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",152,6.5267438888549805,250,['pages']
102,"List the products whereby the standard cost is $80 more than previous standard cost in history. Hint: SUBTRACT(product.StandardCost, CostHistory.StandardCost)>80",works_cycles,SELECT T1.Name FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.StandardCost - T2.StandardCost > 80 GROUP BY T1.Name,"CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productcosthistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  StandardCost REAL,
  ModifiedDate DATETIME
);

",465,7.233515739440918,250,"['product', 'productcosthistory']"
103,What is the total number of ranking criteria under the ranking system called Shanghai Ranking? Hint: ranking system called Shanghai Ranking refers to system_name = 'Shanghai Ranking';,university,SELECT COUNT(*) FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T1.system_name = 'Shanghai Ranking',"CREATE TABLE `ranking_system` (
  id INTEGER,
  system_name TEXT
);

CREATE TABLE `ranking_criteria` (
  id INTEGER,
  ranking_system_id INTEGER REFERENCES ranking_system(id),
  criteria_name TEXT
);

",173,6.551574945449829,250,"['ranking_system', 'ranking_criteria']"
104,"How many OPPO users participated in events which were held around 12 AM on 1st May,2016? Hint: OPPO refers to phone_brand = 'OPPO'; around 12 AM on 1st May, 2016 refers to timestamp is '2016-05-01'",talkingdata,"SELECT COUNT(T1.device_id) FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND STRFTIME('%Y-%m-%d', T1.`timestamp`) = '2016-05-01'","CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",244,6.682215929031372,250,"['events', 'phone_brand_device_model2']"
105,"What is the employee's last name at 7211 S Hermitage Ave, Chicago, IL? Hint: 7211 S Hermitage Ave refers to address = '7211 S Hermitage Ave'; Chicago refers to city = 'Chicago'; IL refers to state = 'IL'",food_inspection_2,SELECT last_name FROM employee WHERE address = '7211 S Hermitage Ave' AND city = 'Chicago' AND state = 'IL',"CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",183,6.55957818031311,250,['employee']
106,"What is the language of the method used in the solution path ""opendns_diagnosticapp\windows\OpenDnsDiagnostic.sln""? Hint: language refers to Lang;",codebase_comments,SELECT T2.Lang FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'opendns_diagnosticappwindowsOpenDnsDiagnostic.sln',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",156,6.528736114501953,250,"['solution', 'method']"
107,How many businesses in AZ state do not open on Thursday? Hint: do not open on Thursday refers to day_of_week = 'Thursday' AND label_time_4 = 'None';,public_review_platform,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Checkins AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T2.label_time_4 LIKE 'None' AND T1.state LIKE 'AZ' AND T3.day_of_week LIKE 'Thursday',"CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

CREATE TABLE `days` (
  day_id INTEGER,
  day_of_week TEXT
);

",203,6.604292154312134,250,"['business_hours', 'days']"
108,"State the weight of shipments transported by Peterbilt. Hint: ""Peterbilt"" is the make",shipping,SELECT T2.weight FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE make = 'Peterbilt',"CREATE TABLE `driver` (
  driver_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip_code INTEGER,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",135,6.514810800552368,250,"['driver', 'shipment']"
109,How many types of credit cards are there and how many are vista? Hint: type of credit card refers to CardType; CardType = 'Vista';,works_cycles,SELECT COUNT(CardNumber) FROM CreditCard WHERE CardType = 'vista',"CREATE TABLE `creditCard` (
  CreditCardID INTEGER,
  CardType TEXT,
  CardNumber TEXT PRIMARY KEY,
  ExpMonth INTEGER,
  ExpYear INTEGER,
  ModifiedDate DATETIME
);

",456,7.205816030502319,250,['creditCard']
110,Please list any three devices that are owned by female users. Hint: female refers to gender = 'F';,talkingdata,SELECT device_id FROM gender_age WHERE gender = 'F' LIMIT 3,"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",193,6.590347766876221,250,['phone_brand_device_model2']
111,How many times per year does a credit card customer complain about overlimit fees? Hint: credit card customer refers to product = 'Credit card'; about overlimit fees refers to issue = 'Overlimit fee',retail_complains,"SELECT strftime('%Y', `Date received`), COUNT(`Date received`) FROM events WHERE product = 'Credit card' AND issue = 'Overlimit fee' GROUP BY strftime('%Y', `Date received`) HAVING COUNT(`Date received`)","CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",161,6.540979385375977,250,"['events', 'client']"
112,Provide the number of events that happened on 2016/5/6. Hint: on 2016/5/6 refers to timestamp = '2016/5/6 XX:XX:XX';,talkingdata,"SELECT COUNT(event_id) FROM events WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-06'","CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

",221,6.636698007583618,250,['events']
113,What is the title of the episode that received the lowest rating? Hint: lowest rating refers to Min(rating),simpson_episodes,SELECT title FROM Episode ORDER BY rating LIMIT 1;,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",147,6.520878553390503,250,['episode']
114,What is the total average movie directed by the directors who's quality and revenue is 4?,movielens,SELECT CAST(SUM(CASE WHEN T1.d_quality = 4 AND T1.avg_revenue = 4 THEN 1 ELSE 0 END) AS REAL) / COUNT(T2.movieid) FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid,"CREATE TABLE `directors` (
  directorid INTEGER,
  d_quality INTEGER PRIMARY KEY,
  avg_revenue INTEGER PRIMARY KEY
);

CREATE TABLE `movies2directors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  directorid INTEGER PRIMARY KEY REFERENCES directors(None),
  genre TEXT
);

",148,6.517786979675293,250,"['directors', 'movies2directors']"
115,"Among the players who won an award in the year 1983, how many of them play the position of goalie? Hint: position of goalie refers to pos = 'G'",hockey,SELECT COUNT(playerID) FROM AwardsPlayers WHERE pos = 'G' AND year = 1983,"CREATE TABLE `awardsplayers` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

",253,6.700939416885376,250,"['awardsplayers', 'goalies']"
116,"How many business have been reviewed by user ID 3 and how long have this user been with Yelp? Hint: year with yelp = Subtract ('%Y'(CURRENT TIME), user_yelping_since_year)",public_review_platform,"SELECT COUNT(T1.business_id) , strftime('%Y', 'now') - T2.user_yelping_since_year FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.user_id = 3","CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",214,6.628671646118164,250,"['reviews', 'users']"
117,In which region can you find the highest number of Baskin Robbins restaurants? Hint: the highest number refers to max(count(city)); Baskin Robbins restaurant refers to label = 'baskin robbins',restaurant,SELECT T2.region AS num FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.label = 'baskin robbins' GROUP BY T2.region ORDER BY COUNT(T1.city) DESC LIMIT 1,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",156,6.539287567138672,250,"['location', 'generalinfo']"
118,"Please list the IDs of the menus that are DIYs of the restaurant and have the dish ""Clear green turtle"". Hint: IDs of the menus refers to menu_id; menus that are DIYs of the restaurant refers to sponsor is null; Clear green turtle is a name of dish;",menu,SELECT T2.menu_id FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T4.name = 'Clear green turtle' AND T3.sponsor IS NULL,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",178,6.5562779903411865,250,"['dish', 'menuitem']"
119,List the cast and the director of the movie with the id 1949144.,movielens,"SELECT T1.actorid, T2.directorid FROM movies2actors AS T1 INNER JOIN movies2directors AS T2 ON T1.movieid = T2.movieid WHERE T1.movieid = 1949144","CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2directors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  directorid INTEGER PRIMARY KEY REFERENCES directors(None),
  genre TEXT
);

CREATE TABLE `directors` (
  directorid INTEGER,
  d_quality INTEGER PRIMARY KEY,
  avg_revenue INTEGER PRIMARY KEY
);

",149,6.520495176315308,250,"['movies', 'movies2directors', 'directors']"
120,How many people with the name Alex are single and occupying organization level of 1? Hint: Alex refers to FirstName = 'Alex'; single refers to MaritalStatus = 'S',works_cycles,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.FirstName = 'Alex' AND T1.MaritalStatus = 'S' AND T1.OrganizationLevel = 1,"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",463,7.222434043884277,250,['person']
121,"Sate the order number and calculate the net profit for each order under Joshua Bennett. Hint: net profit can be computed as SUBTRACT(Unit Price, Unit Cost); Joshua Bennett is the name of Sales Team;",regional_sales,"SELECT T1.OrderNumber , REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')  FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T2.`Sales Team` = 'Joshua Bennett'","CREATE TABLE `sales team` (
  SalesTeamID INTEGER,
  Sales Team TEXT,
  Region TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",172,6.552067041397095,250,"['sales team', 'sales orders']"
122,"Under the category name of ""Coffee & Tea"", mention any 5 business ID , their state and city.",public_review_platform,"SELECT T2.business_id, T3.state, T3.city FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name = 'Coffee & Tea' LIMIT 5","CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",184,6.56930947303772,250,"['business', 'business_categories', 'categories']"
123,List down any 5 titles in the history genre. Hint: in the history genre refers to GenreType = 'History',shakespeare,SELECT Title FROM works WHERE GenreType = 'History' LIMIT 5,"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",143,6.52437424659729,250,"['works', 'chapters']"
124,How many samples of animal objects are there in image no.660? Hint: samples of animal objects refer to OBJ_SAMPLE_ID where OBJ_CLASS = 'animal'; image no.660 refers to IMG_ID = 660;,image_and_language,SELECT COUNT(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'animal' AND T1.IMG_ID = 660,"CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

",207,6.619590520858765,250,['img_obj']
125,"Provide the occurrence date and location of the deceptive practice due to the unlawful use of recorded sound. Hint: location refers to latitude, longitude; deceptive practice refers to primary_description = 'DECEPTIVE PRACTICE'; unlawful use of recorded sound refers to secondary_description = 'UNLAWFUL USE OF RECORDED SOUND'",chicago_crime,"SELECT T2.date, T2.latitude, T2.longitude FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no WHERE T1.primary_description = 'DECEPTIVE PRACTICE' AND T1.secondary_description = 'UNLAWFUL USE OF RECORDED SOUND'","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `fbi_code` (
  fbi_code_no TEXT PRIMARY KEY,
  title TEXT,
  description TEXT,
  crime_against TEXT
);

",212,6.625533580780029,250,"['crime', 'fbi_code']"
126,What's the name of the football division in the Netherlands? Hint: Netherlands is the name of country;,european_football_1,SELECT name FROM divisions WHERE country = 'Netherlands',"CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",125,6.471722602844238,250,['divisions']
127,"List down the inspection ID with the inspector's comment ""A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served. NO CERTIFIED FOOD MANAGER ON DUTY AT THIS TIME FOODS ARE COOKED AND SERVED SERIOUS CITATION ISSUED"" and inspection category of Personnel. Hint: inspector's comment ""A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served. NO CERTIFIED FOOD MANAGER ON DUTY AT THIS TIME FOODS ARE COOKED AND SERVED SERIOUS CITATION ISSUED"" refers to inspector_comment = 'A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served.FOUND NO CITY OF CHICAGO SANITATION CERTIFICATE POSTED OR VALID DOCUMENTATION DURING THIS INSPECTION.'; inspection category of Personnel refers to category = 'Personnel'",food_inspection_2,SELECT T2.inspection_id FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.category = 'Personnel' AND T2.inspector_comment = 'A certified food service manager must be present in all establishments at which potentially hazardous food is prepared or served.FOUND NO CITY OF CHICAGO SANITATION CERTIFICATE POSTED OR VALID DOCUMENTATION DURING THIS INSPECTION.',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

",354,6.949749231338501,250,"['inspection', 'violation']"
128,"Calculate the percentage of bronze medals won by men's basketball players. Hint: DIVIDE(COUNT(competitor_id where medal_name = 'Bronze'), COUNT(competitor_id)) as percentage where event_name = 'Basketball Men''s Basketball';",olympics,SELECT CAST(COUNT(CASE WHEN T4.medal_name = 'Bronze' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.person_id) FROM competitor_event AS T1 INNER JOIN games_competitor AS T2 ON T1.competitor_id = T2.id INNER JOIN event AS T3 ON T1.event_id = T3.id INNER JOIN medal AS T4 ON T1.medal_id = T4.id WHERE T3.event_name LIKE 'Basketball Men%s Basketball',"CREATE TABLE `competitor_event` (
  event_id INTEGER REFERENCES event(id),
  competitor_id INTEGER REFERENCES games_competitor(id),
  medal_id INTEGER REFERENCES medal(id)
);

CREATE TABLE `event` (
  id INTEGER,
  sport_id INTEGER REFERENCES sport(id),
  event_name TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

CREATE TABLE `medal` (
  id INTEGER,
  medal_name TEXT
);

",214,6.62498664855957,250,"['competitor_event', 'event', 'games_competitor', 'medal']"
129,"What is the short name for the journal that published the paper ""A Case of Unilateral Ashy Dermatosis""? Hint: A Case of Unilateral Ashy Dermatosis refer to Title",authors,SELECT T2.ShortName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Title = 'A Case of Unilateral Ashy Dermatosis',"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",158,6.53625750541687,250,"['paper', 'journal']"
130,"What is the location coordinates of the bike station from which the bike for the trip that last the longest was borrowed? Hint: location coordinates refers to (lat, long); bike that was borrowed the longest refers to MAX(duration);",bike_share_1,"SELECT T2.lat, T2.long FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.duration = ( SELECT MAX(T1.duration) FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name )","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",156,6.535728454589844,250,"['trip', 'station']"
131,How many inspections were sanitarian Joshua Rosa responsible for in 2010? Hint: in 2010 refers to inspection_date like '2010%',food_inspection_2,"SELECT COUNT(T2.inspection_id) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE strftime('%Y', T2.inspection_date) = '2010' AND T1.first_name = 'Joshua' AND T1.last_name = 'Rosa'","CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",159,6.543004512786865,250,"['inspection', 'employee']"
132,"For movies with the keyword of ""civil war"", calculate the average revenue generated by these movies. Hint: keyword of ""civil war"" refers to keyword_name = 'civil war'; average revenue = AVG(revenue)",movies_4,SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'civil war',"CREATE TABLE `keyword` (
  keyword_id INTEGER,
  keyword_name TEXT
);

CREATE TABLE `movie_keywords` (
  movie_id INTEGER REFERENCES movie(None),
  keyword_id INTEGER REFERENCES keyword(None)
);

",228,6.658229112625122,250,"['keyword', 'movie_keywords']"
133,"Among the coaches who have received an award after the year 1940, how many of them have already died? Hint: after the year 1940 refers to year>1940; have already died refers to deathYear IS NOT NULL",hockey,SELECT COUNT(T1.coachID) FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.deathYear IS NOT NULL AND T2.year > 1940,"CREATE TABLE `awardsCoaches` (
  coachID TEXT REFERENCES Coaches(coachID),
  award TEXT,
  year INTEGER,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  notes TEXT,
  g INTEGER,
  w INTEGER,
  l INTEGER,
  t INTEGER,
  postg TEXT,
  postw TEXT,
  postl TEXT,
  postt TEXT
);

",267,6.7554545402526855,250,"['awardsCoaches', 'coaches']"
134,"How frequently did the words 1 and 25 appear together? Hint: How frequently refers to occurrences;  word 1 refers to wid = 1; word 25 refers to wid = 25; appear together means pair, which is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word;  w1st or w2nd = wid = 1; w1st or w2nd = wid = 25;",language_corpus,SELECT occurrences FROM biwords WHERE w1st = 1 AND w2nd = 25,"CREATE TABLE `biwords` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  w1st INTEGER PRIMARY KEY REFERENCES words(wid),
  w2nd INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",242,6.683803081512451,250,['biwords']
135,How many users manage to get uber votes for all of the review category? Find out what are the user average star. Hint: users refer to user_id; uber votes for all of the review category refer to review_votes_funny = 'uber' AND review_votes_useful = 'uber' AND review_votes_cool = 'uber';,public_review_platform,"SELECT COUNT(T2.user_id) AS USER_IDS, T2.user_average_stars FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.review_votes_funny = 'Uber' AND T1.review_votes_useful = 'Uber' AND T1.review_votes_cool = 'Uber'","CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `tips` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  likes INTEGER,
  tip_length TEXT
);

",241,6.677533149719238,250,"['reviews', 'tips']"
136,"What is the total profit of ""Memorex Froggy Flash Drive 8 GB in south superstore? Hint: ""Memorix Froggy Flash Drive 8 GB"" is the ""Product Name""",superstore,SELECT SUM(T1.Profit) FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` GROUP BY T2.`Product Name` = 'Memorix Froggy Flash Drive 8 GB',"CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

CREATE TABLE `south_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",171,6.554689884185791,250,"['product', 'south_superstore']"
137,"What is the age of the patient with hypertension named Giovanni Russel? Hint: age refers to SUBTRACT(strftime('%Y', deathdate), strftime('%Y', birthdate)); hypertension refers to conditions where DESCRIPTION = 'Hypertension';",synthea,"SELECT strftime('%Y', T2.deathdate) - strftime('%Y', T2.birthdate) AS age FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.first = 'Giovanni' AND T2.last = 'Russel' AND T1.DESCRIPTION = 'Hypertension'","CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",210,6.625292539596558,250,['patients']
138,Please list any three order numbers that have been shipped using Speedy Express. Hint: Speedy Express is the name of the shipping company; three order numbers refer to OrderID LIMIT 3;,retail_world,SELECT T1.OrderID FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Speedy Express' LIMIT 3,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",175,6.55329155921936,250,"['orders', 'shippers']"
139,How many of the restaurants with the lowest risk level failed the complaint inspection type? Hint: restaurant refers to facility_type = 'Restaurant'; the lowest risk level refers to min(risk_level); failed refers to results = 'Fail'; the complaint inspection type refers to inspection_type = 'Complaint',food_inspection_2,SELECT COUNT(DISTINCT T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.risk_level = '1' AND T2.inspection_type = 'Complaint' AND T1.facility_type = 'Restaurant' AND T2.results = 'Fail',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

",184,6.568092346191406,250,"['inspection', 'establishment', 'violation']"
140,"What is the full name of the team with the fastest growth in winning rate in the 'ABA' league from 1972 to 1973? Hint: ""ABA"" is the lgID; from 1972 to 1973 refers to year = 1972 and year = 1973; team with the fastest growth in winning rate = Max(Subtract(Divide(won where year = 1973, Sum(won, lost)),Divide(won where year = 1972, Sum(won, lost))))",professional_basketball,SELECT T1.name FROM teams AS T1 INNER JOIN ( SELECT * FROM teams WHERE lgID = 'ABA' AND year = 1972 ) AS T2 ON T1.tmID = T2.tmID WHERE T1.lgID = 'ABA' AND T1.year = 1973 ORDER BY (CAST(T1.won AS REAL) / (T1.won + T1.lost) - (CAST(T2.won AS REAL) / (T2.won + T2.lost))) DESC LIMIT 1,"CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",280,6.777298450469971,250,['teams']
141,"Among the products that have a retail price greater than 1,000, how many products were shipped via ship? Hint: products refer to l_partkey; retail price greater than 1,000 refers to p_retailprice > 1000; shipped via ship refers to l_shipmode = 'SHIP';",retails,SELECT COUNT(T1.ps_suppkey) FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_retailprice > 1000 AND T2.l_shipmode = 'SHIP',"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

CREATE TABLE `part` (
  p_partkey INTEGER,
  p_type TEXT,
  p_size INTEGER,
  p_brand TEXT,
  p_name TEXT,
  p_container TEXT,
  p_mfgr TEXT,
  p_retailprice REAL,
  p_comment TEXT
);

",196,6.613202095031738,250,"['lineitem', 'part']"
142,"How many condiments were sold in 1997? Hint: ""Condiments"" is the CategoryName; in 1997 refers to year(OrderDate) = 1997;",retail_world,SELECT COUNT(T2.ProductID) FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID INNER JOIN `Order Details` AS T3 ON T2.ProductID = T3.ProductID INNER JOIN Orders AS T4 ON T3.OrderID = T4.OrderID WHERE T1.CategoryName = 'Condiments' AND T1.CategoryID = 2 AND T4.OrderDate LIKE '1997%',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `categories` (
  CategoryID INTEGER,
  CategoryName TEXT,
  Description TEXT
);

",179,6.559645652770996,250,"['products', 'categories']"
143,How many users mildly likes the 7 Minute Workout app and when was it last updated? Hint: mildly likes the app refers to Sentiment_Polarity> = 0 and Sentiment_Polarity<0.5;,app_store,"SELECT COUNT(T2.Sentiment_Polarity), T1.""Last Updated"" FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = '7 Minute Workout' AND T2.Sentiment_Polarity BETWEEN 0 AND 0.5","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",154,6.531446933746338,250,"['playstore', 'user_reviews']"
144,Name all students enlisted in the foreign legion. Hint: in the foreign legion organ = 'foreign_legion';,student_loan,SELECT name FROM enlist WHERE organ = 'foreign_legion',"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

",177,6.555210828781128,250,['enlist']
145,Identify by conference full name all papers in which a journal was not published but a conference. Hint: journal was not published but a conference refers to ConferenceId ! = 0 And JournalId = 0 Year ! = 0,authors,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.ConferenceId != 0 AND T1.JournalId = 0 AND T1.Year != 0,"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

CREATE TABLE `conference` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",159,6.531984090805054,250,"['paper', 'journal', 'conference']"
146,"Give the name and the position of the cbsa officer from the area with the zip code 45503. Hint: position refers to latitude, longitude",address,"SELECT T1.CBSA_name, T2.latitude, T2.longitude FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T2.zip_code = 45503 GROUP BY T1.CBSA_name, T2.latitude, T2.longitude","CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `cbsa` (
  CBSA INTEGER,
  CBSA_name TEXT,
  CBSA_type TEXT
);

",168,6.5443103313446045,250,"['area_code', 'cbsa']"
147,"Among the objects that have multiple relations, how many images whose captions for the prediction class ids are ""on""? Hint: objects that have multiple relations refers to OBJ1_SAMPLE_ID ! = OBJ2_SAMPLE_ID; captions for the prediction class ids are ""on"" refers to PRED_CLASS = 'on'",image_and_language,SELECT COUNT(T2.PRED_CLASS_ID) FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.OBJ1_SAMPLE_ID != T1.OBJ2_SAMPLE_ID AND T2.PRED_CLASS = 'on',"CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

CREATE TABLE `pred_classes` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

",224,6.64458155632019,250,"['img_rel', 'pred_classes']"
148,"Among all orders updated in 2022, identify the percentage that has been returned. Hint: order updated in 2022 refers to SUBSTR(status_date, 1, 4) = '2022'; has been returned refers to status_value = 'Returned'; percentage = Divide (Count(status_value = 'Returned'), Count(status_value)) * 100",books,"SELECT CAST(SUM(CASE WHEN T1.status_value = 'Returned' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id WHERE STRFTIME('%Y', T2.status_date) = '2022'","CREATE TABLE `order_history` (
  history_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  status_id INTEGER REFERENCES order_status(None),
  status_date DATETIME
);

CREATE TABLE `order_line` (
  line_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  book_id INTEGER REFERENCES book(None),
  price REAL
);

",258,6.746438264846802,250,"['order_history', 'order_line']"
149,"Among the movies with drama genre, what is the percentage of the actors with net worth greater than $400,000,000.00? Hint: drama genre refers to Genre = 'Drama'; net worth greater than $400,000,000.00 refers to NetWorth > '$400,000,000.00'; percentage = divide(count(ActorID where NetWorth > '$400,000,000.00'), COUNT(ActorID))*100%",movie,"SELECT SUM(CASE WHEN CAST(REPLACE(REPLACE(T3.NetWorth, ',', ''), '$', '') AS REAL) > 400000000 THEN 1 ELSE 0 END) - SUM(CASE WHEN CAST(REPLACE(REPLACE(T3.NetWorth, ',', ''), '$', '') AS REAL) < 400000000 THEN 1 ELSE 0 END) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Drama'","CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

",238,6.671737194061279,250,"['movie', 'actor']"
150,"What is the keyword ID of the movie with the title of ""Sin City""? Hint: title of ""Sin City"" refers to title = 'Sin City'",movies_4,SELECT T2.keyword_id FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Sin City',"CREATE TABLE `movie_keywords` (
  movie_id INTEGER REFERENCES movie(None),
  keyword_id INTEGER REFERENCES keyword(None)
);

",211,6.616312742233276,250,['movie_keywords']
151,"How many tweets in total were posted by a user in Argentina? Hint: ""Argentina"" is the Country",social_media,SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.Country = 'Argentina' LIMIT 1,"CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

CREATE TABLE `location` (
  LocationID INTEGER,
  Country TEXT,
  State TEXT,
  StateCode TEXT,
  City TEXT
);

",127,6.470430374145508,250,"['twitter', 'location']"
152,"Give the full name of the actor with the highest rental rate. Hint: full name refers to first_name, last_name; the highest rental rate refers to max(rental_rate)",movie_3,"SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T3.film_id = T2.film_id ORDER BY T3.rental_rate DESC LIMIT 1","CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",204,6.624236106872559,250,"['actor', 'rental']"
153,"What is the average number of book pages written by Zilpha Keatley Snyder? Hint: ""Zilpha Keatley Snyder"" is the author_name; average number of book pages refers to AVG(num_pages)",books,SELECT AVG(T3.num_pages) FROM book_author AS T1 INNER JOIN author AS T2 ON T1.author_id = T2.author_id INNER JOIN book AS T3 ON T3.book_id = T1.book_id WHERE T2.author_name = 'Zilpha Keatley Snyder',"CREATE TABLE `book_author` (
  book_id INTEGER PRIMARY KEY REFERENCES book(book_id),
  author_id INTEGER PRIMARY KEY REFERENCES author(author_id)
);

CREATE TABLE `author` (
  author_id INTEGER,
  author_name TEXT
);

",220,6.64604926109314,250,"['book_author', 'author']"
154,How many publishers published the Minecraft game? Hint: Minecraft refers to game_name = 'Minecraft';,video_games,SELECT COUNT(T2.publisher_id) FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id WHERE T1.game_name = 'Minecraft',"CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

",151,6.540117502212524,250,"['game_publisher', 'game']"
155,What is the average population growth rate of countries where more than 3 languages are used?,mondial_geo,SELECT SUM(T3.Population_Growth) / COUNT(T3.Country) FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country INNER JOIN population AS T3 ON T3.Country = T2.Country WHERE T2.Country IN ( SELECT Country FROM language GROUP BY Country HAVING COUNT(Country) > 3 ) GROUP BY T3.Country,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `population` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population_Growth REAL,
  Infant_Mortality REAL
);

",264,6.7626848220825195,250,"['country', 'population']"
156,How many of the countries do not have special notes? List the long name. Hint: do not have special notes implies SpecialNotes are NULL;,world_development_indicators,SELECT COUNT(LongName) FROM Country WHERE SpecialNotes = '' UNION SELECT longname FROM country WHERE specialnotes = '',"CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",147,6.539978981018066,250,"['countrynotes', 'country']"
157,"Among the employees who have more than 10 hours of sick leave, how many of them wish to receive e-mail promotions? Hint: Contact does wish to receive e-mail promotions refers to EmailPromotion = (1,2); more than 10 hours of sick leave refer to SickLeaveHours >10;",works_cycles,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1 AND T1.SickLeaveHours > 10,"CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",496,7.313424825668335,250,['employee']
158,How many suppliers have their accounts in debt? Hint: account in debt refers to s_acctbal < 0,retails,SELECT COUNT(s_suppkey) FROM supplier WHERE s_acctbal < 0,"CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

",147,6.535258769989014,250,['supplier']
159,"Calculate the total average number of papers published from 2002 to 2010 under the conference ""Information and Knowledge Engineering"". Hint: average number of papers refers to DIVIDE(count(id), 9); published from 2002 to 2010 refers to Year BETWEEN 2002 AND 2010; 'Information and Knowledge Engineering' is the FullName of conference;",authors,SELECT CAST(COUNT(T1.Id) AS REAL) / COUNT(DISTINCT T1.Year) FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T2.FullName = 'Information and Knowledge Engineering' AND T1.Year >= 2002 AND T1.Year <= 2010,"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `conference` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",211,6.629650592803955,250,"['paper', 'conference']"
160,What is the largest number of films rented per customer? Hint: the largest number of films refers to MAX(rental_id),movie_3,SELECT COUNT(rental_id) FROM rental GROUP BY customer_id ORDER BY COUNT(rental_id) DESC LIMIT 1,"CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",192,6.586580514907837,250,"['rental', 'customer']"
161,List all the Jewish current legislators that had served in Florida. Hint: Jewish refers to religion_bio = 'Jewish'; in Florida refers to state = 'FL';,legislator,"SELECT T1.first_name, T1.last_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.religion_bio = 'Jewish' AND T2.state = 'FL' GROUP BY T1.first_name, T1.last_name","CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `current-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  caucus TEXT,
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT PRIMARY KEY,
  fax TEXT,
  last TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",155,6.544910192489624,250,"['current', 'current-terms']"
162,"Provide the full name of all the actors of the film ""Ending Crowds"". Hint: full name refers to first_name, last_name; film ""Ending Crowds"" refers to title = 'ENDING CROWDS'",movie_3,"SELECT T2.first_name, T2.last_name FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.title = 'ENDING CROWDS'","CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",214,6.635661840438843,250,"['film_text', 'actor', 'film_actor']"
163,"What is the detailed product of the complaint filed by Diesel Galloway on 2014/7/3? Hint: detailed product refers to ""sub-product""; on 2014/7/3 refers to ""Date received"" = '2014-07-03';",retail_complains,SELECT T2.`Sub-product` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Diesel' AND T1.last = 'Galloway' AND T2.`Date received` = '2014-07-03',"CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",185,6.575171947479248,250,"['events', 'client']"
164,How much salary does Jessica Anthony receive?,food_inspection_2,SELECT salary FROM employee WHERE first_name = 'Jessica' AND last_name = 'Anthony',"CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",126,6.480933904647827,250,['employee']
165,"List down the email of client whose complaint is type ""PS"".",retail_complains,SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'PS',"CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",130,6.516955375671387,250,"['events', 'client']"
166,In which organization did Constantine Makris win the most awards? Hint: win refers to result = 'Winner'; the most awards refers to max(count(award_id)),law_episode,SELECT T2.organization FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T1.name = 'Constantine Makris' AND T2.result = 'Winner' GROUP BY T2.organization ORDER BY COUNT(T2.award_id) DESC LIMIT 1,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  series TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  person_id TEXT REFERENCES Person(person_id),
  role TEXT,
  result TEXT
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",157,6.545053005218506,250,"['award', 'person']"
167,How much is the minimum salary given to the position with the most complex work? Hint: most complex work refers to MAX(educationrequired); minimum salary refers to minsalary,human_resources,SELECT minsalary FROM position ORDER BY educationrequired DESC LIMIT 1,"CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

",142,6.5260045528411865,250,['position']
168,Did the number of cases with Vehicle as subject weapon increase or decrease from year 2007 to 2008. State the difference. Hint: number of cases refers to count(case_number); with Vehicle as subject weapon refers to subject_weapon = 'Vehicle'; year 2007 refers to date between '2007-01-01' and '2007-12-31'; year 2008 refers to date between '2008-01-01' and '2008-12-31',shooting,"SELECT SUM(IIF(STRFTIME('%Y', date) = '2007', 1, 0)) - SUM(IIF(STRFTIME('%Y', date) = '2008', 1, 0)) FROM incidents WHERE subject_weapon = 'Vehicle'","CREATE TABLE `incidents` (
  case_number TEXT PRIMARY KEY,
  date DATE,
  location TEXT,
  subject_statuses TEXT,
  subject_weapon TEXT,
  subjects TEXT,
  subject_count INTEGER,
  officers TEXT
);

CREATE TABLE `subjects` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

",243,6.691373109817505,250,"['incidents', 'subjects']"
169,"Calculate the percentage of American cars among all cars. Hint: American car refers to country = 'USA'; percentage = divide(count(ID where country = 'USA'), count(ID)) * 100%",cars,SELECT CAST(SUM(CASE WHEN T3.country = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country,"CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",154,6.544170141220093,250,"['country', 'production']"
170,Which are the rivers that flows to Black Sea? Hint: Black Sea is a sea located in Eastern Europe and Western Asia,mondial_geo,SELECT Name FROM river WHERE Sea = 'Black Sea',"CREATE TABLE `river` (
  Name TEXT PRIMARY KEY,
  River TEXT,
  Lake TEXT REFERENCES lake(None),
  Sea TEXT,
  Length REAL,
  SourceLongitude REAL,
  SourceLatitude REAL,
  Mountains TEXT,
  SourceAltitude REAL,
  EstuaryLongitude REAL,
  EstuaryLatitude REAL
);

CREATE TABLE `geo_sea` (
  Sea TEXT PRIMARY KEY REFERENCES sea(None),
  Country TEXT PRIMARY KEY REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None)
);

",271,6.776485204696655,250,"['river', 'geo_sea']"
171,Write the names of the podcasts in the music category that have a rating greater than 3. Hint: music category refers to category = 'music'; rating greater than 3 refers to rating > 3; name of the podcast refers to title,music_platform_2,SELECT DISTINCT T2.title FROM categories AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.category = 'music' AND T2.rating > 3,"CREATE TABLE `reviews` (
  podcast_id TEXT REFERENCES podcasts(None),
  title TEXT,
  content TEXT,
  rating INTEGER,
  author_id TEXT,
  created_at TEXT
);

CREATE TABLE `categories` (
  podcast_id TEXT PRIMARY KEY REFERENCES podcasts(None),
  category TEXT PRIMARY KEY
);

",162,6.550966024398804,250,"['reviews', 'categories']"
172,What is the average star rating given by female customers to brand ID 10018 from 1/25/2015 to 3/10/2015? Hint: average star rating = AVG(StarRating); female customers refers to Gender = 'F; from 1/25/2015 to 3/10/2015 refers to ReviewDate BETWEEN '2015-01-25' AND '2015-03-10';,beer_factory,SELECT AVG(T2.StarRating) FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.BrandID = 10018 AND T1.Gender = 'F' AND T2.ReviewDate BETWEEN '2013-01-25' AND '2015-03-10',"CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

",247,6.700567960739136,250,['rootbeerreview']
173,How many events have happened on the device of the youngest female user? Hint: youngest refers to MIN(age); female refers to gender = 'F';,talkingdata,"SELECT COUNT(T1.event_id) FROM events AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.gender = 'F' GROUP BY T1.event_id, T2.age ORDER BY T2.age LIMIT 1","CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

",204,6.6250505447387695,250,"['events', 'gender_age']"
174,Identify the name and position of the player who has committed the most rule violations. Hint: name of the player refers to PlayerName; position of the player refers to position_info; committed the most rule violations refers to MAX(PIM);,ice_hockey_draft,"SELECT T2.PlayerName, T2.position_info FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.PIM = ( SELECT MAX(PIM) FROM SeasonStatus )","CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

",166,6.560070037841797,250,"['playerinfo', 'seasonstatus']"
175,What is the name of male and white actor with actor ID 439? Hint: male refers to Gender = 'Male'; white refers to Ethnicity = 'White',movie,SELECT Name FROM actor WHERE ActorID = 439 AND Gender = 'Male' AND Ethnicity = 'White',"CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

",145,6.532610893249512,250,['actor']
176,Provide the categories and fines for the inspections done by Lisa Tillman in January 2014. Hint: in January 2014 refers to inspection_date like '2014-01%',food_inspection_2,"SELECT DISTINCT T4.category, T3.fine FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id INNER JOIN violation AS T3 ON T1.inspection_id = T3.inspection_id INNER JOIN inspection_point AS T4 ON T3.point_id = T4.point_id WHERE T2.first_name = 'Lisa' AND T2.last_name = 'Tillman' AND strftime('%Y-%m', T1.inspection_date) = '2014-01'","CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",169,6.55938982963562,250,"['inspection', 'employee']"
177,"Which coach has the most 'won' than 'lost' in year '1988'? Hint: in year '1988' refers to year = 1988; the most 'won' than 'lost' refers to max(subtract(won, lost))",professional_basketball,SELECT coachID FROM coaches WHERE year = 1988 ORDER BY won - lost DESC LIMIT 1,"CREATE TABLE `awards_coaches` (
  id INTEGER,
  year INTEGER REFERENCES coaches(year),
  coachID TEXT REFERENCES coaches(coachID),
  award TEXT,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES teams(year),
  tmID TEXT PRIMARY KEY REFERENCES teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  won INTEGER,
  lost INTEGER,
  post_wins INTEGER,
  post_losses INTEGER
);

",213,6.637480974197388,250,"['awards_coaches', 'coaches']"
178,What's the weight of the player who had the most Power Play Goals in the 21st century? Hint: 21st century refers to year >2000; Power play goals refers to PPG,hockey,"SELECT T1.weight FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T2.year > 2000 GROUP BY T1.playerID, T1.weight ORDER BY SUM(T2.PPG) DESC LIMIT 1","CREATE TABLE `scoring` (
  playerID TEXT REFERENCES Master(playerID),
  year INTEGER REFERENCES Teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  pos TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  Pts INTEGER,
  PIM INTEGER,
  +/- TEXT,
  PPG TEXT,
  PPA TEXT,
  SHG TEXT,
  SHA TEXT,
  GWG TEXT,
  GTG TEXT,
  SOG TEXT,
  PostGP TEXT,
  PostG TEXT,
  PostA TEXT,
  PostPts TEXT,
  PostPIM TEXT,
  Post+/- TEXT,
  PostPPG TEXT,
  PostPPA TEXT,
  PostSHG TEXT,
  PostSHA TEXT,
  PostGWG TEXT,
  PostSOG TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",260,6.749963045120239,250,"['scoring', 'teams']"
179,List out the long name of countries using series code as DT.DOD.DSTC.CD,world_development_indicators,SELECT T1.LongName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.SeriesCode = 'DT.DOD.DSTC.CD',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",139,6.524991512298584,250,"['country', 'countrynotes']"
180,How many females were members of the past legislators? Hint: female refers to gender_bio = 'F',legislator,SELECT COUNT(*) FROM historical WHERE gender_bio = 'F',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",143,6.53456974029541,250,"['historical', 'historical-terms']"
181,What is the total number of flights that have Oklahoma as their origin? Hint: Oklahoma as origin refers to Origin = 'OKC';,airline,SELECT COUNT(*) AS num FROM Airlines WHERE Origin = 'OKC',"CREATE TABLE `airports` (
  Code TEXT PRIMARY KEY,
  Description TEXT
);

",136,6.522092342376709,250,['airports']
182,"What is the average star rating of the episodes Jim Bracchitta has worked on? Hint: average star rating = divide(sum(stars), count(episode_id)) where name = 'Jim Bracchitta'",law_episode,SELECT CAST(SUM(T3.stars) AS REAL) / COUNT(T2.episode_id) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.person_id = T2.person_id INNER JOIN Vote AS T3 ON T2.episode_id = T3.episode_id WHERE T3.stars = 1 AND T1.name = 'Jim Bracchitta',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",169,6.561710834503174,250,"['credit', 'episode']"
183,What is the account balance of the supplier with the most parts? Hint: account balance refers to s_acctbal; the most parts refers to max(count(ps_suppkey)),retails,"SELECT T.s_acctbal FROM ( SELECT T1.s_acctbal, COUNT(T2.ps_suppkey) AS num FROM supplier AS T1 INNER JOIN partsupp AS T2 ON T1.s_suppkey = T2.ps_suppkey GROUP BY T1.s_suppkey ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

",164,6.55689549446106,250,"['partsupp', 'supplier']"
184,Please list the names of all the ranking criteria of Harvard University in 2011. Hint: in 2011 refers to year 2011; Harvard University refers to university_name = 'Harvard University'; names of all the ranking criteria refers to criteria_name,university,SELECT T1.criteria_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id INNER JOIN university AS T3 ON T3.id = T2.university_id WHERE T3.university_name = 'Harvard University' AND T2.year = 2011,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

CREATE TABLE `ranking_criteria` (
  id INTEGER,
  ranking_system_id INTEGER REFERENCES ranking_system(id),
  criteria_name TEXT
);

",190,6.5814528465271,250,"['university', 'university_ranking_year', 'ranking_criteria']"
185,How many businesses are opened for 24 hours? Hint: opened for 24 hours refers to attribute_name = 'Open 24 Hours' AND attribute_value = 'true',public_review_platform,SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value LIKE 'TRUE' AND T1.attribute_name LIKE 'Open 24 Hours',"CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

",202,6.618848562240601,250,"['business_attributes', 'attributes']"
186,Which away team in the division of Bundesliga has the highest final time goals? Hint: Bundesliga is a name of division; the highest final time goals refers to MAX(FTAG);,european_football_1,SELECT T1.AwayTeam FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div=T2.division WHERE T2.name = 'Bundesliga' ORDER BY T1.FTAG DESC LIMIT 1,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",145,6.535362005233765,250,"['matchs', 'divisions']"
187,"What is the total number of active businesses in AZ with a low review count? Hint: active businesses refers to active = 'true'; in AZ refers to state = 'AZ'
",public_review_platform,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ' AND active LIKE 'True' AND review_count LIKE 'low',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",200,6.618330240249634,250,['business']
188,Give the title of the episode won in Primetime Emmy Awards 2009. Hint: won refers to result = 'Winner'; in Primetime Emmy Awards refers to organization = 'Primetime Emmy Awards'; 2009 refers to year = 2009,simpson_episodes,SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.organization = 'Primetime Emmy Awards' AND T1.year = 2009 AND T1.result = 'Winner';,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

",184,6.563593626022339,250,['award']
189,What are the total quantities of the items ordered by customer 101660 on 10/5/1995? Hint: total quantity refers to sum(l_quantity); customer 101660 refers to o_custkey = 101660; on 10/5/1995 refers to o_orderdate = '1995-10-05',retails,SELECT SUM(T2.l_quantity) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderdate = '1995-10-05' AND T1.o_custkey = 101660,"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",220,6.628667831420898,250,['lineitem']
190,"Among the users whose fan is medium, how many users received high compliments from other users. Hint: is medium refers to user_fans = 'Medium'; high compliments refers to number_of_compliments = 'High'",public_review_platform,SELECT COUNT(T1.user_id) FROM Users AS T1 INNER JOIN Users_Compliments AS T2 ON T1.user_id = T2.user_id WHERE T2.number_of_compliments = 'High' AND T1.user_fans = 'Medium',"CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

CREATE TABLE `users_compliments` (
  compliment_id INTEGER PRIMARY KEY REFERENCES Compliments(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  number_of_compliments TEXT
);

",210,6.615069627761841,250,"['users', 'users_compliments']"
191,What is the model of the oldest user's device? Hint: model of the device refers to device_model; oldest user refers to MAX(age);,talkingdata,SELECT T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id ORDER BY T2.age DESC LIMIT 1,"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",203,6.6041765213012695,250,['phone_brand_device_model2']
192,What is the brand of the youngest user's device? Hint: brand of the device refers to phone_brand; youngest user refers to MIN(age);,talkingdata,SELECT device_model FROM phone_brand_device_model2 WHERE device_id IN ( SELECT device_id FROM gender_age WHERE age = ( SELECT MIN(age) FROM gender_age ) ),"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

",205,6.609785079956055,250,"['phone_brand_device_model2', 'gender_age']"
193,Give me the name and menu price of dishes that were free. Hint: dishes that were free refers to lowest_price = 0;,menu,"SELECT T2.name, T1.price FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE T2.lowest_price = 0","CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",137,6.513102293014526,250,"['dish', 'menuitem']"
194,How many cancelled flights are there? Hint: cancelled flights refers to CANCELLED = 1;,airline,SELECT COUNT(*) FROM Airlines WHERE CANCELLED = 1,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",130,6.5068278312683105,250,['airlines']
195,For which state did current legislator Sherrod Brown serve during his term that started on 1993/1/5? Hint: Sherrod Brown is an full official name; started on 1993/1/5 refers to start = '1993-01-05';,legislator,SELECT T1.state FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.start = '1993-01-05' AND T2.official_full_name = 'Sherrod Brown',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",183,6.562218189239502,250,"['historical', 'historical-terms']"
196,What is the google entity ID of Benjamin Hawkins?,legislator,SELECT google_entity_id_id FROM historical WHERE first_name = 'Benjamin' AND last_name = 'Hawkins',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",128,6.46978235244751,250,"['historical', 'historical-terms']"
197,How many object classes are there in the database? Hint: object classes refers to OBJ_CLASS,image_and_language,SELECT COUNT(OBJ_CLASS_ID) FROM OBJ_CLASSES,"CREATE TABLE `OBJ_CLasSES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",167,6.542467355728149,250,['OBJ_CLasSES']
198,Please list the titles of the episodes that have over 200 voters voting a 10 in star score. Hint: over 200 votes refers to votes > 200; 10 in star score refers to stars = 10,simpson_episodes,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.votes > 200 AND T2.stars = 10;,"CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",176,6.552434921264648,250,['vote']
199,Which high income group countries are from Asia? Hint: Asia is the name of the region;,world_development_indicators,"SELECT CountryCode, Region FROM Country WHERE (IncomeGroup = 'High income: OECD' OR IncomeGroup = 'High income: nonOECD') AND Region LIKE '%Asia%'","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",137,6.511797666549683,250,['country']
200,"List the title, price and publication date for all sales with 'ON invoice' payment terms. Hint: publication date refers to pubdate; payment terms refers to payterms; payterms = 'ON invoice'",book_publishing_company,"SELECT T2.title, T2.price, T2.pubdate FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id WHERE T1.payterms = 'ON invoice'","CREATE TABLE `sales` (
  stor_id TEXT PRIMARY KEY REFERENCES stores(stor_id),
  ord_num TEXT PRIMARY KEY,
  ord_date DATETIME,
  qty INTEGER,
  payterms TEXT,
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id)
);

CREATE TABLE `titleauthor` (
  au_id TEXT PRIMARY KEY REFERENCES authors(au_id),
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id),
  au_ord INTEGER,
  royaltyper INTEGER
);

",185,6.565616607666016,250,"['sales', 'titleauthor']"
201,Write down the top ten menus with the highest dish count. Hint: highest dish count refers to MAX(dish_count);,menu,SELECT name FROM Menu GROUP BY name ORDER BY dish_count DESC LIMIT 10,"CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

",137,6.51467752456665,250,"['menuitem', 'dish']"
202,How many athletes over the age of 59 competed in the 2016 Summer Olympics? Hint: over the age of 59 refers to age > 59; the 2016 Summer Olympics refer to games_name = '2016 Summer';,olympics,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '2016 Summer' AND T2.age > 59,"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",209,6.61941933631897,250,"['games', 'games_competitor']"
203,What was the average price of a Bitcoin in the year 2013? Hint: average price refers SUM(price)/COUNT(named = 'Bitcoin'); in the year 2013 refers to year(date) = 2013,coinmarketcap,"SELECT AVG(T2.price) FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE STRFTIME('%Y', T2.date) = '2013' AND T1.name = 'Bitcoin'","CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",156,6.540099859237671,250,"['historical', 'coins']"
204,"How many people were considered as prospective recipients of the ""Animation"" award? Hint: prospective recipients refers to result = 'Nominee'",simpson_episodes,SELECT COUNT(*) FROM Award WHERE award = 'Animation' AND result = 'Nominee';,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",157,6.550720930099487,250,"['award', 'person']"
205,"The person named Al Jean achieved the Primetime Emmy Award category in 2009, which episode did AI Jean achieve? Hint: in 2009 refers to year = 2009",simpson_episodes,"SELECT T2.episode_id FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2009' AND T1.person = 'Al Jean' AND T1.award_category = 'Primetime Emmy';","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",167,6.552790880203247,250,"['award', 'episode', 'person']"
206,Calculate the total winning match for Deccan Chargers. Hint: winning refers to Match_Winner; Deccan Chargers refers to Team_Name = 'Deccan Chargers',soccer_2016,SELECT SUM(T2.Match_Winner) FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Match_Winner WHERE T1.Team_Name = 'Deccan Chargers',"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",246,6.685370206832886,250,"['match', 'team']"
207,Indicate the name of all the journals published in the paper database in the year 2001. Hint: name of all the journals refers to FullName,authors,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Year = 2001 AND T1.ConferenceId > 0 AND T1.JournalId > 0,"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",150,6.524288177490234,250,"['paper', 'journal']"
208,Provide the sunrise time recorded by the home weather station of store no.30 on 2014/2/21. Hint: store no. 30 refers to store_nbr = 30; on 2014/2/21 refers to date = '2014-02-21',sales_in_weather,SELECT T1.sunrise FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T1.`date` = '2014-02-21' AND store_nbr = 30,"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

",184,6.561763525009155,250,['weather']
209,"In California, how many representatives ended their term in 1995? Hint: California refers to state = 'CA'; representatives refers to type = 'rep'; ended the term in 1995 refers to end like '1995%';",legislator,SELECT COUNT(*) FROM `current-terms` WHERE state = 'CA' AND type = 'rep' AND end LIKE '1995%',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",172,6.547778129577637,250,"['historical', 'historical-terms']"
210,"Among the employees who wish to receive e-mail promotion from AdventureWorks, how many percent of them are female? Hint: female refers to Gender = 'F'; employee who wish to receive email promotion refers to EmailPromotion = 1; percentage = DIVIDE(SUM(Gender = 'F')), (sum(Gender = 'F' or Gender = 'M'))) as percentage;",works_cycles,SELECT CAST(SUM(CASE WHEN T1.Gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1,"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",510,7.332350969314575,250,['person']
211,"Among the languages used in Baltic Countries, provide the languages which are used by over 80%.

 Hint: Baltic Countries refers to Region = 'Baltic Countries'; languages which are used by over 80% refers to Percentage > 80;",world,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Region = 'Baltic Countries' AND T2.Percentage > 80,"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",170,6.545793056488037,250,"['countrylanguage', 'country']"
212,Please list the names of the teams that had a tie in 1909. Hint: tie refers to T>0; year = 1909;,hockey,"SELECT T2.name, T3.name FROM TeamVsTeam AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Teams AS T3 ON T1.year = T3.year AND T1.oppID = T3.tmID WHERE T1.year = 1909 AND T1.T = 1","CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",247,6.682274341583252,250,['teams']
213,In which district have there been more intimidation-type crimes? Hint: more intimidation-type crime refers to Max(Count(primary_description = 'INTIMIDATION')); district refers to district_name,chicago_crime,SELECT T3.district_name FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.primary_description = 'INTIMIDATION' GROUP BY T3.district_name ORDER BY COUNT(T1.primary_description) DESC LIMIT 1,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `iucr` (
  iucr_no TEXT PRIMARY KEY,
  primary_description TEXT,
  secondary_description TEXT,
  index_code TEXT
);

",175,6.5515217781066895,250,"['crime', 'iucr']"
214,How many movie lists were still updated 10 years after it was created? Hint: updated 10 years after it was created refers to list_update_timestamp_utc > (list_creation_timestamp_utc+10);,movie_platform,"SELECT COUNT(*) FROM lists WHERE SUBSTR(list_update_timestamp_utc, 1, 4) - SUBSTR(list_creation_timestamp_utc, 1, 4) > 10","CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

",169,6.551965951919556,250,['lists']
215,"Among the papers under DB classification, which paper has the highest number of words cited? Hint: classification refers to class_label; class_label = 'DB';",citeseer,SELECT T1.paper_id FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'DB' GROUP BY T1.paper_id ORDER BY COUNT(T2.word_cited_id) DESC LIMIT 1,"CREATE TABLE `content` (
  paper_id TEXT PRIMARY KEY REFERENCES paper(paper_id),
  word_cited_id TEXT PRIMARY KEY
);

CREATE TABLE `paper` (
  paper_id TEXT PRIMARY KEY,
  class_label TEXT
);

",138,6.511343479156494,250,"['content', 'paper']"
216,Provide the phone number of the customer with the highest total price in an order. Hint: phone number of the customer refers to c_phone; the highest total price refers to MAX(o_totalprice);,retails,SELECT T2.c_phone FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey ORDER BY T1.o_totalprice DESC LIMIT 1,"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

",167,6.545703887939453,250,"['customer', 'orders']"
217,For how many terms has current legislator Sherrod Brown served? Hint: Sherrod Brown is an official_full_name,legislator,SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.official_full_name = 'Sherrod Brown',"CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `current-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  caucus TEXT,
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT PRIMARY KEY,
  fax TEXT,
  last TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",143,6.517507314682007,250,"['historical-terms', 'historical', 'current-terms', 'current']"
218,What is the relationship between object sample no.12 and no.8 of image no.2345511? Hint: relationship refers to PRED_CLASS; object sample no.12 and no.8 of image no.2345511 refers to IMG_ID = 2345511 AND OBJ1_SAMPLE_ID = 12 AND OBJ2_SAMPLE_ID = 8,image_and_language,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 2345511 AND T2.OBJ1_SAMPLE_ID = 12 AND T2.OBJ2_SAMPLE_ID = 8,"CREATE TABLE `pred_classes` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",245,6.680686950683594,250,"['pred_classes', 'img_rel']"
219,Which currency pair's average exchange rate for the day is the highest? Hint: currency pair refers to FromCurrencyCode/ToCurrencyCode,works_cycles,"SELECT FromCurrencyCode, ToCurrencyCode FROM CurrencyRate ORDER BY AverageRate DESC LIMIT 1","CREATE TABLE `CurrencyRate` (
  CurrencyRateID INTEGER,
  CurrencyRateDate DATETIME PRIMARY KEY,
  FromCurrencyCode TEXT PRIMARY KEY REFERENCES Currency(None),
  ToCurrencyCode TEXT PRIMARY KEY REFERENCES Currency(None),
  AverageRate REAL,
  EndOfDayRate REAL,
  ModifiedDate DATETIME
);

",454,7.207677364349365,250,['CurrencyRate']
220,Give me the match ID and date of the matches that were held in Kingsmead for three consecutive days. Hint: date of the matches refers to Match_Date; held in Kingsmead refers to Venue_Name = 'Kingsmead',soccer_2016,"SELECT T1.Match_Id, T1.Match_Date FROM `Match` AS T1 INNER JOIN Venue AS T2 ON T1.Venue_Id = T2.Venue_Id WHERE T2.Venue_Name = 'Kingsmead'","CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `venue` (
  Venue_Id INTEGER,
  Venue_Name TEXT,
  City_Id INTEGER REFERENCES City(City_Id)
);

",254,6.698511362075806,250,"['match', 'venue']"
221,"How many images have at least one object sample in the class of ""man""? Hint: have at least one object sample in the class of ""man"" refers to count(IMG_ID where OBJ_CLASS = 'man') > = 1",image_and_language,SELECT COUNT(T.IMG_ID) FROM ( SELECT T2.IMG_ID FROM OBJ_CLASSES AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.OBJ_CLASS = 'man' GROUP BY T2.IMG_ID ) T,"CREATE TABLE `obj_classES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

",198,6.598396301269531,250,"['obj_classES', 'img_obj']"
222,List the character names and descriptions of chapter ID 18710. Hint: character names refers to CharName,shakespeare,"SELECT DISTINCT T1.CharName, T1.Description FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.Chapter_id = 18710","CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",141,6.514433860778809,250,"['characters', 'chapters']"
223,"How much lower in percentage is the unit price of Ikura in order no. 10273 than its standard unit price? Hint: how much lower in percentage = MULTIPLY(DIVIDE(SUBTRACT(Products.UnitPrice, Order Details.UnitPrice), Products.UnitPrice), 100); Ikura refers to ProductName = 'Ikura'; order no. refers to OrderID;",retail_world,SELECT CAST((T1.UnitPrice - T2.UnitPrice) AS REAL) * 100 / T1.UnitPrice FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.OrderID = 10273 AND T1.ProductName = 'Ikura',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `orderdetails` (
  OrderDetailID INTEGER,
  OrderID INTEGER REFERENCES Orders(OrderID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",229,6.652901887893677,250,"['products', 'orderdetails']"
224,"Describe the names and capability of the students who were advised by professors from the University of Washington. Hint: names of the students = f_name, l_name;",cs_semester,"SELECT T3.f_name, T3.l_name, T2.capability FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T1.graduate_from = 'University of Washington'","CREATE TABLE `prof` (
  prof_id INTEGER,
  gender TEXT,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  popularity INTEGER,
  teachingability INTEGER,
  graduate_from TEXT
);

CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",149,6.523226022720337,250,"['prof', 'ra', 'student']"
225,"List the name of all products in the west superstore that customers chose for same-day shipment in the year 2013. Hint: name of all products refers to Product Name; same-day shipment refers to ""Ship Mode"" = 'Same Day'; year 2013 refers to ""Ship Date"" BETWEEN '2013-01-01' AND '2013-12-31'",superstore,SELECT T2.`Product Name` FROM west_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'Same Day' AND T1.`Ship Date` LIKE '2013%',"CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

CREATE TABLE `west_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",226,6.6441240310668945,250,"['product', 'west_superstore']"
226,List all the customer company names and cities located in Canada. Hint: located in Canada refers to Country = 'Canada',retail_world,"SELECT CompanyName, City FROM Customers WHERE Country = 'Canada'","CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",161,6.5360870361328125,250,['customers']
227,"List at least 5 users that has received less than 5 low compliments from
other users. Hint: less than 5 low compliment refers to number_of_compliments < 5",public_review_platform,SELECT user_id FROM Users_Compliments WHERE number_of_compliments LIKE 'Low' GROUP BY user_id ORDER BY COUNT(number_of_compliments) > 5 LIMIT 5,"CREATE TABLE `users_compliments` (
  compliment_id INTEGER PRIMARY KEY REFERENCES Compliments(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  number_of_compliments TEXT
);

CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",200,6.603988170623779,250,"['users_compliments', 'users']"
228,"Among the players who were born in 1977, provide names and birthdates of the players from England. Hint: born in 1977 refers to DOB LIKE '1977%'; name refers to Player_Name; birthdate refers to DOB; England refers to Country_Name = 'England'",soccer_2016,"SELECT T2.Player_Name, T2.DOB FROM Country AS T1 INNER JOIN Player AS T2 ON T2.Country_Name = T1.Country_Id WHERE T2.DOB LIKE '1977%' AND T1.Country_Name = 'England'","CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `country` (
  Country_Id INTEGER REFERENCES Country(Country_Id),
  Country_Name TEXT
);

",272,6.762170791625977,250,"['player', 'country']"
229,"Name the teams played in a match which resulted in a tie in 2015. Hint: resulted in a tie refers to Win_Type = 'Tie'; in 2015 refers to SUBSTR(Match_Date, 1, 4) = 2015",soccer_2016,"SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Team_1 OR T1.Team_Id = T2.Team_2 INNER JOIN Win_By AS T3 ON T2.Win_Type = T3.Win_Id WHERE SUBSTR(T2.Match_Date, 1, 4) = '2015' AND T3.Win_Type = 'Tie' LIMIT 1","CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",264,6.742315769195557,250,"['match', 'team']"
230,How many papers are preprint or not published? Hint: preprint or not published refer to Year = 0;,authors,SELECT COUNT(Id) FROM Paper WHERE Year = 0 OR (ConferenceId = 0 AND JournalId = 0),"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",138,6.511133193969727,250,['paper']
231,"Out of the rating of 6.8 scored by title ""No Loan Again, Naturally"", how many percent of it consists of scores 5 to 10? Hint: scores 5 to 10 refers to TOTAL(percent) where 1 < = stars < 5",simpson_episodes,"SELECT SUM(T2.percent) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'No Loan Again, Naturally' AND T1.rating = 6.8 AND T2.stars BETWEEN 5 AND 10;","CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",185,6.562201976776123,250,"['episode', 'vote']"
232,"Which director had the most popular film from 1937 to 1990? Hint: from 1937 to 1990 refers to substr(release_date, length(release_date) - 3, length(release_date)) between '1937' and '1990'; the most popular film refers to movie_title where MAX(total_gross);",disney,"SELECT T2.director FROM characters AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name INNER JOIN movies_total_gross AS T3 ON T3.movie_title = T1.movie_title WHERE SUBSTR(T3.release_date, LENGTH(T3.release_date) - 3, LENGTH(T3.release_date)) BETWEEN '1937' AND '1990' ORDER BY CAST(REPLACE(trim(T3.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1","CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

",211,6.6156251430511475,250,"['movies_total_gross', 'director']"
233,What is the highest average rating for action movies made in the USA? Hint: USA is a country,movielens,SELECT AVG(T2.rating) FROM movies AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid INNER JOIN movies2directors AS T3 ON T1.movieid = T3.movieid WHERE T1.country = 'USA' AND T3.genre = 'Action' GROUP BY T1.movieid ORDER BY AVG(T2.rating) DESC LIMIT 1,"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `u2base` (
  userid INTEGER PRIMARY KEY REFERENCES users(None),
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  rating TEXT
);

",149,6.525562524795532,250,"['movies', 'u2base']"
234,"Among the players that went to high school in New York and have won the MVP, what is their average height? Hint: high school in New York refers to highSchool like '%New York%'; won the MVP refers to award = 'Most Valuable Player'; average height = Divide (Sum(height), Count(playerID))",professional_basketball,SELECT AVG(T1.height) FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Most Valuable Player' AND T1.birthCity = 'New York',"CREATE TABLE `players` (
  playerID TEXT PRIMARY KEY,
  useFirst TEXT,
  firstName TEXT,
  middleName TEXT,
  lastName TEXT,
  nameGiven TEXT,
  fullGivenName TEXT,
  nameSuffix TEXT,
  nameNick TEXT,
  pos TEXT,
  firstseason INTEGER,
  lastseason INTEGER,
  height REAL,
  weight INTEGER,
  college TEXT,
  collegeOther TEXT,
  birthDate DATE,
  birthCity TEXT,
  birthState TEXT,
  birthCountry TEXT,
  highSchool TEXT,
  hsCity TEXT,
  hsState TEXT,
  hsCountry TEXT,
  deathDate DATE,
  race TEXT
);

",221,6.631153106689453,250,['players']
235,"Among the organizations where headquarters are in the 'USA', what is the percentage of the them are in 'Washington'? Hint: percentage can be computed by [count(City = 'Washington') / count(all cities)] * 100%",mondial_geo,SELECT CAST(SUM(CASE WHEN T2.City = 'Washington' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.City) FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE T2.Country = 'USA',"CREATE TABLE `organization` (
  Abbreviation TEXT PRIMARY KEY,
  Name TEXT PRIMARY KEY,
  City TEXT REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Established DATE
);

CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

",301,6.81509804725647,250,"['organization', 'city']"
236,"Please list all the answers to the question ""Any additional notes or comments"" that are not null in 2014's survey. Hint: question refers to questiontext; the answers that are not null refers to AnswerText ! = -1
",mental_health_survey,SELECT T2.AnswerText FROM Question AS T1 INNER JOIN Answer AS T2 ON T1.questionid = T2.QuestionID WHERE T1.questiontext = 'Any additional notes or comments' AND T2.SurveyID = 2014 AND T2.AnswerText <> -1,"CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

CREATE TABLE `survey` (
  SurveyID INTEGER,
  Description TEXT
);

",158,6.533143758773804,250,"['answer', 'survey']"
237,"Among the casts who were born in Los Angeles, describe the name and birth date of who have 1.8 m and above in height. Hint: ""Los Angeles"" is the birth_place; 1.8 m and above in height refers to height_meters > = 1.8",simpson_episodes,"SELECT name, birthdate FROM Person WHERE birth_place = 'Los Angeles' AND height_meters >= 1.8;","CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",187,6.565028429031372,250,['person']
238,What is the average score for the movie Versailles Rive-Gauche? Hint: Versailles Rive-Gauche' is movie_title; average score refers to Avg(rating_score);,movie_platform,SELECT AVG(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title LIKE 'Versailles Rive-Gauche',"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",165,6.542457103729248,250,"['movies', 'ratings']"
239,What is the name of the publisher that published the most books? Hint: name of publisher refers to publisher_name; publisher published the most number of books refers to Max(Count(book_id)),books,SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id GROUP BY T2.publisher_name ORDER BY COUNT(T2.publisher_id) DESC LIMIT 1,"CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `publisher` (
  publisher_id INTEGER,
  publisher_name TEXT
);

",208,6.613316059112549,250,"['book', 'publisher']"
240,Please list any three events that happened on the 1st of May 2016 that have the same latitude of 31. Hint: on the 1st of May 2016 refers to timestamp like '2016-05-01%';,talkingdata,SELECT event_id FROM events WHERE timestamp LIKE '2016-05-01%' AND latitude = 31 LIMIT 3,"CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

",232,6.655146360397339,250,['events']
241,"What was the difference in home team and away team win percentages across all divisions in 2010? Hint: 2010 refers to season = 2010; SUBTRACT(DIVIDE(COUNT(Div where FTR = 'H', season = 2010), COUNT(Div where season = 2010)), COUNT(Div where FTR = 'A', season = 2010), COUNT(Div where season = 2010)) as percentage;",european_football_1,SELECT CAST(COUNT(CASE WHEN FTR = 'H' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(FTR) - CAST(COUNT(CASE WHEN FTR = 'A' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(FTR) DIFFERENCE FROM matchs WHERE season = 2010,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

",210,6.616270542144775,250,['matchs']
242,How many transactions have been made to purchase a root beer brand from California? Hint: California refers to State = 'CA';,beer_factory,SELECT COUNT(T3.RootBeerID) FROM rootbeerbrand AS T1 INNER JOIN rootbeer AS T2 ON T1.BrandID = T2.BrandID INNER JOIN `transaction` AS T3 ON T2.RootBeerID = T3.RootBeerID WHERE T1.State = 'CA',"CREATE TABLE `location` (
  LocationID INTEGER REFERENCES geolocation(LocationID),
  LocationName TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER
);

CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",152,6.52592396736145,250,"['location', 'transaction']"
243,"Among the products, how many of them were discontinued in production? Hint: discontinued refers to Discontinued = 1",retail_world,SELECT COUNT(*) FROM Products WHERE Discontinued = 1,"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

",160,6.5337958335876465,250,['products']
244,Which language was book id 1405 written in? Hint: language written in refers to language_name;,books,SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T1.book_id = 1405,"CREATE TABLE `book_language` (
  language_id INTEGER,
  language_code TEXT,
  language_name TEXT
);

",191,6.569669246673584,250,['book_language']
245,Where can you rent the movie 'Wyoming Storm'? Identify the address of the rental store and the rental rate. Hint: 'Wyoming Storm' refers to title = 'WYOMING STORM',movie_3,"SELECT T2.store_id, T1.address, T4.rental_rate FROM address AS T1 INNER JOIN store AS T2 ON T1.address_id = T2.address_id INNER JOIN inventory AS T3 ON T2.store_id = T3.store_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T4.title = 'WYOMING STORM'","CREATE TABLE `inventory` (
  inventory_id INTEGER,
  film_id INTEGER REFERENCES film(None),
  store_id INTEGER REFERENCES store(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `store` (
  store_id INTEGER,
  manager_staff_id INTEGER PRIMARY KEY REFERENCES staff(None),
  address_id INTEGER REFERENCES address(None),
  last_update DATETIME
);

CREATE TABLE `address` (
  address_id INTEGER,
  address TEXT,
  address2 TEXT,
  district TEXT,
  city_id INTEGER REFERENCES city(None),
  postal_code TEXT,
  phone TEXT,
  last_update DATETIME
);

",210,6.619041204452515,250,"['inventory', 'film', 'store', 'address']"
246,"Which paper published by the ""TUBERCLE LUNG DIS"" journal is the oldest? Hint: paper refers to Title; TUBERCLE LUNG DIS is the ShortName of journal; the oldest refers to MIN(Year)",authors,SELECT T2.Title FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.ShortName = 'TUBERCLE LUNG DIS' ORDER BY T2.Year ASC LIMIT 1,"CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",167,6.544994592666626,250,"['journal', 'paper']"
247,What is the difference of female and male audiences in number who viewed horror movies? Hint: The audience and users are the same meaning; Difference of female and male audiences = count(female users) - count(male users); Female users refers to u_gender = 'F'; Male users refers to u_gender = 'M',movielens,"SELECT SUM(IIF(T2.u_gender = 'F', 1, 0)) - SUM(IIF(T2.u_gender = 'M', 1, 0)) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid INNER JOIN movies2directors AS T3 ON T3.movieid = T1.movieid WHERE T3.genre = 'horror'","CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `u2base` (
  userid INTEGER PRIMARY KEY REFERENCES users(None),
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  rating TEXT
);

CREATE TABLE `users` (
  userid INTEGER,
  age TEXT,
  u_gender TEXT,
  occupation TEXT
);

",203,6.608367204666138,250,"['movies', 'u2base', 'users']"
248,What is the life expectancy of residents in the most crowded city? Hint: most crowded city refers to MAX(Population);,world,SELECT T2.LifeExpectancy FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.Population DESC LIMIT 1,"CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

",137,6.513314723968506,250,['city']
249,"How many chapters have the name Gratiano as a character for ""friend to Antonio and Bassiano""? Hint: name Gratiano as a character refers to CharName = 'Gratiano'; ""friend to Antonio and Bassiano"" refers to characters.Description = 'friend to Antonio and Bassiano'",shakespeare,SELECT COUNT(DISTINCT T2.chapter_id) FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.CharName = 'Gratiano' AND T1.Description = 'friend to Antonio and Bassiano',"CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",179,6.55711817741394,250,"['characters', 'chapters']"
250,"Which author of the paper ""Incremental Extraction of Keyterms for Classifying Multilingual Documents in the Web"" is affiliated with National Taiwan University Department of Computer Science and Information Engineering Taiwan? Hint: ""Incremental Extraction of Keyterms for Classifying Multilingual Documents in the Web"" is the title of paper; affiliated with refers to Affiliation; ""National Taiwan University Department of Computer Science and Information Engineering Taiwan"" is the Affiliation organization",authors,SELECT T1.Name FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title = 'Incremental Extraction of Keyterms for Classifying Multilingual Documents in the Web' AND T1.Affiliation = 'National Taiwan University Department of Computer Science and Information Engineering Taiwan',"CREATE TABLE `paperAuthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",214,6.620348691940308,250,"['paperAuthor', 'author']"
251,How many ingredients are there in the recipe that is best in helping your body's natural defence against illness and infection? Hint: best in helping your body's natural defence against illness and infection refers to MAX(vitamin_a);,cookbook,SELECT COUNT(*) FROM Nutrition AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.vitamin_a > 0,"CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `nutrition` (
  recipe_id INTEGER REFERENCES Recipe(recipe_id),
  protein REAL,
  carbo REAL,
  alcohol REAL,
  total_fat REAL,
  sat_fat REAL,
  cholestrl REAL,
  sodium REAL,
  iron REAL,
  vitamin_c REAL,
  vitamin_a REAL,
  fiber REAL,
  pcnt_cal_carb REAL,
  pcnt_cal_fat REAL,
  pcnt_cal_prot REAL,
  calories REAL
);

",163,6.536654949188232,250,"['recipe', 'nutrition']"
252,"Among the menus in which the dish ""Clear green turtle"" had appeared, how many of them used the dollar as their currency? Hint: Clear green turtle is a name of dish; dollar as currency refers to currency = 'Dollars';",menu,SELECT SUM(CASE WHEN T3.currency = 'Dollars' THEN 1 ELSE 0 END) FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T4.name = 'Clear green turtle',"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",164,6.539777517318726,250,"['dish', 'menuitem']"
253,"What profit will the company gain if they sell 10 items of the product that has the lightest weight? Hint: Lightest product refers to Min(Weight); profit if they sell 10 items refers to Subtract (ListPrice , StandardCost) *10;",works_cycles,SELECT 10 * (ListPrice - StandardCost) FROM Product WHERE Weight IS NOT NULL ORDER BY Weight LIMIT 1,"CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productlistpricehistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ListPrice REAL,
  ModifiedDate DATETIME
);

",482,7.267014503479004,250,"['product', 'productlistpricehistory']"
254,Show the credit card number of Lisa Ling. Hint: FALSE;,beer_factory,SELECT DISTINCT T2.CreditCardNumber FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.First = 'Lisa' AND T1.Last = 'Ling',"CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  First TEXT,
  Last TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER,
  Email TEXT,
  PhoneNumber TEXT,
  FirstPurchaseDate DATE,
  SubscribedToEmailList TEXT,
  Gender TEXT
);

",141,6.514530897140503,250,"['transaction', 'customers']"
255,How many no.9 items from store no.11 were sold on 2012/12/7? Hint: no. 9 item refers to item_nbr = 9; store no.11 refers to store_nbr = 11; sold on 2012/12/7 refers to date = '2012-12-07',sales_in_weather,SELECT units FROM sales_in_weather WHERE `date` = '2012-12-07' AND store_nbr = 11 AND item_nbr = 9,"CREATE TABLE `sales_in_weather` (
  date DATE PRIMARY KEY,
  store_nbr INTEGER PRIMARY KEY,
  item_nbr INTEGER PRIMARY KEY,
  units INTEGER
);

",194,6.594433546066284,250,['sales_in_weather']
256,"Tally the match IDs in which V Kohli is the ""Man of the Match"".",soccer_2016,SELECT T1.Match_Id FROM `Match` AS T1 INNER JOIN Player AS T2 ON T1.Man_of_the_Match = T2.Player_Id WHERE T2.Player_Name = 'V Kohli',"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `win_by` (
  Win_Id INTEGER,
  Win_Type TEXT
);

CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

",221,6.631486654281616,250,"['player', 'win_by', 'match']"
257,"On 11/3/2013, which stations are often empty? Indicate the names of the stations. Hint: time = '11/3/2013'; which stations are empty refers to bikes_available = '0';",bike_share_1,SELECT DISTINCT T1.name FROM station AS T1 INNER JOIN status AS T2 ON T2.station_id = T1.id WHERE T2.bikes_available = 0 AND T2.time LIKE '2013/11/03%',"CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",163,6.5341620445251465,250,['station']
258,"How many orders were shipped by the sales team with the highest amount of shipped orders in 2020? Give the name of the said sales team. Hint: shipped refers to ShipDate; in 2020 refers to SUBSTR(ShipDate, -2) = '20'; highest amount of shipped orders refers to Max(Count(OrderNumber))",regional_sales,"SELECT COUNT(T1.OrderNumber), T2.`Sales Team` FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.ShipDate LIKE '%/%/20' GROUP BY T2.`Sales Team` ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1","CREATE TABLE `sales team` (
  SalesTeamID INTEGER,
  Sales Team TEXT,
  Region TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",202,6.60689902305603,250,"['sales team', 'sales orders']"
259,What is the average popularity of each movie that was directed by Christopher Nolan? Indicate which movie directed by him has received the highest number of 5 rating scores. Hint: 5 rating scores refer to rating_score; Christopher Nolan refer to director_name; average popularity of each movie refer to AVG(movie_popularity where director_name = 'Christopher Nolan'),movie_platform,SELECT AVG(T2.movie_popularity) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.director_name = 'Christopher Nolan',"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",202,6.60437273979187,250,"['movies', 'ratings']"
260,List out students that enrolled in occ school and enlisted in a fire department. Hint: occ school refers to school = 'occ'; department refers to organ; organ = 'fire_department';,student_loan,SELECT T1.name FROM enlist AS T1 INNER JOIN enrolled AS T2 ON T2.name = T1.name WHERE T2.school = 'occ' AND T1.organ = 'fire_department',"CREATE TABLE `enrolled` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  school TEXT PRIMARY KEY,
  month INTEGER
);

",192,6.57427453994751,250,"['enrolled', 'organ']"
261,How long was Kendall Allen's complaint about her credit card? Hint: how long refers to ser_time; credit card refers to Product = 'Credit Card';,retail_complains,SELECT T3.ser_time FROM events AS T1 INNER JOIN client AS T2 ON T1.Client_ID = T2.client_id INNER JOIN callcenterlogs AS T3 ON T1.`Complaint ID` = T3.`Complaint ID` WHERE T2.first = 'Kendall' AND T2.last = 'Allen' AND T2.sex = 'Female' AND T1.Product = 'Credit card',"CREATE TABLE `reviews` (
  Date DATE PRIMARY KEY,
  Stars INTEGER,
  Reviews TEXT,
  Product TEXT,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",154,6.527783393859863,250,"['reviews', 'client']"
262,"What is the full name of the employee that inspected establishments with license 1334073? Hint: full name refers to first_name, last_name; with license 1334073 refers to license_no = 1334073",food_inspection_2,"SELECT DISTINCT T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.license_no = 1334073","CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",179,6.555262565612793,250,"['inspection', 'employee']"
263,"Give the number of papers that were published on ""IEEE Transactions on Nuclear Science"" in 1999. Hint: 'IEEE Transactions on Nuclear Science' is the FullName of journal; 1999 refers to Year = '1999'; papers refers to Paper.Id",authors,SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'IEEE Transactions on Nuclear Science' AND T2.Year = 1999,"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",183,6.560819387435913,250,"['paper', 'journal']"
264,What is the title of the most expensive book? Hint: most expensive book refers to Max(price),books,SELECT T1.title FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id ORDER BY T2.price DESC LIMIT 1,"CREATE TABLE `order_line` (
  line_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  book_id INTEGER REFERENCES book(None),
  price REAL
);

CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

",188,6.565713882446289,250,"['order_line', 'book']"
265,List all paper ID and its class type with more than 20 cited words. Hint: class type refers to class_label; count(word_cited_id)>20,citeseer,"SELECT DISTINCT T1.paper_id, T1.class_label FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id GROUP BY T2.paper_id, T1.class_label HAVING COUNT(T2.word_cited_id) > 20","CREATE TABLE `content` (
  paper_id TEXT PRIMARY KEY REFERENCES paper(paper_id),
  word_cited_id TEXT PRIMARY KEY
);

CREATE TABLE `paper` (
  paper_id TEXT PRIMARY KEY,
  class_label TEXT
);

",144,6.515997409820557,250,"['content', 'paper']"
266,What is the flight number of the flight operated by American Airlines Inc. that had the longest delay in departure? Hint: flight numbers refers to OP_CARRIER_FL_NUM; American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; longest delay in departure refers to MAX(DEP_DELAY);,airline,SELECT T1.OP_CARRIER_FL_NUM FROM Airlines AS T1 INNER JOIN Airports AS T2 ON T2.Code = T1.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T1.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA' ORDER BY T1.DEP_TIME DESC LIMIT 1,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",180,6.556157350540161,250,"['airlines', 'air carriers']"
267,List out the title of episodes which have star score of 2. Hint: star score of 2 refers to stars = 2,simpson_episodes,SELECT T1.title FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 2;,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",150,6.524139165878296,250,"['episode', 'vote']"
268,How much is the total price of all the orders shipped to customers in Argentina? Hint: total price = sum(o_totalprice); Argentina refers to n_name = 'Argentina',retails,SELECT SUM(T3.o_totalprice) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey INNER JOIN orders AS T3 ON T1.c_custkey = T3.o_custkey WHERE T2.n_name = 'ARGENTINA',"CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",163,6.536031484603882,250,"['orders', 'customer', 'nation']"
269,"For the customer who leaves the review content of ""Tastes like Australia."", when was his/her first purchase date? Hint: review content of ""Tastes like Australia."" refers to Review = 'Tastes like Australia.';",beer_factory,SELECT T1.FirstPurchaseDate FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Review = 'Tastes like Australia.',"CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  First TEXT,
  Last TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER,
  Email TEXT,
  PhoneNumber TEXT,
  FirstPurchaseDate DATE,
  SubscribedToEmailList TEXT,
  Gender TEXT
);

",176,6.552695274353027,250,"['rootbeerreview', 'customers']"
270,Who is the patient involved in the care plan with code 311791003?,synthea,"SELECT T2.first, T2.last FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.CODE = 315043002","CREATE TABLE `careplans` (
  ID TEXT,
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE REAL,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",167,6.5406458377838135,250,['careplans']
271,Which religion has the majority of the people in Japan? Hint: Japan is a country,mondial_geo,SELECT T2.Name FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Japan' ORDER BY T2.Percentage DESC LIMIT 1,"CREATE TABLE `religion` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Name TEXT PRIMARY KEY,
  Percentage REAL
);

CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",264,6.743540048599243,250,"['religion', 'country']"
272,How many kinds of events does athletics have? Hint: kinds of events refer to event_name; athletics refer to sport_name = 'Athletics';,olympics,SELECT COUNT(T2.event_name) FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T1.sport_name = 'Athletics',"CREATE TABLE `sport` (
  id INTEGER,
  sport_name TEXT
);

CREATE TABLE `event` (
  id INTEGER,
  sport_id INTEGER REFERENCES sport(id),
  event_name TEXT
);

",185,6.558818578720093,250,"['sport', 'event']"
273,"What is the percentage of subject who are female used the Vehicle as weapon? Hint: female refers to gender = 'F'; use Vehicle as weapon refers to subject_weapon = 'Vehicle'; percentage = divide(count(case_number where subject_weapon = 'Vehicle'), count(case_number)) where gender = 'F' * 100%",shooting,SELECT CAST(SUM(T1.subject_weapon = 'Vehicle') AS REAL) * 100 / COUNT(T1.case_number) FROM incidents T1 INNER JOIN subjects T2 ON T1.case_number = T2.case_number WHERE T2.gender = 'F',"CREATE TABLE `subjects` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

CREATE TABLE `officers` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

",192,6.565864086151123,250,"['subjects', 'officers']"
274,"For the productline where the product No.S18_2949 was produced, what's the text description for that product line?",car_retails,SELECT t1.textDescription FROM productlines AS t1 INNER JOIN products AS t2 ON t1.productLine = t2.productLine WHERE t2.productCode = 'S18_2949',"CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

CREATE TABLE `productlines` (
  productLine TEXT PRIMARY KEY,
  textDescription TEXT,
  htmlDescription TEXT,
  image BLOB
);

",155,6.524519443511963,250,"['products', 'productlines']"
275,How many breweries are there in Australia? Hint: Australia refers to Country = 'Australia';,beer_factory,SELECT COUNT(BreweryName) FROM rootbeerbrand WHERE Country = 'Australia',"CREATE TABLE `location` (
  LocationID INTEGER REFERENCES geolocation(LocationID),
  LocationName TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER
);

",148,6.516980886459351,250,['location']
276,"From 1900 to 1992, how many games did London host? Hint: From 1900 to 1992 refers to games_year BETWEEN 1900 AND 1992; London refers to city_name = 'London'; games refer to games_name;",olympics,SELECT COUNT(T3.id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'London' AND T3.games_year BETWEEN 1900 AND 1992,"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",220,6.626387357711792,250,"['games_city', 'city']"
277,List down the locations of menu sponsored by Norddeutscher Lloyd Bremen. Hint: sponsored by Norddeutscher Lloyd Bremen refers to sponsor = 'Norddeutscher Lloyd Bremen';,menu,SELECT location FROM Menu WHERE sponsor = 'Norddeutscher Lloyd Bremen',"CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",166,6.542232513427734,250,['menu']
278,What is the price and name of the product bought by Erica Xu?,sales,"SELECT T3.Price, T3.Name FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN Products AS T3 ON T1.ProductID = T3.ProductID WHERE T2.FirstName = 'Erica' AND T2.LastName = 'Xu'","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",127,6.466677665710449,250,"['sales', 'products', 'customers']"
279,"What's the number of users gave the movie ""Downfall"" a rating of ""4""? Hint: movie ""Downfall"" refers to movie_title = 'Downfall'; rating of ""4"" refers to rating_score = 4",movie_platform,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Downfall' AND T1.rating_score = 4,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",166,6.538853883743286,250,"['movies', 'ratings']"
280,"What is the profit on net of the vendor with the highest standard price? If there are two vendors of the same amount, calculate only for one vendor. Hint: profit on net = SUBTRACT(LastReceiptCost, StandardPrice);",works_cycles,SELECT LastReceiptCost - StandardPrice FROM ProductVendor ORDER BY StandardPrice DESC LIMIT 1,"CREATE TABLE `productvendor` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Vendor(BusinessEntityID),
  AverageLeadTime INTEGER,
  StandardPrice REAL,
  LastReceiptCost REAL,
  LastReceiptDate DATETIME,
  MinOrderQty INTEGER,
  MaxOrderQty INTEGER,
  OnOrderQty INTEGER,
  UnitMeasureCode TEXT REFERENCES UnitMeasure(UnitMeasureCode),
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",475,7.248255491256714,250,"['productvendor', 'product']"
281,"What is the minimum shipping charge for ""OVERSEAS - DELUXE""? Hint: Minimum shipping charge refers to ShipBase; OVERSEAS - DELUXE is name of shipping company",works_cycles,SELECT ShipBase FROM ShipMethod WHERE Name = 'OVERSEAS - DELUXE',"CREATE TABLE `store` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  Name TEXT,
  SalesPersonID INTEGER REFERENCES SalesPerson(BusinessEntityID),
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `shipmethod` (
  ShipMethodID INTEGER,
  Name TEXT PRIMARY KEY,
  ShipBase REAL,
  ShipRate REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",467,7.232248067855835,250,"['store', 'shipmethod']"
282,Compare the number of legislators who started the term in 1875 and 2005. Hint: started the term in 1875 refers to start LIKE '1875%'; started the term in 2005 refers to start LIKE '2005%',legislator,SELECT SUM(CASE WHEN `current-terms`.start LIKE '2005%' THEN 1 ELSE 0 END) - ( SELECT SUM(CASE WHEN start LIKE '1875%' THEN 1 ELSE 0 END) FROM `historical-terms` ) FROM `current-terms`,"CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",185,6.5614094734191895,250,['historical-terms']
283,How many customers belong to the household segment in Germany? Hint: household segment refers to c_mktsegment = 'household'; Germany refers to n_name = 'Germany',retails,SELECT COUNT(T1.c_name) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'HOUSEHOLD' AND T2.n_name = 'GERMANY',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",164,6.5353593826293945,250,"['customer', 'nation']"
284,List down all of the customers' first name who were attended by staff with ID 1.,movie_3,"SELECT DISTINCT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T2.staff_id = 1","CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `staff` (
  staff_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address_id INTEGER REFERENCES address(None),
  picture BLOB,
  email TEXT,
  store_id INTEGER REFERENCES store(None),
  active INTEGER,
  username TEXT,
  password TEXT,
  last_update DATETIME
);

",182,6.55933952331543,250,"['customer', 'staff']"
285,How many languages are used in Cyprus? Hint: Cyprus is a name of Country;,world,SELECT SUM(CASE WHEN T1.Name = 'Cyprus' THEN 1 ELSE 0 END) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode,"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",132,6.5051429271698,250,"['countrylanguage', 'country']"
286,Who is the owner of the business that has a high risk violation of 103109 and described as unclean or unsanitary food contact surfaces? Hint: owner refers to owner_name; high risk violation of 103109 and described as unclean or unsanitary food contact surfaces refers to risk_category = 'High Risk' where violation_type_id = 103109 and description = 'Unclean or unsanitary food contact surfaces';,food_inspection,SELECT DISTINCT T2.owner_name FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T1.violation_type_id = 103109 AND T1.description = 'Unclean or unsanitary food contact surfaces',"CREATE TABLE `violations` (
  business_id INTEGER REFERENCES businesses(business_id),
  date DATE,
  violation_type_id TEXT,
  risk_category TEXT,
  description TEXT
);

CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

",214,6.621500253677368,250,"['violations', 'businesses']"
287,"What is the task of the method whose tokenized name is ""online median filter test median window filling""? Hint: tokenized name refers to NameTokenized; task of the method refers to the second part of name deliminated by "".""; for example, the task of 'LinqToDelicious.HttpWebRequestFactory.Create' is 'HttpWebRequestFactory'",codebase_comments,"SELECT SUBSTR(SUBSTR(Name, INSTR(Name, '.') + 1), 1, INSTR(SUBSTR(Name, INSTR(Name, '.') + 1), '.') - 1) task FROM Method WHERE NameTokenized = 'online median filter test median window filling'","CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",193,6.591501712799072,250,['method']
288,"In the state where Lisa Murkowski is the representative, how many cities have zero employees? Hint: zero employee refers to employees = 0",address,SELECT COUNT(T3.city) FROM congress AS T1 INNER JOIN state AS T2 ON T1.abbreviation = T2.abbreviation INNER JOIN zip_data AS T3 ON T2.abbreviation = T3.state WHERE T1.first_name = 'Murkowski' AND T1.last_name = 'Lisa' AND T3.employees = 0,"CREATE TABLE `zip_congress` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  district TEXT PRIMARY KEY REFERENCES congress(cognress_rep_id)
);

",160,6.534132242202759,250,"['state', 'city']"
289,"Among the cars over 3000lbs, how many of them cost less than $30000? Hint: over 3000lbs refers to weight > 3000; cost less than $30000 refers to price < 30000",cars,SELECT COUNT(T1.car_name) FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.weight > 3000 AND T2.price < 30000,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",170,6.545520067214966,250,"['data', 'price']"
290,"Among the coaches whose team has over 30 wins in a year, how many of them are born in the USA? Hint: over 30 wins refers to w>30; born in the USA refers to birthCountry = 'USA'",hockey,SELECT COUNT(T2.coachID) FROM Master AS T1 INNER JOIN Coaches AS T2 ON T1.coachID = T2.coachID WHERE T2.W > 30 AND T1.birthCountry = 'USA',"CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  notes TEXT,
  g INTEGER,
  w INTEGER,
  l INTEGER,
  t INTEGER,
  postg TEXT,
  postw TEXT,
  postl TEXT,
  postt TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",265,6.7433507442474365,250,"['coaches', 'teams']"
291,Which of the films directed by Álex de la Iclesia is the most popular among Mubi users? Hint: Alex de la Iclesia is the director name; the most popular refers to Max(movie_popularity); films refers to movies;,movie_platform,SELECT movie_title FROM movies WHERE director_name = 'Åke Sandgren' ORDER BY movie_popularity DESC LIMIT 1,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

",173,6.550174713134766,250,"['movies', 'lists_users']"
292,"What is the lowest minimum temperature recorded in store 16 on January 2012? Hint: lowest minimum temperature refers to Min(tmin); store 16 refers to store_nbr = 16; on January 2012 refers to Substring (date, 1, 7) = '2012-01'",sales_in_weather,SELECT MIN(tmin) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 16 AND T1.`date` LIKE '%2012-01%',"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

",185,6.566164016723633,250,['weather']
293,Please list the starting stations of the bike trips made on a day with a max humidity over 80 in 2013 in the area where the zip code is 94107. Hint: starting stations refers to start_station_name; day with a max humidity over 80 refers to max_humidity>80; in 2013 refers to date LIKE'%2013';,bike_share_1,"SELECT DISTINCT T1.start_station_name FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), -4) = '2013' AND T2.zip_code = 94107 AND T2.max_temperature_f > 80","CREATE TABLE `weather` (
  date TEXT,
  max_temperature_f INTEGER,
  mean_temperature_f INTEGER,
  min_temperature_f INTEGER,
  max_dew_point_f INTEGER,
  mean_dew_point_f INTEGER,
  min_dew_point_f INTEGER,
  max_humidity INTEGER,
  mean_humidity INTEGER,
  min_humidity INTEGER,
  max_sea_level_pressure_inches REAL,
  mean_sea_level_pressure_inches REAL,
  min_sea_level_pressure_inches REAL,
  max_visibility_miles INTEGER,
  mean_visibility_miles INTEGER,
  min_visibility_miles INTEGER,
  max_wind_Speed_mph INTEGER,
  mean_wind_speed_mph INTEGER,
  max_gust_speed_mph INTEGER,
  precipitation_inches TEXT,
  cloud_cover INTEGER,
  events TEXT,
  wind_dir_degrees INTEGER,
  zip_code TEXT
);

CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

",201,6.609222173690796,250,"['weather', 'trip']"
294,How many author published papers in the 'IEEE Computer' journal? Hint: IEEE Computer refer to FullName; How many author published papers refer to COUNT(PaperAuthor.Name) where FullName = ’IEEE Computer’,authors,SELECT COUNT(T2.Name) FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId INNER JOIN Journal AS T3 ON T1.JournalId = T3.Id WHERE T3.FullName = 'IEEE Computer',"CREATE TABLE `paperAuthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",164,6.543498277664185,250,"['paperAuthor', 'journal']"
295,"List all the method name of the solution path ""graffen_NLog.Targets.Syslog\src\NLog.Targets.Syslog.sln
"". Hint: method name refers to Name; solution path refers to Path; Path = 'graffen_NLog.Targets.Syslog\src\NLog.Targets.Syslog.sln';",codebase_comments,SELECT DISTINCT T2.Name FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'graffen_NLog.Targets.SyslogsrcNLog.Targets.Syslog.sln',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",202,6.620806932449341,250,"['solution', 'method']"
296,How many matches were played by the player with player ID 2? Hint: player ID 2 refers to Player_Id = 2,soccer_2016,SELECT SUM(CASE WHEN Player_Id = 2 THEN 1 ELSE 0 END) FROM Player_Match,"CREATE TABLE `player_match` (
  Match_Id INTEGER PRIMARY KEY REFERENCES Match(Match_Id),
  Player_Id INTEGER PRIMARY KEY REFERENCES Player(Player_Id),
  Role_Id INTEGER PRIMARY KEY REFERENCES Rolee(Role_Id),
  Team_Id INTEGER REFERENCES Team(Team_Id)
);

",229,6.68216872215271,250,['player_match']
297,What is the genre ID of the game named 25 to Life? Hint: the game named 25 to Life refers to game_name = '25 to Life',video_games,SELECT T.genre_id FROM game AS T WHERE T.game_name = '25 to Life',"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

CREATE TABLE `genre` (
  id INTEGER,
  genre_name TEXT
);

",166,6.560425043106079,250,"['game', 'genre']"
298,Give me the brewery and brand names of canned root beer that were purchased before 6/6/2015. Hint: canned root beer refers to ContainerType = 'Can'; purchased before 6/6/2015 refers to PurchaseDate < '2015-06-06';,beer_factory,"SELECT DISTINCT T2.BreweryName, T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.PurchaseDate < '2015-06-06' AND T1.ContainerType = 'Can'","CREATE TABLE `rootbeer` (
  RootBeerID INTEGER,
  BrandID INTEGER REFERENCES rootbeerbrand(BrandID),
  ContainerType TEXT,
  LocationID INTEGER REFERENCES location(LocationID) REFERENCES geolocation(LocationID),
  PurchaseDate DATE
);

CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",198,6.605103015899658,250,"['rootbeer', 'rootbeerbrand']"
299,Calculate the average population per city in Karnataka district. Hint: average population = AVG(Population);,world,SELECT AVG(Population) FROM City WHERE District = 'Karnataka' GROUP BY ID,"CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",136,6.537554740905762,250,"['city', 'country']"
300,How many French customers shipped 2 orders which have been cancelled? Hint: French is a nationality of country = 'France'; cancelled orders refers to status = 'Cancelled';,car_retails,SELECT COUNT(T2.country) FROM orders AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.status = 'Shipped' AND T2.country = 'France' GROUP BY T2.customerNumber HAVING COUNT(T1.status) = 2,"CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",165,6.557555675506592,250,"['orders', 'customers']"
301,How many active users are there in the event? Hint: active refers to is_active = 1;,talkingdata,SELECT COUNT(app_id) FROM app_events WHERE is_active = 1,"CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

",192,6.574700355529785,250,['events']
302,Describe the voice actors and villains in Cinderella. Hint: Cinderella refers to movie_title = ' Cinderella';,disney,"SELECT T1.`voice-actor`, T2.villian FROM `voice-actors` AS T1 INNER JOIN characters AS T2 ON T1.movie = T2.movie_title WHERE T2.movie_title = 'Cinderella'","CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

",154,6.534937858581543,250,['voice-actors']
303,In which province is city Glenrothes located? What is the capital of the province?,mondial_geo,"SELECT T2.Province, T1.Capital FROM province AS T1 INNER JOIN city AS T2 ON T1.Name = T2.Province AND T1.Country = T2.Country WHERE T2.Name = 'Glenrothes'","CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `province` (
  Name TEXT PRIMARY KEY,
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population INTEGER,
  Area REAL,
  Capital TEXT,
  CapProv TEXT
);

",266,6.75187873840332,250,"['city', 'province']"
304,How many universities are located in Japan? Hint: located in Japan refers to country_name = 'Japan';,university,SELECT COUNT(*) FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Japan',"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

",154,6.543085336685181,250,"['university', 'country']"
305,How many female students are enlisted in the Navy organization? Hint: female students refers to enlist.name who are NOT in male.name; organization refers to organ; organ = 'navy';,student_loan,SELECT COUNT(name) FROM enlist WHERE organ = 'navy' AND name NOT IN ( SELECT name FROM male ),"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",191,6.571240425109863,250,"['enlist', 'male']"
306,What is the total number of game played for players from USA? Hint: game played refers to GP; from USA refers to birthCountry = 'USA';,hockey,SELECT COUNT(T2.GP) FROM Master AS T1 INNER JOIN Scoring AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCountry = 'USA',"CREATE TABLE `combinedshutouts` (
  year INTEGER,
  month INTEGER,
  date INTEGER,
  tmID TEXT,
  oppID TEXT,
  R/P TEXT,
  IDgoalie1 TEXT REFERENCES Master(playerID),
  IDgoalie2 TEXT REFERENCES Master(playerID)
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",245,6.695891380310059,250,"['combinedshutouts', 'teams']"
307,"Calculate the average enlisted students per organization. Hint: average = DIVIDE(FLOOR(COUNT(NAME), COUNT(DISTINCT organ)));",student_loan,SELECT CAST(COUNT(NAME) AS REAL) * 100 / COUNT(DISTINCT organ) FROM enlist,"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

",184,6.574486494064331,250,['enlist']
308,Which region does Noah Thompson live in?,retail_complains,SELECT T2.division FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.first = 'Noah' AND T1.last = 'Thompson',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `state` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

CREATE TABLE `district` (
  district_id INTEGER,
  city TEXT,
  state_abbrev TEXT REFERENCES state(StateCode),
  division TEXT
);

",126,6.474588394165039,250,"['client', 'state', 'district']"
309,"Which sport does the event ""Shooting Women's Trap"" belong to? Hint: sport refers to sport_name; event ""Shooting Women's Trap"" refers to event_name = 'Shooting Women''s Trap';",olympics,SELECT T1.sport_name FROM sport AS T1 INNER JOIN event AS T2 ON T1.id = T2.sport_id WHERE T2.event_name LIKE 'Shooting Women%s Trap',"CREATE TABLE `sport` (
  id INTEGER,
  sport_name TEXT
);

CREATE TABLE `event` (
  id INTEGER,
  sport_id INTEGER REFERENCES sport(id),
  event_name TEXT
);

",202,6.604689121246338,250,"['sport', 'event']"
310,"What is the area code of Bishopville, SC? Hint: ""Bishopville"" is the city; 'SC' is the state",address,SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.city = 'Bishopville' AND T2.state = 'SC',"CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

",160,6.5317301750183105,250,['area_code']
311,Calculate the difference between running business in Glendale City and Mesa City. Hint: running business refers to business where active = 'true';,public_review_platform,SELECT SUM(CASE WHEN city = 'Glendale' THEN 1 ELSE 0 END) - SUM(CASE WHEN city = 'Mesa' THEN 1 ELSE 0 END) AS diff FROM Business WHERE active = 'true',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",190,6.576041221618652,250,['business']
312,"What is the official full name of the current legislator whose current official Facebook presence is ""senjoniernst""? Hint: current official Facebook presence is ""senjoniernst"" refers to facebook = 'senjoniernst';",legislator,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `social-media` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.facebook = 'senjoniernst',"CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",168,6.5654213428497314,250,['current']
313,Please give the additional contact information of the oldest employee with the jod position of sales person. Hint: Sales person refers to PersonType = 'SP'; oldest employee refers to Max (Subtract((now())-BirthDate));,works_cycles,SELECT T2.AdditionalContactInfo FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE PersonType = 'SP' ORDER BY T1.BirthDate ASC LIMIT 1,"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `employeeDepartmenthistory` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Employee(None),
  DepartmentID INTEGER PRIMARY KEY REFERENCES Department(None),
  ShiftID INTEGER PRIMARY KEY REFERENCES Shift(None),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ModifiedDate DATETIME
);

CREATE TABLE `salesperson` (
  BusinessEntityID INTEGER REFERENCES Employee(BusinessEntityID),
  TerritoryID INTEGER REFERENCES SalesTerritory(TerritoryID),
  SalesQuota REAL,
  Bonus REAL,
  CommissionPct REAL,
  SalesYTD REAL,
  SalesLastYear REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",472,7.270498514175415,250,"['person', 'employee', 'employeeDepartmenthistory', 'salesperson']"
314,"Which is the most ordered quantity product? What is its expected profit margin per piece? Hint: The most ordered quantity product refers to productName where Max(quantityOrdered); SUBTRACT(MSRP, buyPrice);",car_retails,"SELECT productName, MSRP - buyPrice FROM products WHERE productCode = ( SELECT productCode FROM orderdetails ORDER BY quantityOrdered DESC LIMIT 1 )","CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

CREATE TABLE `orderdetails` (
  orderNumber INTEGER PRIMARY KEY REFERENCES orders(None),
  productCode TEXT PRIMARY KEY REFERENCES products(None),
  quantityOrdered INTEGER,
  priceEach REAL,
  orderLineNumber INTEGER
);

",173,6.5706586837768555,250,"['products', 'orderdetails']"
315,"Among the employees who are married, how many of them have a western name style? Hint: married refers to MaritalStatus = 'M'; western name style refers to NameStyle = '0';",works_cycles,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.NameStyle = 0 AND T1.MaritalStatus = 'M',"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",464,7.246657133102417,250,['person']
316,"What is the longest trip duration according? Convert the it to number of days. Hint: longest trip duration refers to MAX(duration); days conversion = DIVIDE(duration, 86400);",bike_share_1,"SELECT MAX(duration), CAST(MAX(duration) AS REAL) / 86400 FROM trip","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

",151,6.551077842712402,250,['trip']
317,On what dates did the billable period begin for patients with the last name Dickinson? Hint: dates when the billable period begin refers to BILLABLEPERIOD;,synthea,SELECT DISTINCT T2.BILLABLEPERIOD FROM patients AS T1 INNER JOIN claims AS T2 ON T1.patient = T2.PATIENT WHERE T1.last = 'Dickinson',"CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",182,6.584262132644653,250,['patients']
318,Please name three communities that experience the fraud incident. Hint: communities refers to community_area_name; 'Fraud Incident' is the title of crime,chicago_crime,SELECT T3.community_area_name FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T1.title = 'Criminal Sexual Assault' LIMIT 3,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `fbi_code` (
  fbi_code_no TEXT PRIMARY KEY,
  title TEXT,
  description TEXT,
  crime_against TEXT
);

",163,6.560809850692749,250,"['crime', 'fbi_code']"
319,Please list the first 3 teams that got the most penalty minutes in 2006. Hint: the first 3 teams that got the most penalty minutes refer to name where MAX(PIM) limit to 3; year = 2006;,hockey,"SELECT name FROM Teams WHERE year = 2006 GROUP BY tmID, name ORDER BY SUM(PIM) DESC LIMIT 3","CREATE TABLE `combinedshutouts` (
  year INTEGER,
  month INTEGER,
  date INTEGER,
  tmID TEXT,
  oppID TEXT,
  R/P TEXT,
  IDgoalie1 TEXT REFERENCES Master(playerID),
  IDgoalie2 TEXT REFERENCES Master(playerID)
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",267,6.776041746139526,250,"['combinedshutouts', 'teams']"
320,"From 1960 to 1965, which country has the lowest value of indicator belongs to Health: Population: Structure? Hint: From 1960 to 1965 refers to Year between '1960' and '1965'; the lowest value implies MIN(Value); country refers to CountryName;",world_development_indicators,SELECT CountryName FROM Indicators WHERE Value = ( SELECT MIN(T1.Value) FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T1.Year >= 1960 AND T1.Year < 1966 AND T2.Topic = 'Health: Population: Structure' ),"CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",194,6.599867105484009,250,"['indicators', 'country']"
321,"Among the devices on which an event happened on 2016/5/1, how many of them are used by a male user? Hint: on 2016/5/1 refers to timestamp = '2016-05-01'; male refers to gender = 'M';",talkingdata,SELECT COUNT(T1.device_id) FROM events AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T1.timestamp = '2016-05-01' AND T2.gender = 'M',"CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

CREATE TABLE `gender_age_train` (
  device_id INTEGER,
  gender TEXT,
  age INTEGER,
  group TEXT
);

",237,6.6792895793914795,250,"['events', 'phone_brand_device_model2', 'gender_age_train']"
322,What is the general and specific description of incident 275? Hint: incident 275 refers to iucr_no = 275; general description refers to primary_description; specific description refers to secondary_description,chicago_crime,"SELECT primary_description, secondary_description FROM IUCR WHERE iucr_no = 275","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `iucr` (
  iucr_no TEXT PRIMARY KEY,
  primary_description TEXT,
  secondary_description TEXT,
  index_code TEXT
);

",178,6.572674989700317,250,"['crime', 'iucr']"
323,How many white objects are there in image no.2347915? Hint: white objects refers to ATT_CLASS = 'white'; image no.2347915 refers to IMG_ID = 2347915,image_and_language,SELECT SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 2347915,"CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `obj_classES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",202,6.628016948699951,250,"['img_obj', 'obj_classES']"
324,Mention the person ID of faculty professor who taught course ID 104 and the course level. Hint: person ID refers to person.p_id; faculty professor refers to professor = 1 and hasPosition ! = 0,computer_student,"SELECT T1.p_id, T3.courseLevel FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T3.course_id = 104 AND T1.hasPosition <> 0","CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

CREATE TABLE `person` (
  p_id INTEGER,
  professor INTEGER,
  student INTEGER,
  hasPosition TEXT,
  inPhase TEXT,
  yearsInProgram TEXT
);

",157,6.553714275360107,250,"['taughtby', 'person']"
325,What was the rating of the episodes that Jace Alexander worked on?,law_episode,SELECT T1.rating FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T3.name = 'Jace Alexander',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",131,6.529434680938721,250,"['credit', 'episode', 'person']"
326,"Among the products from the mountain product line, how many of them are sold by over 2 vendors? Hint: mountain product line refers to ProductLine = 'M'; sold by over 5 vendors refers to count(Name)>5",works_cycles,SELECT SUM(CASE WHEN T1.ProductLine = 'M' THEN 1 ELSE 0 END) FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID GROUP BY T1.ProductID HAVING COUNT(T1.Name) > 2,"CREATE TABLE `productvendor` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Vendor(BusinessEntityID),
  AverageLeadTime INTEGER,
  StandardPrice REAL,
  LastReceiptCost REAL,
  LastReceiptDate DATETIME,
  MinOrderQty INTEGER,
  MaxOrderQty INTEGER,
  OnOrderQty INTEGER,
  UnitMeasureCode TEXT REFERENCES UnitMeasure(UnitMeasureCode),
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",472,7.2722742557525635,250,"['productvendor', 'product']"
327,"Of all the countries that share territory with more than one continent, in which of them does the average population not exceed 10 inhabitants per square kilometer?",mondial_geo,SELECT NAME FROM country WHERE CODE IN ( SELECT country FROM encompasses GROUP BY country HAVING COUNT(continent) > 1 ) AND population / Area <= 10,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `continent` (
  Name TEXT PRIMARY KEY,
  Area REAL
);

CREATE TABLE `population` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population_Growth REAL,
  Infant_Mortality REAL
);

CREATE TABLE `encompasses` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Continent TEXT PRIMARY KEY REFERENCES continent(None),
  Percentage REAL
);

",278,6.795799255371094,250,"['country', 'continent', 'population', 'encompasses']"
328,How many cities are there in the country with the surface area of 652090?,world,"SELECT T2.Name, COUNT(T1.Name) FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.SurfaceArea = 652090 GROUP BY T2.Name","CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",131,6.5273048877716064,250,"['city', 'country']"
329,What percentage of countries became independent during the year 1960? Hint: Percentage = count(countries independent 1960) / total num of countries,mondial_geo,"SELECT CAST(SUM(CASE WHEN STRFTIME('%Y', Independence) = '1960' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Country) FROM politics","CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",284,6.804551362991333,250,['country']
330,What is the highest price of dishes with menu item ID 1 to 5? Hint: highest price refers to MAX(price); menu item ID 1 to 5 refers to MenuItem.id BETWEEN 1 AND 5;,menu,SELECT T2.price FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.id BETWEEN 1 AND 5 ORDER BY T2.price DESC LIMIT 1,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",161,6.549104690551758,250,"['dish', 'menuitem']"
331,Write down the ID and opening day of a week for the business which are running in Black Canyon City. Hint: running refers to active = 'true'; opening day of a week means days of the week when business is open;,public_review_platform,"SELECT T2.business_id, T3.day_of_week FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city = 'Black Canyon City' AND T1.active = 'true'","CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `days` (
  day_id INTEGER,
  day_of_week TEXT
);

",209,6.621131658554077,250,"['business', 'days']"
332,Please list the credit card IDs of the employees who work as store contact. Hint: store contact refers to PersonType = 'SC';,works_cycles,SELECT T2.CreditCardID FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.PersonType = 'SC',"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `personcreditcard` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Person(BusinessEntityID),
  CreditCardID INTEGER PRIMARY KEY REFERENCES CreditCard(CreditCardID),
  ModifiedDate DATETIME
);

",452,7.215368986129761,250,"['person', 'personcreditcard']"
333,Please list the top ten movies with the most price per day in descending order of price per day. Hint: movies with the most price per day refers to MAX(rental_rate),movie_3,SELECT title FROM film ORDER BY rental_rate / rental_duration DESC LIMIT 10,"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `inventory` (
  inventory_id INTEGER,
  film_id INTEGER REFERENCES film(None),
  store_id INTEGER REFERENCES store(None),
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",203,6.629382610321045,250,"['film', 'inventory', 'rental']"
334,Which state has the most bad aliases? Hint: the most bad aliases refer to MAX(COUNT(bad_alias));,address,SELECT T2.state FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code GROUP BY T2.state ORDER BY COUNT(T1.bad_alias) DESC LIMIT 1,"CREATE TABLE `alias` (
  zip_code INTEGER REFERENCES zip_data(zip_code),
  alias TEXT
);

CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

",158,6.542908191680908,250,"['alias', 'state']"
335,"Who ordered the order ID CA-2011-118976 from the East region? Hint: Who refers to ""Customer Name""",superstore,SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Order ID` = 'CA-2011-118976' AND T2.Region = 'East',"CREATE TABLE `people` (
  Customer ID TEXT PRIMARY KEY,
  Customer Name TEXT,
  Segment TEXT,
  Country TEXT,
  City TEXT,
  State TEXT,
  Postal Code INTEGER,
  Region TEXT PRIMARY KEY
);

CREATE TABLE `east_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",159,6.536661148071289,250,"['people', 'east_superstore']"
336,List all of the user ids and ages who rated movies with the id 1695219?,movielens,"SELECT T2.userid, T2.age FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.movieid = 1695219","CREATE TABLE `u2base` (
  userid INTEGER PRIMARY KEY REFERENCES users(None),
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  rating TEXT
);

CREATE TABLE `users` (
  userid INTEGER,
  age TEXT,
  u_gender TEXT,
  occupation TEXT
);

",152,6.52669882774353,250,"['u2base', 'users']"
337,"Where is the school that needs a ""Viewscreen LCD from Texas Instruments, TI-84 Plus""? Provide the latitude and longitude of that school. Hint: needs a ""Viewscreen LCD from Texas Instruments, TI-84 Plus"" refers to item_name = 'Viewscreen LCD from Texas Instruments, TI-84 Plus'; where is the school refers to school_city; latitude refers to school_latitude; longtitude refers to school_longitude",donor,"SELECT T2.school_city, T2.school_latitude, T2.school_longitude FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.item_name = 'Viewscreen LCD FROM Texas Instruments, TI-84 Plus'","CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",224,6.638171672821045,250,['projects']
338,What are the ratings of the film featuring behind the scenes? Hint: film featuring behind the scenes refers to special_features = 'Behind the Scenes',movie_3,SELECT rating FROM film WHERE special_features LIKE '%Behind the Scenes%',"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

",196,6.597481727600098,250,['film_text']
339,"Among the books ordered by Lucas Wyldbore, how many of them are over 300 pages? Hint: books have over 300 pages refers to num_pages > 300",books,SELECT COUNT(*) FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.first_name = 'Lucas' AND T4.last_name = 'Wyldbore' AND T1.num_pages > 300,"CREATE TABLE `order_line` (
  line_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  book_id INTEGER REFERENCES book(None),
  price REAL
);

CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `cust_order` (
  order_id INTEGER,
  order_date DATETIME,
  customer_id INTEGER REFERENCES customer(None),
  shipping_method_id INTEGER REFERENCES shipping_method(None),
  dest_address_id INTEGER REFERENCES address(None)
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  email TEXT
);

",210,6.615785360336304,250,"['order_line', 'book', 'cust_order', 'customer']"
340,"Please list the movies rated by the user who created the movie list ""250 Favourite Films"". Hint: 250 Favourite Films' is list_title; movies refers to movie_title;",movie_platform,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id INNER JOIN lists AS T3 ON T3.user_id = T1.user_id WHERE T3.list_title = '250 Favourite Films',"CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",164,6.53962254524231,250,"['lists', 'movies']"
341,How many customers are still active? Hint: active refers to active = 1,movie_3,SELECT COUNT(customer_id) FROM customer WHERE active = 1,"CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",179,6.557971954345703,250,['customer']
342,User 58149469's critic on which film got 1 like and 2 comments? Hint: user 58149469 refers to user_id = 58149469; critic with 1 like refers to critic_likes = 1; critic with 2 comments refers to critic_comments = 2;,movie_platform,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 58149469 AND T1.critic_likes = 1 AND T1.critic_comments = 2,"CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",196,6.597590208053589,250,"['ratings', 'movies']"
343,How many restaurants have not obtained a minimum of 3 in their reviews? Hint: have not obtained a minimum of 3 in review refers to review < 3,restaurant,SELECT COUNT(id_restaurant) FROM generalinfo WHERE review < 3,"CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",138,6.51038932800293,250,['generalinfo']
344,Which country has the smallest surface area and the most crowded city? Hint: smallest surface area refers to MIN(smallest surface area); most crowded city refers to MAX(Population);,world,"SELECT T2.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code ORDER BY T1.Population DESC, T2.SurfaceArea DESC LIMIT 1","CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",148,6.524807691574097,250,"['city', 'country']"
345,"What is the label ID of ""Third-party card management"" category?",talkingdata,SELECT label_id FROM label_categories WHERE category = 'Third-party card management',"CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",186,6.562561511993408,250,['label_categories']
346,"Among the crimes, what percentage are severe? Hint: severe refers to index_code = 'I'; percentage = divide(count(iucr_no where index_code = 'I'), count(iucr_no)) * 100%",chicago_crime,SELECT CAST(COUNT(CASE WHEN index_code = 'I' THEN iucr_no ELSE NULL END) AS REAL) * 100 / COUNT(iucr_no) FROM IUCR,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `iucr` (
  iucr_no TEXT PRIMARY KEY,
  primary_description TEXT,
  secondary_description TEXT,
  index_code TEXT
);

",184,6.56299352645874,250,"['crime', 'iucr']"
347,"For the state which has the 113 2-year public schools, tell the number of graduated Asian students who seeks another type of degree or certificate at a 2-year institution in 2013. Hint: schools_count = 113; 2-year refers to level = '2-year'; public refers to control = 'public'; Asian refers to race = 'A'; seeks another type of degree or certificate at a 2-year institution refers to cohort = '2y all'; in 2013 refers to year = 2013;",college_completion,SELECT COUNT(T2.grad_cohort) FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T2.level = '2-year' AND T2.control = 'Public' AND T2.gender = 'B' AND T2.race = 'A' AND T2.cohort = '2y all' AND T1.schools_count = 113,"CREATE TABLE `institution_details` (
  unitid INTEGER,
  chronname TEXT,
  city TEXT,
  state TEXT,
  level TEXT,
  control TEXT,
  basic TEXT,
  hbcu TEXT,
  flagship TEXT,
  long_x REAL,
  lat_y REAL,
  site TEXT,
  student_count INTEGER,
  awards_per_value REAL,
  awards_per_state_value REAL,
  awards_per_natl_value REAL,
  exp_award_value INTEGER,
  exp_award_state_value INTEGER,
  exp_award_natl_value INTEGER,
  exp_award_percentile INTEGER,
  ft_pct REAL,
  fte_value INTEGER,
  fte_percentile INTEGER,
  med_sat_value TEXT,
  med_sat_percentile TEXT,
  aid_value INTEGER,
  aid_percentile INTEGER,
  endow_value TEXT,
  endow_percentile TEXT,
  grad_100_value REAL,
  grad_100_percentile INTEGER,
  grad_150_value REAL,
  grad_150_percentile INTEGER,
  pell_value REAL,
  pell_percentile INTEGER,
  retain_value REAL,
  retain_percentile INTEGER,
  ft_fac_value REAL,
  ft_fac_percentile INTEGER,
  vsa_year TEXT,
  vsa_grad_after4_first TEXT,
  vsa_grad_elsewhere_after4_first TEXT,
  vsa_enroll_after4_first TEXT,
  vsa_enroll_elsewhere_after4_first TEXT,
  vsa_grad_after6_first TEXT,
  vsa_grad_elsewhere_after6_first TEXT,
  vsa_enroll_after6_first TEXT,
  vsa_enroll_elsewhere_after6_first TEXT,
  vsa_grad_after4_transfer TEXT,
  vsa_grad_elsewhere_after4_transfer TEXT,
  vsa_enroll_after4_transfer TEXT,
  vsa_enroll_elsewhere_after4_transfer TEXT,
  vsa_grad_after6_transfer TEXT,
  vsa_grad_elsewhere_after6_transfer TEXT,
  vsa_enroll_after6_transfer TEXT,
  vsa_enroll_elsewhere_after6_transfer TEXT,
  similar TEXT,
  state_sector_ct INTEGER,
  carnegie_ct INTEGER,
  counted_pct TEXT,
  nicknames TEXT,
  cohort_size INTEGER
);

CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",249,6.6884026527404785,250,"['institution_details', 'institution_grads']"
348,What is the title of the paper that was written by Cheng Huang and affiliated with Microsoft? Hint: paper that was written by Cheng Huang refers to Name = 'Cheng Huang'; affiliated with Microsoft refers to Affiliation LIKE 'Microsoft %',authors,SELECT T1.Title FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T2.Name = 'Cheng Huang' AND T2.Affiliation = 'Microsoft',"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `paperauthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

",171,6.550074338912964,250,"['paper', 'paperauthor']"
349,"In 2010, how many single patients took Nitrofurantoin 5 mg/ML [Furadantin] to cure cystitis? Hint: in 2010 refers to substr(medications.START, 1, 4) = '2010' AND substr(medications.stop, 1, 4) = '2010'; Nitrofurantoin 5 mg/ML [Furadantin] refers to medications.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]'; cystitis refers to medications.REASONDESCRIPTION = 'Cystitis';",synthea,"SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T1.marital = 'S' AND T2.REASONDESCRIPTION = 'Cystitis' AND T2.DESCRIPTION = 'Nitrofurantoin 5 MG/ML [Furadantin]' AND strftime('%Y', T2.START) = '2010'","CREATE TABLE `medications` (
  START DATE PRIMARY KEY,
  STOP DATE,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",301,6.819146156311035,250,['medications']
350,"How many neutral reviews does the app ""Dino War: Rise of Beasts"" have? Hint: neutral reviews refers to Sentiment = 'Neutral';",app_store,SELECT COUNT(App) FROM user_reviews WHERE App = 'Dino War: Rise of Beasts' AND Sentiment = 'Neutral',"CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",139,6.511638641357422,250,"['playstore', 'user_reviews']"
351,Please list all business IDs in Mesa city that review stars of over 3. Hint: stars > 3;,public_review_platform,SELECT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Mesa' AND T2.review_stars > 3 GROUP BY T1.business_id,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",184,6.55782413482666,250,"['reviews', 'business']"
352,List out the stop date of the care plan of dead patients. Hint: stop date of the care plan refers to careplans.STOP; dead patients refers to deathdate is not null;,synthea,SELECT DISTINCT T1.STOP FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.deathdate IS NOT NULL AND T1.STOP IS NOT NULL,"CREATE TABLE `careplans` (
  ID TEXT,
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE REAL,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",186,6.562346696853638,250,"['careplans', 'patients']"
353,Who directed the most popular movie? Hint: The most popular movie refers MAX(total_gross); who directed refers to director;,disney,"SELECT T2.director FROM movies_total_gross AS T1 INNER JOIN director AS T2 ON T1.movie_title = T2.name ORDER BY CAST(REPLACE(trim(T1.total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1","CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

",149,6.52104640007019,250,"['movies_total_gross', 'director']"
354,List the phone numbers of customers whose order priority is urgent. Hint: phone number refers to c_phone; order priority is urgent refers to o_orderpriority = '1-URGENT',retails,SELECT T2.c_phone FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_orderpriority = '1-URGENT',"CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

",167,6.538963317871094,250,"['orders', 'customer']"
355,Calculate the total price of items for menu with ID 12882. Hint: total price = SUM(price);,menu,SELECT SUM(T2.price) FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id WHERE T1.menu_id = 12882,"CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

",137,6.509483575820923,250,"['menuitem', 'dish']"
356,How many events in total have happened on the devices in 2016? Hint: in 2016 refers to `timestamp` LIKE '2016%';,talkingdata,"SELECT COUNT(event_id) FROM `events` WHERE SUBSTR(`timestamp`, 1, 4) = '2016'","CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

",210,6.613720178604126,250,['events']
357,"Please list the names of all the producers in the movie ""Pirates of the Caribbean: At World's End"". Hint: names refers to person_name; producers refers to job = 'Producer'; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: At World''s End'",movies_4,SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Producer',"CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

CREATE TABLE `movie_crew` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  department_id INTEGER REFERENCES department(department_id),
  job TEXT
);

",254,6.69636344909668,250,"['person', 'movie_crew']"
358,Provide the genre name of the genre ID 3. Hint: genre ID 3 refers to genre.id = 3,video_games,SELECT T.genre_name FROM genre AS T WHERE T.id = 3,"CREATE TABLE `genre` (
  id INTEGER,
  genre_name TEXT
);

",154,6.524402856826782,250,['genre']
359,"How many businesses in Phoenix, Arizona is attributed to waiter service? Hint: 'Phoenix' is the city; waiter service refers to attribute_name = 'waiter_services'",public_review_platform,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.city LIKE 'Phoenix' AND T3.attribute_name LIKE 'waiter_service' AND T2.attribute_id = 2,"CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

",201,6.602031707763672,250,"['business_attributes', 'attributes']"
360,List down the episode ID of episodes aired in 2008 with 5 stars and below. Hint: aired in 2008 refers to air_date LIKE '2008%'; 5 stars and below refers to stars < 5,simpson_episodes,"SELECT DISTINCT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 4) = '2008' AND T2.stars < 5;","CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",180,6.556514739990234,250,['episode']
361,"Among the devices with an event occurring in 2016, how many of them are owned by a user in the M23-26 user group? Hint: in 2016 refers to year(timestamp) = 2016; M23-26 user group refers to `group` = 'M23-26';",talkingdata,"SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events AS T2 ON T1.device_id = T2.device_id WHERE STRFTIME('%Y', T2.timestamp) = '2016' AND T1.`group` = 'M23-26'","CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",247,6.6808202266693115,250,"['events', 'phone_brand_device_model2']"
362,What is the occasion for menu with ID 12463? Hint: FALSE;,menu,SELECT occasion FROM Menu WHERE id = 12463,"CREATE TABLE `menuPage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",129,6.505217552185059,250,"['menuPage', 'menu']"
363,"Provide the institute name with less than 200 graduate cohort of all races and genders in 2013. Also, please state the total number of full-time equivalent undergraduates for the institute. Hint: institute name refers to chronname; less than 200 graduate cohort refers to grad_cohort < 200; all races refers to race = 'X'; all genders refers to gender = 'B'; in 2013 refers to year = 2013; total number of full-time equivalent undergraduates refers to fte_value;",college_completion,"SELECT T1.chronname, T2.grad_cohort FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.year = 2013 AND T2.gender = 'B' AND T2.race = 'X' AND T2.grad_cohort < 200","CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",257,6.7332236766815186,250,['institution_grads']
364,"What is the name of the product that was ordered recently by Darren Powers? Hint: Darren Powers is the ""Customer Name""; name of the product refers to ""Product Name""; recently refers to MAX(""Order Date"")",superstore,SELECT T3.`Product Name` FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Darren Powers' ORDER BY T2.`Order Date` DESC LIMIT 1,"CREATE TABLE `people` (
  Customer ID TEXT PRIMARY KEY,
  Customer Name TEXT,
  Segment TEXT,
  Country TEXT,
  City TEXT,
  State TEXT,
  Postal Code INTEGER,
  Region TEXT PRIMARY KEY
);

CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",174,6.551903009414673,250,"['people', 'central_superstore']"
365,"What is the full name of the employee who gave the highest amount of fine of all time? Hint: full name refers to first_name, last_name; the highest amount of fine refers to max(sum(fine))",food_inspection_2,"SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, SUM(T3.fine) FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id GROUP BY T1.first_name, T1.last_name ORDER BY SUM(T3.fine) DESC LIMIT 1 ) t","CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

",165,6.543523788452148,250,"['employee', 'violation']"
366,"What are the product names of Exotic Liquids? Hint: ""Exotic Liquids"" is the CompanyName",retail_world,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Exotic Liquids',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",161,6.539684057235718,250,"['products', 'suppliers']"
367,How many students will be impacted for the Fit Firsties! Project? Hint: how many students refers to students_reached; Fit Firsties! project refers to title = 'Fit Firsties!',donor,SELECT T2.students_reached FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Fit Firsties!',"CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",158,6.532853126525879,250,['projects']
368,Calculate the number of game publisher IDs for games released in 1984. Hint: released in 1984 refers to release_year = 1984;,video_games,SELECT COUNT(T.game_publisher_id) FROM game_platform AS T WHERE T.release_year = 1984,"CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

",168,6.545297145843506,250,['game_publisher']
369,"Which phone brand and model was used for event ID ""6701""? Hint: model refers to device_model;",talkingdata,"SELECT T2.phone_brand, T2.device_model FROM events AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.event_id = 6701","CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",196,6.596307754516602,250,['phone_brand_device_model2']
370,Indicate the fax of the company Blondesddsl pre et fils in Strasbourg city. Hint: 'Blondesddsl pre et fils' is a CompanyName,retail_world,SELECT Fax FROM Customers WHERE CompanyName = 'Blondesddsl pre et fils' AND City = 'Strasbourg',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",177,6.5573790073394775,250,['customers']
371,Please list the products that are out of stock and purchased in house. Hint: take more than 2 days to make refers to DaysToManufacture>2; out of stock refers to OnOrderQty = 0 or OnOrderQty is null; manufactured in house refers to MakeFlag = 1,works_cycles,SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.MakeFlag = 0 AND (T1.OnOrderQty IS NULL OR T1.OnOrderQty = 0),"CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productinventory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  LocationID INTEGER PRIMARY KEY REFERENCES Location(LocationID),
  Shelf TEXT,
  Bin INTEGER,
  Quantity INTEGER,
  rowguid TEXT,
  ModifiedDate DATETIME
);

",486,7.280161142349243,250,"['product', 'productinventory']"
372,How many images have a total of 10 attribute classes? Hint: images refer to IMG_ID; total of 10 attribute classes refers to COUNT(OBJ_CLASS_ID) = 10;,image_and_language,SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE OBJ_CLASS_ID = 10,"CREATE TABLE `img_obj_att` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID),
  ATT_CLASS_ID INTEGER PRIMARY KEY REFERENCES ATT_CLASSES(ATT_CLASS_ID),
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",191,6.573685884475708,250,['img_obj_att']
373,"Calculate the average net profit of bar tools which has ordered quantity exceed 5. Hint: net profit can be computed as SUBTRACT(Unit Price, Unit Cost); AVG(net profit) where Product Name = 'Bar Tools' and Order Quantity > 5;",regional_sales,"SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE T2.`Product Name` = 'Bar Tools' AND T1.`Order Quantity` > 5","CREATE TABLE `products` (
  ProductID INTEGER,
  Product Name TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",180,6.563499927520752,250,"['products', 'sales orders']"
374,Which of the film released in 2008 scored the highest? Hint: film released in 2008 refers to movie_release_year = 2008; scored the highest refers to Max(rating_score); film refers to movie;,movie_platform,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year = 2008 ORDER BY T1.rating_score DESC LIMIT 1,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",171,6.555030822753906,250,"['movies', 'ratings']"
375,List the short name of all conferences whose full name begins with International Symposium. Hint: full name refers to FullName LIKE 'International Symposium%',authors,SELECT ShortName FROM Conference WHERE FullName LIKE 'International Symposium%',"CREATE TABLE `conference` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",151,6.538784980773926,250,['conference']
376,Name the most famous university in Argentina. Hint: in Argentina refers to country_name = 'Argentina';  most famous refers to MAX(SUM(score)),university,SELECT T1.university_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Argentina' GROUP BY T1.university_name ORDER BY SUM(T2.score) DESC LIMIT 1,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",164,6.561866760253906,250,"['university', 'country', 'university_year']"
377,"How many orders which expected profits greater than 100? Hint: expected profits greater than 100 = (SUBTRACT(msrp, buyPrice))>100;",car_retails,SELECT COUNT(T1.productCode) FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode WHERE T2.MSRP - T2.buyPrice > 100,"CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

",165,6.55219841003418,250,['orders']
378,"How many votes did the episode titled ""Cherished"" get in total? Hint: titled ""Cherished"" refers to title = 'Cherished'",law_episode,SELECT SUM(T2.votes) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Cherished',"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",151,6.528621673583984,250,"['episode', 'vote']"
379,List the capability of research postgraduate students with an intellegence level of 4 and above. Hint: research postgraduate students refers to type = 'RPG'; intelligence level of 4 and above refers to intelligence > = 4;,cs_semester,SELECT T1.capability FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.type = 'RPG' AND T2.intelligence >= 4,"CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",161,6.537623643875122,250,['student']
380,What is the average satisfying degree of the course Machine Learning Theory? Hint: sat refers to student's satisfaction degree with the course;,cs_semester,SELECT CAST(SUM(T1.sat) AS REAL) / COUNT(T1.student_id) FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.name = 'Machine Learning Theory',"CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

",140,6.514190435409546,250,"['course', 'ra']"
381,"How many Scottish League One games took place on the day that ""Pro Vercelli"" and ""Pescara""had a 5-2 game? Hint: Pro Vercelli and Pescara are names of teams; HomeTeam = 'Pro Vercelli'; AwayTeam = 'Pescara'; 5-2 is a score where FTHG = '5' and FTAG = '2'; Scottish League One is a name of division; games refer to Div;",european_football_1,SELECT COUNT(T1.Date) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Scottish League One' AND T1.Date = ( SELECT Date FROM matchs WHERE FTHG = 5 AND FTAG = 2 AND HomeTeam = 'Pro Vercelli' AND AwayTeam = 'Pescara' ),"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",204,6.608671426773071,250,"['matchs', 'divisions']"
382,"Give the abbreviation name for the character ""Earl of Westmoreland"". Hint: abbreviation name refers to Abbrev; character ""Earl of Westmoreland"" refers to CharName = 'Earl of Westmoreland'",shakespeare,SELECT DISTINCT Abbrev FROM characters WHERE CharName = 'Earl of Westmoreland',"CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

",166,6.545482873916626,250,['characters']
383,How many awards had been held in 2009? Hint: had been held in 2009 refers to year = 2009,simpson_episodes,"SELECT COUNT(award_id) FROM Award WHERE SUBSTR(year, 1, 4) = '2009';","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

",156,6.535118341445923,250,['award']
384,"What are the cities for country called ""Â´Uman"" in local name.",world,SELECT T1.Name FROM City AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T2.LocalName = 'Â´Uman',"CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",128,6.470370769500732,250,"['city', 'country']"
385,How many players who were drafted by the Toronto Maple Leafs have played over 300 games in their first 7 years of the NHL career? Hint: drafted by the Toronto Maple Leafs refers to overallby = 'Toronto Maple Leafs'; played over 300 games in their first 7 years of the NHL career refers to sum_7yr_GP > 300;,ice_hockey_draft,SELECT COUNT(ELITEID) FROM PlayerInfo WHERE overallby = 'Toronto Maple Leafs' AND sum_7yr_GP > 300,"CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",206,6.6122801303863525,250,"['seasonstatus', 'playerinfo']"
386,How many patients immunized against 'monovalent rotavirus' ceased their care plan on 11/23/2013? Hint: immunized against monovalent rotavirus refers to immunizations.DESCRIPTION = 'rotavirus monovalent'; ceased their care plan on 11/23/2013 refers to careplans.STOP = '2013-11-23';,synthea,SELECT COUNT(DISTINCT T1.patient) FROM careplans AS T1 INNER JOIN immunizations AS T2 ON T1.patient = T2.PATIENT WHERE T2.DESCRIPTION = 'rotavirus  monovalent' AND T1.STOP = '2013-11-23',"CREATE TABLE `immunizations` (
  DATE DATE PRIMARY KEY,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT
);

CREATE TABLE `careplans` (
  ID TEXT,
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE REAL,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",245,6.680686950683594,250,"['immunizations', 'careplans']"
387,What is the release title of the single that was released by Ron Hunt in 1979 that was downloaded 239 times? Hint: release title refers to groupName; Ron Hunt is an artist; groupYear = 1979; releaseType = 'single'; downloaded 239 times refer to totalSnatched = 239;,music_tracker,SELECT groupName FROM torrents WHERE artist LIKE 'ron hunt & ronnie g & the sm crew' AND groupYear = 1979 AND releaseType LIKE 'single' AND totalSnatched = 239,"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

",180,6.559134006500244,250,['torrents']
388,"Which business ID have the shortest business operating hours? Hint: the shortest business operating hours refer to MIN(SUBTRACT(closing_time, opening_time));",public_review_platform,SELECT business_id FROM Business_Hours ORDER BY closing_time - opening_time LIMIT 1,"CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

",197,6.603103399276733,250,['business_hours']
389,"Among the incidents in January, 2018, how many of them were stated ""against Property"" in the FBI classification? Hint: in January 2018 refers to Substr(date, 1, 1) = '1' AND Substr(date, 5, 4) = '2018'; against property refers to crime_against = 'Property'",chicago_crime,"SELECT SUM(CASE WHEN SUBSTR(T2.date, 5, 4) = '2018' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.crime_against = 'Property' AND SUBSTR(T2.date, 1, 1) = '1'","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `fbi_code` (
  fbi_code_no TEXT PRIMARY KEY,
  title TEXT,
  description TEXT,
  crime_against TEXT
);

",214,6.624179363250732,250,"['crime', 'fbi_code']"
390,"Among the active businesses located at Chandler, AZ, list the category and atrributes of business with a medium review count. Hint: active businesses refers to active = 'true'; located at Chandler, AZ refers to city = 'Chandler', state = 'AZ'; category refers to category_name; atrributes refers to attribute_name",public_review_platform,"SELECT T3.category_name, T5.attribute_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id INNER JOIN Business_Attributes AS T4 ON T1.business_id = T4.business_id INNER JOIN Attributes AS T5 ON T4.attribute_id = T5.attribute_id WHERE T1.active LIKE 'TRUE' AND T1.state LIKE 'AZ' AND T1.city LIKE 'Chandler' AND T1.review_count LIKE 'Medium'","CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",238,6.672435283660889,250,"['business', 'business_categories', 'business_attributes', 'categories']"
391,Which employee has created the least order and please indicates the employee's title? Hint: least order refers to Min(OrderID),retail_world,SELECT T1.Title FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.Title ORDER BY COUNT(T2.OrderID) LIMIT 1,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

",163,6.543359756469727,250,"['employees', 'orders']"
392,In which region can you find the top 4 most popular restaurants? Hint: the top 4 most popular restaurant refers to top 4 max(review),restaurant,SELECT T2.region FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city ORDER BY T1.review DESC LIMIT 4,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",138,6.513738632202148,250,"['location', 'generalinfo']"
393,"For the solution of the most 'sw' methods, what is its path? Hint: solution refers to SolutionId; sw refers to Lang = 'sw'; solution with the most 'sw' methods refers to MAX(COUNT(Lang = 'sw'));",codebase_comments,SELECT DISTINCT T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Lang = 'sw',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",169,6.548435211181641,250,"['solution', 'method']"
394,"Among the artists with the id from 10 to 30. Which artist released the product with the tag ""funk"" in 1980? Hint: id from 10 to 30 refers to id between 10 and 30; groupYear = 1980;",music_tracker,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'funk' AND T1.groupYear = 1980 AND T1.id BETWEEN 10 AND 30,"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

CREATE TABLE `tags` (
  index INTEGER PRIMARY KEY,
  id INTEGER REFERENCES torrents(None),
  tag TEXT
);

",168,6.547300577163696,250,"['torrents', 'tags']"
395,"What is the rating for ""Draw A Stickman""? Hint: Draw A Stickman refers to App = 'Draw A Stickman';",app_store,SELECT Rating FROM playstore WHERE APP = 'Draw A Stickman',"CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

",135,6.512478828430176,250,['playstore']
396,How many professors are more popular than Zhou Zhihua? Hint: higher popularity means the professor is more popular;,cs_semester,SELECT COUNT(prof_id) FROM prof WHERE popularity > ( SELECT popularity FROM prof WHERE first_name = 'Zhihua' AND last_name = 'Zhou' ),"CREATE TABLE `prof` (
  prof_id INTEGER,
  gender TEXT,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  popularity INTEGER,
  teachingability INTEGER,
  graduate_from TEXT
);

",139,6.515135049819946,250,['prof']
397,"How many flights on average does American Airlines Inc. operate every day in August, 2018? Hint: flights on average = DIVIDE(COUNT(Code), 31); American Airlines Inc. refers to Description = 'American Airlines Inc.: AA'; every day in August, 2018 refers to FL_DATE like '2018/8%';",airline,SELECT CAST( SUM(CASE WHEN T2.FL_DATE LIKE '2018/8%' THEN 1 ELSE 0 END) AS REAL) / 31 FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T3.Description = 'American Airlines Inc.: AA',"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",192,6.570270299911499,250,"['airlines', 'air carriers']"
398,"What is the average number of horror movies among all movies genre? Hint: horror movies refers to genre_name = 'horror'; average number = divide(sum(movie_id) when genre_name = 'horror', count(movie_id))",movies_4,SELECT CAST(COUNT(CASE WHEN T3.genre_name = 'Horror' THEN T1.movie_id ELSE NULL END) AS REAL) / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id,"CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

",234,6.6607136726379395,250,"['movie_genres', 'genre']"
399,"How many countries have country note description as ""Sources: UN Energy Statistics (2014)""? List the currency of these countries. Hint: countries refer to CountryCode; currency refers to CurrencyUnit;",world_development_indicators,SELECT COUNT(DISTINCT T1.Countrycode) FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Sources: UN Energy Statistics (2014)' UNION SELECT DISTINCT t1.CurrencyUnit FROM country AS t1 INNER JOIN countrynotes AS t2 ON t1.CountryCode = t2.Countrycode WHERE t2.Description = 'Sources: UN Energy Statistics (2014)',"CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",163,6.541011810302734,250,"['countrynotes', 'country']"
400,"What are the different ways the name of the author, Randall Davis, is written on their papers? Hint: Randall Davis refer to Author.Name",authors,SELECT DISTINCT T1.Name FROM PaperAuthor AS T1 INNER JOIN Author AS T2 ON T1.AuthorId = T2.Id WHERE T2.Name = 'Randall Davis' AND T1.Name != 'Randall Davis',"CREATE TABLE `paperAuthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",146,6.520998954772949,250,"['paperAuthor', 'author']"
401,"What is the contact title for the person who supplied a product that is 10 boxes x 12 pieces. Hint: ""10 boxes x 12 pieces"" is the QuantityPerUnit",retail_world,SELECT T2.ContactTitle FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T1.QuantityPerUnit = '10 boxes x 12 pieces',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",178,6.558543920516968,250,"['products', 'suppliers']"
402,"Define the onion's bounding box on image no. 285930. Hint: bounding box refers to (X, Y, W, H); onion refers to OBJ_CLASS = 'onion'; image no.285930 refers to IMG_ID = 285930",image_and_language,"SELECT T1.X, T1.Y, T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 285930 AND T2.OBJ_CLASS = 'onion'","CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `obj_classES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",217,6.628932952880859,250,"['img_obj', 'obj_classES']"
403,In which city is the store with the highest sales order unit price located? Hint: highest sales order unit price refers to Max(Unit Price),regional_sales,"SELECT T2.`City Name` FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE REPLACE(T1.`Unit Price`, ',', '') = ( SELECT REPLACE(T1.`Unit Price`, ',', '') FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID ORDER BY REPLACE(T1.`Unit Price`, ',', '') DESC LIMIT 1 ) ORDER BY REPLACE(T1.`Unit Price`, ',', '') DESC LIMIT 1","CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",152,6.5291428565979,250,"['store locations', 'sales orders']"
404,"Calculate the average number of the word occurrences in which ‘system’ appeared as the first word in the pair. Hint: average word occurrences = divide(sum(occurrences), count(occurrences)); ‘system’ appeared as the first word refers to w1st = 'system'",language_corpus,SELECT AVG(T2.occurrences) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st WHERE T2.w1st = ( SELECT wid FROM words WHERE word = 'sistema' ),"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",194,6.597002029418945,250,"['words', 'pages', 'pages_words']"
405,How many males were members of the current legislators? Hint: male refers to gender_bio = 'M',legislator,SELECT COUNT(*) FROM current WHERE gender_bio = 'M',"CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",142,6.519177198410034,250,['current']
406,Provide the alias of the city with the highest population in year 2020. Hint: the highest population in year 2020 refers to MAX(population_2020);,address,SELECT T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.population_2020 = ( SELECT MAX(population_2020) FROM zip_data ),"CREATE TABLE `alias` (
  zip_code INTEGER REFERENCES zip_data(zip_code),
  alias TEXT
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",175,6.5544044971466064,250,"['alias', 'zip_data']"
407,"How many percent of senators were from class 1? Hint: senator refers to type = 'sen'; class 1 refers to class = 1; calculation = MULTIPLY(DIVIDE(COUNT(class = 1 then bioguide), COUNT(bioguide)), 1.0)",legislator,SELECT CAST(SUM(CASE WHEN class = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `historical-terms` WHERE type = 'sen',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",182,6.564080476760864,250,['historical']
408,"Which product got the most five stars, and how many? Hint: most five stars refers to MAX(COUNT(stars = 5));",retail_complains,"SELECT T.Product, MAX(T.num) FROM ( SELECT Product, COUNT(Stars) AS num FROM reviews WHERE Stars = 5 GROUP BY Product ) T","CREATE TABLE `reviews` (
  Date DATE PRIMARY KEY,
  Stars INTEGER,
  Reviews TEXT,
  Product TEXT,
  district_id INTEGER REFERENCES district(district_id)
);

",146,6.519202709197998,250,['reviews']
409,"List down all the roles of Matt Groening on the episode titled 'In the Name of the Grandfather' along with the episode number and series number. Hint: ""Matt Groening"" is the person; 'In the Name of the Grandfather' is the title of episode; episode number refers to episode; series number refers to number_in_series",simpson_episodes,"SELECT T2.role, T1.episode, T1.number_in_series FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Matt Groening' AND T1.title = 'In the Name of the Grandfather';","CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",197,6.600908517837524,250,"['credit', 'episode']"
410,"Among violations on 3rd June, 2014, describe any 5 names, located cities and tax codes of the eateries with high risk category. Hint: eateries with high risk category refer to business_id where risk_category = 'High Risk'; 3rd June, 2014 refers to date = '2014-06-03';",food_inspection,"SELECT DISTINCT T2.name, T2.city, T2.tax_code FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.risk_category = 'High Risk' AND T1.`date` = '2014-06-03' LIMIT 5","CREATE TABLE `violations` (
  business_id INTEGER REFERENCES businesses(business_id),
  date DATE,
  violation_type_id TEXT,
  risk_category TEXT,
  description TEXT
);

CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

",195,6.5971386432647705,250,"['violations', 'businesses']"
411,Please list the names of the Olympic games that were held in London. Hint: held in London refers to city_name = 'London';,olympics,SELECT T3.games_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'London',"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",176,6.55470871925354,250,"['games_city', 'city']"
412,Please list all the territories in the Eastern Region. Hint: territories refers to TerritoryDescription; Eastern Region refers to RegionDescription = 'Eastern';,retail_world,SELECT DISTINCT T1.TerritoryDescription FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern',"CREATE TABLE `OrderDetails` (
  OrderDetailID INTEGER,
  OrderID INTEGER REFERENCES Orders(OrderID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",168,6.547772169113159,250,['territories']
413,"How many of the employees have the last name ""Ringer"" ?",sales,SELECT COUNT(LastName) FROM Employees WHERE LastName = 'Ringer',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",125,6.469236135482788,250,['employees']
414,"Among the transactions, what percentage is done by using a visa card? Hint: visa card refers to CreditCardType = 'Visa'; percentage = MULTIPLY(DIVIDE(SUM(CreditCardType = 'Visa'), COUNT(TransactionID)), 1.0);",beer_factory,SELECT CAST(COUNT(CASE WHEN CreditCardType = 'Visa' THEN TransactionID ELSE NULL END) AS REAL) * 100 / COUNT(TransactionID) FROM `transaction`,"CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",190,6.570228338241577,250,['transaction']
415,How many boxes of 'Pavlova' did Northwind sell? Hint: 'Pavlova' is a ProductName,retail_world,SELECT COUNT(T2.Quantity) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName = 'Pavlova',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

",163,6.536750555038452,250,['products']
416,"Of the genes whose phenotype and motif are nucleic acid metabolism defects, PS00107, what percentage perform positive interaction with another gene? Hint: Percentage of no interaction = [count(nucleic acid metabolism, PS00107, no interaction) / count(nucleic acid metabolism, PS00107) * 100%",genes,"SELECT CAST(SUM(IIF(T2.Expression_Corr > 0, 1, 0)) AS REAL) * 100 / COUNT(T2.GeneID1) FROM Genes AS T1 INNER JOIN Interactions AS T2 ON T1.GeneID = T2.GeneID1 WHERE T1.Phenotype = 'Nucleic acid metabolism defects' AND T1.Motif = 'PS00107'","CREATE TABLE `interactions` (
  GeneID1 TEXT PRIMARY KEY REFERENCES Classification(GeneID),
  GeneID2 TEXT PRIMARY KEY REFERENCES Classification(GeneID),
  Type TEXT,
  Expression_Corr REAL
);

CREATE TABLE `genes` (
  GeneID TEXT REFERENCES Classification(GeneID),
  Essential TEXT,
  Class TEXT,
  Complex TEXT,
  Phenotype TEXT,
  Motif TEXT,
  Chromosome INTEGER,
  Function TEXT,
  Localization TEXT
);

",196,6.597675800323486,250,"['interactions', 'genes']"
417,Which director did Bill Thompson work the most with? Hint: Bill Thompson refers to voice-actor = 'Bill Thompson'; worked the most refers to MAX(COUNT(name));,disney,SELECT director FROM director AS T1 INNER JOIN `voice-actors` AS T2 ON T1.name = T2.movie WHERE T2.`voice-actor` = 'Bill Thompson' GROUP BY director ORDER BY COUNT(director) DESC LIMIT 1,"CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

",158,6.535197973251343,250,"['director', 'voice-actors']"
418,Which game has Jessica Carolina Aguilera Aguilera participated in? Give the id of the game. Hint: id of the game refers to games_id;,olympics,SELECT T2.games_id FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id WHERE T1.full_name = 'Jessica Carolina Aguilera Aguilera',"CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

",184,6.564034461975098,250,"['games_competitor', 'person']"
419,Which word has the most repetitions in the Catalan language? Give the ID of the word. Hint: word with the most repetitions refers to MAX(occurrences); ID of the word refers to wid,language_corpus,SELECT wid FROM langs_words WHERE occurrences = ( SELECT MAX(occurrences) FROM langs_words ),"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `langs_words` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",170,6.54915976524353,250,"['words', 'langs_words']"
420,What is the company's second highest salary per hour for employees who are paid monthly? Hint: salary received monthly refers to PayFrequency = 1; highest salary per hour refers to Max(Rate);,works_cycles,"SELECT Rate FROM EmployeePayHistory WHERE PayFrequency = 1 ORDER BY Rate DESC LIMIT 1, 1","CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",465,7.230386972427368,250,['employee']
421,"Of the employees who sold Blade, who has the most amount of sales? Hint: Blade' is name of product; most amount of sales refers to MAX(MULTIPLY(Quantity, Price));",sales,"SELECT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID ORDER BY T2.Quantity * T3.Price DESC LIMIT 1","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

",156,6.530900239944458,250,"['sales', 'products']"
422,What are the names of the sea that can be found on the island with the biggest area?,mondial_geo,SELECT T2.Name FROM islandIn AS T1 INNER JOIN sea AS T2 ON T2.Name = T1.Sea WHERE T1.Island = ( SELECT Name FROM island ORDER BY Area DESC LIMIT 1 ),"CREATE TABLE `sea` (
  Name TEXT PRIMARY KEY,
  Depth REAL
);

CREATE TABLE `island` (
  Name TEXT PRIMARY KEY,
  Islands TEXT,
  Area REAL,
  Height REAL,
  Type TEXT,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `islandIn` (
  Island TEXT REFERENCES island(None),
  Sea TEXT REFERENCES sea(None),
  Lake TEXT REFERENCES lake(None),
  River TEXT REFERENCES river(None)
);

",265,6.747425079345703,250,"['sea', 'island', 'islandIn']"
423,How many turnovers per game did the assist champion had in the 2003 NBA season? Hint: turnovers per game = avg(turnovers); 2003 refers to year = 2003; NBA refers to lgID = 'NBA',professional_basketball,"SELECT AVG(T2.turnovers) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 2003 GROUP BY T1.playerID, T2.assists ORDER BY T2.assists DESC LIMIT 1","CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",210,6.621449947357178,250,['player_allstar']
424,"In the Catalan language, which biwords pair appeared the most in this language/page? Hint: biwords pair refers to w1st.word w2nd.word; appeared the most refers to max(occurrences)",language_corpus,"SELECT w1st, w2nd FROM biwords WHERE occurrences = ( SELECT MAX(occurrences) FROM biwords )","CREATE TABLE `biwords` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  w1st INTEGER PRIMARY KEY REFERENCES words(wid),
  w2nd INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

CREATE TABLE `langs` (
  lid INTEGER,
  lang TEXT PRIMARY KEY,
  locale TEXT PRIMARY KEY,
  pages INTEGER,
  words INTEGER
);

CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

",175,6.558105707168579,250,"['biwords', 'langs', 'words']"
425,"What is the average number of cars on trains that run in the east direction? Hint: calculation = DIVIDE(count(id), count(train_id))",trains,SELECT CAST(COUNT(T1.id) AS REAL) / COUNT(DISTINCT T1.train_id) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east',"CREATE TABLE `cars` (
  id INTEGER,
  train_id INTEGER REFERENCES trains(id),
  position INTEGER,
  shape TEXT,
  len TEXT,
  sides TEXT,
  roof TEXT,
  wheels INTEGER,
  load_shape TEXT,
  load_num INTEGER
);

CREATE TABLE `trains` (
  id INTEGER,
  direction TEXT
);

",137,6.516653537750244,250,"['cars', 'trains']"
426,What is the hashed password of David Bradley? Hint: hashed password refers to PasswordHash;,works_cycles,SELECT T2.PasswordHash FROM Person AS T1 INNER JOIN Password AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.FirstName = 'David' AND T1.LastName = 'Bradley',"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",446,7.193105459213257,250,['person']
427,"For the method which got the tokenized name as 't jadwal entity get single mpic', what is the path time for its solution? Hint: tokenized name refers to NameTokenized; NameTokenized = 't jadwal entity get single mpic'; path time for its solution refers to ProcessedTime;",codebase_comments,SELECT DISTINCT T1.ProcessedTime FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.NameTokenized = 't jadwal entity get single mpic',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",183,6.568495988845825,250,"['solution', 'method']"
428,"How many Yelp_Business under the category of ""Food"" are good for kids? Hint: under the category of ""Food"" refers to category_name = 'Food'; are good for kids refers to attribute_name = 'Good for Kids' and attribute_value = 'true'",public_review_platform,SELECT COUNT(T3.stars) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Business_Attributes AS T4 ON T3.business_id = T4.business_id INNER JOIN Attributes AS T5 ON T4.attribute_id = T5.attribute_id WHERE T1.category_name LIKE 'Food' AND T5.attribute_name LIKE 'Good for Kids' AND T4.attribute_value LIKE 'TRUE',"CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",224,6.656311988830566,250,"['business_attributes', 'attributes', 'business_categories', 'categories']"
429,"In Movie No. 19, how many people are there in Department No. 7? Please give me their job. Hint: Movie No. 19 refers to movie_id = 19; Department No. 7 refers to department_id = 7",movies_4,SELECT COUNT(DISTINCT job) FROM movie_crew WHERE movie_id = 19 AND department_id = 7,"CREATE TABLE `department` (
  department_id INTEGER,
  department_name TEXT
);

CREATE TABLE `movie_crew` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  department_id INTEGER REFERENCES department(department_id),
  job TEXT
);

",234,6.676020383834839,250,"['department', 'movie_crew']"
430,"Among the cars with 8 cylinders, what is the name of the one that's the most expensive? Hint: with 8 cylinders refers to cylinders = 8; name of the car refers to car_name; the most expensive refers to max(price)",cars,SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.cylinders = 8 ORDER BY T2.price DESC LIMIT 1,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",163,6.547677278518677,250,"['data', 'price']"
431,Which film rated by user 59988436 that received 21 comments? Hint: user 59988436 refers to user_id = 59988436; received 21 comments refers to critic_comments = 21; film refers to movie;,movie_platform,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 59988436 AND T1.critic_comments = 21,"CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",184,6.5665602684021,250,"['ratings', 'movies']"
432,What is the size of the photo of product id No.1?,works_cycles,SELECT T1.ThumbNailPhoto FROM ProductPhoto AS T1 INNER JOIN ProductProductPhoto AS T2 ON T1.ProductPhotoID = T2.ProductPhotoID WHERE T2.ProductID = 1,"CREATE TABLE `productphoto` (
  ProductPhotoID INTEGER,
  ThumbNailPhoto BLOB,
  ThumbnailPhotoFileName TEXT,
  LargePhoto BLOB,
  LargePhotoFileName TEXT,
  ModifiedDate DATETIME
);

",437,7.172057151794434,250,['productphoto']
433,"What is the difference of 10 stars votes between the first episode and the last episode? Hint: the first episode refers to episode = 1; the last episode refers to episode = 24; 10 stars vote refers to stars = 10; the difference = subtract(votes where episode = 1, votes where episode = 24) where stars = 10",law_episode,SELECT SUM(CASE WHEN T2.episode = 24 THEN T1.votes ELSE 0 END) - SUM(CASE WHEN T2.episode = 1 THEN T1.votes ELSE 0 END) FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 10,"CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",195,6.602362871170044,250,['vote']
434,How many final-time home-team goals were there in total in all the matches of the Bundesliga division in the 2021 season? Hint: Bundesliga is the name of division; final-time home-team goals refers to FTHG;,european_football_1,SELECT SUM(T1.FTHG) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Bundesliga' AND T1.season = 2021,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",161,6.5486485958099365,250,"['matchs', 'divisions']"
435,Count the number of female students who belong to marines organization. Hint: female students refers to enlist.name who are NOT in male.name; organization refers to organ; organ = 'marines';,student_loan,SELECT COUNT(*) FROM person AS T1 INNER JOIN enlist AS T2 ON T1.name = T2.name LEFT JOIN male AS T3 ON T1.name = T3.name WHERE T2.organ = 'marines' AND T3.name IS NULL,"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",192,6.590353727340698,250,"['enlist', 'male']"
436,What is the average heights of crew members from Animation Department? Hint: from Animation Department refers to category = 'Animation Department'; AVG(height_meters) where category = 'Animation Department',simpson_episodes,SELECT AVG(T1.height_meters) FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.category = 'Animation Department';,"CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",167,6.553642749786377,250,['person']
437,"List the name and calculate its profit for product with the highest rating in review. Hint: Profit = SUBTRACT(ListPrice, StandardCost); the highest rating in review refers to Rating = 5",works_cycles,"SELECT T1.Name, T1.ListPrice - T1.StandardCost FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID ORDER BY T2.Rating DESC LIMIT 1","CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productreview` (
  ProductReviewID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  ReviewerName TEXT,
  ReviewDate DATETIME,
  EmailAddress TEXT,
  Rating INTEGER,
  Comments TEXT,
  ModifiedDate DATETIME
);

",467,7.240014553070068,250,"['product', 'productreview']"
438,"What is the power play percentage of the team with the most number of loses? Hint: Power play percentage refers to PPG, most number of loses refers to MAX(L)

",hockey,SELECT CAST(SUM(PPG) AS REAL) * 100 / SUM(PPC) FROM Teams GROUP BY tmID ORDER BY SUM(L) DESC LIMIT 1,"CREATE TABLE `abbrev` (
  Type TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Fullname TEXT
);

",251,6.7074384689331055,250,"['teams', 'goals,']"
439,How many products are there if we add all those located in the Subassembly category? Hint: located in the Subassembly category refers to Name = 'Subassembly',works_cycles,SELECT COUNT(T1.LocationID) FROM Location AS T1 INNER JOIN ProductInventory AS T2 USING (LocationID) WHERE T1.Name = 'Subassembly',"CREATE TABLE `productSubcategory` (
  ProductSubcategoryID INTEGER,
  ProductCategoryID INTEGER REFERENCES ProductCategory(ProductCategoryID),
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productcategory` (
  ProductCategoryID INTEGER,
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",457,7.216620206832886,250,"['productSubcategory', 'productcategory']"
440,How many part supplies were nearly out of stock? Hint: supplies nearly out of stock refer to ps_partkey where ps_availqty < 10;,retails,SELECT COUNT(ps_suppkey) FROM partsupp WHERE ps_availqty < 10,"CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

",158,6.535463094711304,250,['partsupp']
441,Please describe the menu sponsored by Noviomagus physically. Hint: describe the menu physically refers to physical_description; sponsored by Noviomagus refers to sponsor = 'Noviomagus';,menu,SELECT physical_description FROM Menu WHERE sponsor = 'Noviomagus',"CREATE TABLE `menuPage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

",156,6.53101372718811,250,"['menuPage', 'menu', 'dish']"
442,Which historical female legislator that have their term ended on the 3rd of March 1791? Hint: female legislator refers to gender_bio = 'F'; term ended on the 3rd of March 1791 refers to end = '1791-03-03';,legislator,"SELECT T1.first_name, T1.last_name FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.end = '1791-03-03' AND T1.gender_bio = 'F'","CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",186,6.568683862686157,250,"['historical', 'historical-terms']"
443,Give the actual elapsed time of the flights with air carrier named Semo Aviation Inc.: SEM. Hint: actual elapsed time refers to ACTUAL_ELAPSED_TIME; Semo Aviation Inc.: SEM. Refers to Description = 'Semo Aviation Inc.: SEM';,airline,SELECT T2.ACTUAL_ELAPSED_TIME FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Semo Aviation Inc.: SEM',"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",175,6.552136659622192,250,"['airlines', 'air carriers']"
444,What is the class label of paper ID 'chakrabarti01integrating'. How many words were cited by this paper ID?,citeseer,"SELECT DISTINCT T1.class_label, COUNT(T2.word_cited_id) FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.paper_id = 'chakrabarti01integrating' GROUP BY T1.class_label","CREATE TABLE `content` (
  paper_id TEXT PRIMARY KEY REFERENCES paper(paper_id),
  word_cited_id TEXT PRIMARY KEY
);

CREATE TABLE `paper` (
  paper_id TEXT PRIMARY KEY,
  class_label TEXT
);

",133,6.507331371307373,250,"['content', 'paper']"
445,"How many menus with the name ""Waldorf Astoria"" have 4 pages? Hint: 4 pages refers to page_count = 4;",menu,SELECT COUNT(*) FROM Menu WHERE name = 'Waldorf Astoria' AND page_count = 4,"CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",142,6.5177953243255615,250,['menu']
446,"How many people wrote comments for the question ""Any additional notes or comments.""? Hint: question refers to questiontext; wrote comments refers to AnswerText(QuestionID = 103) ! = -1",mental_health_survey,SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Any additional notes or comments' AND T1.AnswerText IS NOT NULL,"CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",149,6.523190975189209,250,['answer']
447,List restaurant ids located in Danville city.,restaurant,SELECT id_restaurant FROM location WHERE city = 'Danville',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

",115,6.458760499954224,250,['location']
448,What is the outcome type of match ID 392195?,soccer_2016,SELECT T2.Outcome_Type FROM Match AS T1 INNER JOIN Outcome AS T2 ON T1.Outcome_type = T2.Outcome_Id WHERE T1.Match_Id = '392195',"CREATE TABLE `outcome` (
  Outcome_Id INTEGER,
  Outcome_Type TEXT
);

CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

",217,6.62598443031311,250,"['outcome', 'match']"
449,How many products sold by Adam Hernandez? Hint: products sold by Adam Hernandez refer to SUM(Order Quantity where Sales Team = 'Adam Hernandez');,regional_sales,SELECT SUM(CASE WHEN T2.`Sales Team` = 'Adam Hernandez' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID,"CREATE TABLE `sales team` (
  SalesTeamID INTEGER,
  Sales Team TEXT,
  Region TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",163,6.537395715713501,250,"['sales team', 'sales orders']"
450,"How many recipes include the ingredient ""graham cracker crumbs""? Hint: 'graham cracker crumbs' is a name of an ingredient",cookbook,SELECT COUNT(*) FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T1.name = 'graham cracker crumbs',"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",146,6.5215160846710205,250,"['quantity', 'ingredient']"
451,"Among the teams that had more wins than loses in the year 2006, how many of them have over 100 points? Hint: more wins than loses refers to W > L; over 100 points refers to Pts > 100",hockey,SELECT COUNT(tmID) FROM Teams WHERE year = 2006 AND W > L AND Pts > 100,"CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",271,6.756910085678101,250,['teams']
452,List the names of players who play by the left hand. Hint: play by the left hand refers to Batting_hand =   'Left-hand bat',soccer_2016,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T2.Batting_hand = 'Left-hand bat',"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

",235,6.667798757553101,250,['player']
453,"How many products with the id ""476"" are stored in Metal Storage? Hint: Metal Storage is name of location",works_cycles,SELECT T2.Quantity FROM Location AS T1 INNER JOIN ProductInventory AS T2 ON T1.LocationID = T2.LocationID WHERE T2.ProductID = 476 AND T1.Name = 'Metal Storage',"CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `store` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  Name TEXT,
  SalesPersonID INTEGER REFERENCES SalesPerson(BusinessEntityID),
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",449,7.198200941085815,250,"['product', 'store']"
454,Which actor voices Akela from The Jungle Book? Hint: Akela refers character = 'Akela'; which actor voices refers to voice-actor;,disney,SELECT `voice-actor` FROM `voice-actors` WHERE character = 'Akela',"CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

",154,6.5309059619903564,250,['voice-actors']
455,"How many hours does the Yelp business No. ""5734"" open on Saturday? Hint: how many hours = SUBTRACT(closing_time, opening_time); business No. refers to business_id; open on Saturday refers to day_of_week = 'Saturday';",public_review_platform,"SELECT T1.closing_time - T1.opening_time AS ""hour"" FROM Business_Hours AS T1 INNER JOIN Days AS T2 ON T1.day_id = T2.day_id WHERE T2.day_of_week LIKE 'Saturday' AND T1.business_id = 5734","CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

CREATE TABLE `days` (
  day_id INTEGER,
  day_of_week TEXT
);

",225,6.641338586807251,250,"['business_hours', 'days']"
456,"How many times of repetition does the word ""exemple"" show in the Catalan language? Hint: exemple refers to word = 'exemple'; repetition refers to langs_words.occurrences; lid = 1 menas it's Catalan language",language_corpus,SELECT T2.occurrences FROM words AS T1 INNER JOIN langs_words AS T2 ON T1.wid = T2.wid WHERE T1.word = 'exemple' AND T2.lid = 1,"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `langs_words` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",182,6.5614447593688965,250,"['words', 'langs_words']"
457,Which professor taught the least amount of courses? Hint: professor refers to taughtBy.p_id; least amount of courses refers to min(count(course_id)),computer_student,SELECT p_id FROM taughtBy GROUP BY p_id ORDER BY COUNT(course_id) ASC LIMIT 1,"CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

",146,6.522249221801758,250,['taughtby']
458,"Among the listed cities, provide the area code of the city with the largest water area. Hint: the largest water area refers to MAX(water_area);",address,SELECT T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.water_area = ( SELECT MAX(water_area) FROM zip_data ),"CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",164,6.541511297225952,250,"['area_code', 'zip_data']"
459,"Among the lists created by user 4208563, which one has the highest number of followers? Indicate how many followers it has and whether the user was a subscriber or not when he created the list. Hint: User 4208563 refers to user_id;highest number of followers refers to MAX(list_followers); user_subscriber = 1 means that the user was a subscriber when he created the list; user_subscriber = 0 means the user was not a subscriber when he created the list (to replace)",movie_platform,"SELECT T1.list_followers, T2.user_subscriber = 1 FROM lists AS T1 INNER JOIN lists_users AS T2 ON T1.user_id = T2.user_id AND T2.list_id = T2.list_id WHERE T2.user_id = 4208563 ORDER BY T1.list_followers DESC LIMIT 1","CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

",240,6.6731648445129395,250,"['lists', 'lists_users']"
460,How many countries on the European Continent has an infant mortality rate per thousand of over 100?,mondial_geo,SELECT COUNT(T1.Name) FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent INNER JOIN population AS T4 ON T4.Country = T1.Code WHERE T3.Name = 'Europe' AND T4.Infant_Mortality < 100,"CREATE TABLE `target` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Target TEXT
);

",269,6.7720441818237305,250,"['country', 'continent', 'economics']"
461,Name the villain of the movie with Scott Weinger and Brad Kane as voice actors. Hint: FALSE;,disney,SELECT T1.villian FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T1.movie_title = T2.movie WHERE T2.`voice-actor` = 'Scott Weinger Brad Kane',"CREATE TABLE `characters` (
  movie_title TEXT PRIMARY KEY,
  release_date TEXT,
  hero TEXT REFERENCES voice-actors(character),
  villian TEXT,
  song TEXT
);

CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

",145,6.521452188491821,250,"['characters', 'voice-actors']"
462,What is the percentage of Harvard university's international students in 2011? Hint: Harvard university's refers to university_name = 'Harvard University'; in 2011 refers to year = 2011; percentage of Harvard university's international students refers to pct_international_students,university,SELECT T1.pct_international_students FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 AND T2.university_name = 'Harvard University',"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",198,6.601513385772705,250,"['university', 'university_year']"
463,Find the number of service members who complained in Syracuse. Hint: service members refers to client.client_id; Syracuse refers to city = 'Syracuse';,retail_complains,SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Tags = 'Servicemember' AND T1.city = 'Syracuse',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `state` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

CREATE TABLE `district` (
  district_id INTEGER,
  city TEXT,
  state_abbrev TEXT REFERENCES state(StateCode),
  division TEXT
);

",159,6.534692287445068,250,"['client', 'state', 'district']"
464,"In year 2009, what is the percentage of the episode titled by ""Gone Maggie Gone"" being nominated? Hint: being nominated refers to result = 'Nominee'; percentage = divide(count(result = 'Nominee'), count(result)) * 100%",simpson_episodes,SELECT CAST((SUM(CASE WHEN T1.result = 'Nominee' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.result = 'Winner' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T1.result) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.title = 'Gone Maggie Gone' AND T1.year = 2009;,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",192,6.570498943328857,250,"['award', 'episode']"
465,What is the name of the least popular Indian restaurant on Shattuck Avenue in Berkeley? Hint: restaurant name refers to label; the least popular refers to min(review); Indian restaurant refers to food_type = 'Indian restaurant'; Shattuck Avenue in Berkeley refers to street_name = 'shattuck ave' and city = 'berkeley',restaurant,SELECT T1.id_restaurant FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'berkeley' AND T2.street_name = 'shattuck ave' AND T1.food_type = 'Indian restaurant' ORDER BY T1.review LIMIT 1,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",185,6.56195855140686,250,"['location', 'generalinfo']"
466,What is the bowling skill of SC Ganguly? Hint: SC Ganguly refers to Player_Name = 'SC Ganguly',soccer_2016,SELECT T1.Bowling_Skill FROM Bowling_Style AS T1 INNER JOIN Player AS T2 ON T2.Bowling_skill = T1.Bowling_Id WHERE T2.Player_Name = 'SC Ganguly',"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `bowling_style` (
  Bowling_Id INTEGER,
  Bowling_skill TEXT
);

",232,6.659825325012207,250,"['player', 'bowling_style']"
467,"List the full names of all clients who live in the Pacific division. Hint: full name refers to first, last",retail_complains,"SELECT T2.first, T2.middle, T2.last FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.division = 'Pacific'","CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `state` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

CREATE TABLE `district` (
  district_id INTEGER,
  city TEXT,
  state_abbrev TEXT REFERENCES state(StateCode),
  division TEXT
);

",141,6.5145039558410645,250,"['client', 'state', 'district']"
468,"In the crew, who was born in 1962 in California? Hint: born in 1962 refers to year(birthdate) = 1962; in California refers to birth_region = 'California'",simpson_episodes,"SELECT name FROM Person WHERE SUBSTR(birthdate, 1, 4) = '1962' AND birth_region = 'California';","CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",176,6.554311752319336,250,['person']
469,What was the mean humidity of a trip with id 4275? Hint: mean humidity refers to mean_humidity;,bike_share_1,SELECT T2.mean_humidity FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T1.id = 4275,"CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `status` (
  station_id INTEGER,
  bikes_available INTEGER,
  docks_available INTEGER,
  time TEXT
);

",137,6.510605812072754,250,"['trip', 'status']"
470,Name the professor who got graduation from the University of Boston. Hint: Name the professor refers to full name which includes f_name and l_name;,cs_semester,"SELECT first_name, last_name FROM prof WHERE graduate_from = 'University of Boston'","CREATE TABLE `prof` (
  prof_id INTEGER,
  gender TEXT,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  popularity INTEGER,
  teachingability INTEGER,
  graduate_from TEXT
);

",145,6.518568754196167,250,['prof']
471,How many Italian film titles were special featured with deleted scenes? Hint: Italian is name of language; special featured with deleted scenes refers to special_features = 'deleted scenes',movie_3,SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN `language` AS T2 ON T1.language_id = T2.language_id WHERE T2.`name` = 'Italian' AND T1.special_features = 'deleted scenes',"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `language` (
  language_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",200,6.6021811962127686,250,"['film_text', 'language']"
472,"What is the address of the client who made a complaint via postal mail on March 14, 2012? Hint: address refers to address_1, address_2; via postal mail refers to Submitted via = 'Postal mail'; March 14 2012 refers to Date received = '2012-03-14'",retail_complains,"SELECT T1.address_1, T1.address_2 FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Date received` = '2012-03-14' AND T2.`Submitted via` = 'Postal mail'","CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",199,6.600290536880493,250,"['events', 'client']"
473,In which streets of the city of San Francisco are there restaurants that serve seafood? Hint: street refers to street_name; seafood refers to food_type = 'seafood',restaurant,SELECT T1.street_name FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T2.food_type = 'seafood' AND street_name IS NOT NULL,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",147,6.520884275436401,250,"['location', 'generalinfo']"
474,"On 8/29/2013 at 6:14:01 PM, how many bikes were borrowed from San Jose Diridon Caltrain Station? Hint: How many bikes borrowed can be computed as SUBTRACT(SUM(dock_count), bikes_available where name = 'San Jose Diridon Caltrain Station' and time = '2013/08/29 06:14:01');",bike_share_1,SELECT SUM(T1.dock_count - T2.bikes_available) FROM station AS T1 INNER JOIN status AS T2 ON T1.id = T2.station_id WHERE T1.name = 'San Jose Diridon Caltrain Station' AND T2.time = '2013/08/29 06:14:01',"CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",215,6.624646902084351,250,"['trip', 'station']"
475,"Describe the scene number, act, and title of work which had the description of ""The house of ANTIPHOLUS of Ephesus"" in chapter.",shakespeare,"SELECT T2.Act, T2.Scene, T1.Title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'The house of ANTIPHOLUS of Ephesus.'","CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",151,6.522580146789551,250,"['works', 'chapters', 'paragraphs']"
476,Give the postal code for the address No.65. Hint: address no. 65 refers to address_id = 65,movie_3,SELECT postal_code FROM address WHERE address_id = 65,"CREATE TABLE `address` (
  address_id INTEGER,
  address TEXT,
  address2 TEXT,
  district TEXT,
  city_id INTEGER REFERENCES city(None),
  postal_code TEXT,
  phone TEXT,
  last_update DATETIME
);

",193,6.590984344482422,250,['address']
477,"What is the credit rating of the company whose average lead time is 16 days for a standard price of 18.9900 and whose last receipt date is August 27, 2011? Hint: last receipt date is August 17, 2011 refers to LastReceiptDate> = '2011-08-17 00:00:00' and LastReceiptDate < '2011-08-18 00:00:00';",works_cycles,"SELECT T2.CreditRating FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.StandardPrice = 18.9900 AND T1.AverageLeadTime = 16 AND STRFTIME('%Y-%m-%d', T1.LastReceiptDate) = '2011-08-27'","CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",545,7.466907501220703,250,"['person', 'salesorderheader']"
478,"What profit can the seller Carousel DieCast Legends make from the sale of the product described as ""The perfect holiday or anniversary gift for executives""? Hint: seller and product vendor are synonyms; Carousel DieCast Legends is a product vendor; profit = SUM(SUBTRACT(msrp, buyPrice));",car_retails,SELECT SUM(T2.MSRP - T2.buyPrice) FROM productlines AS T1 INNER JOIN products AS T2 ON T1.productLine = T2.productLine WHERE T2.productVendor = 'Carousel DieCast Legends' AND T1.textDescription LIKE '%perfect holiday or anniversary gift for executives%',"CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

CREATE TABLE `productlines` (
  productLine TEXT PRIMARY KEY,
  textDescription TEXT,
  htmlDescription TEXT,
  image BLOB
);

",192,6.5707762241363525,250,"['products', 'productlines']"
479,How many orders were shipped in 1998? Hint: orders refer to l_orderkey; shipped in 1998 refers to year(l_shipdate) = 1998;,retails,"SELECT COUNT(l_orderkey) FROM lineitem WHERE STRFTIME('%Y', l_shipdate) = '1998'","CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

",168,6.538903713226318,250,['orders']
480,Who is the sales agent of the customer who has made the highest payment? Include the full names of employee and his/her supervisor. Hint: payment refers to amount; full name = firstName+lastName; supervisor refers to reportsTO; 'reportsTO' is the leader of the 'employeeNumber';,car_retails,"SELECT T1.firstName, T1.lastName, T1.reportsTo FROM employees AS T1 INNER JOIN customers AS T2 ON T1.employeeNumber = T2.salesRepEmployeeNumber INNER JOIN payments AS T3 ON T2.customerNumber = T3.customerNumber ORDER BY T3.amount DESC LIMIT 1","CREATE TABLE `employees` (
  employeeNumber INTEGER,
  lastName TEXT,
  firstName TEXT,
  extension TEXT,
  email TEXT,
  officeCode TEXT REFERENCES offices(officeCode),
  reportsTo INTEGER REFERENCES employees(employeeNumber),
  jobTitle TEXT
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

CREATE TABLE `payments` (
  customerNumber INTEGER PRIMARY KEY REFERENCES customers(customerNumber),
  checkNumber TEXT PRIMARY KEY,
  paymentDate DATE,
  amount REAL
);

",192,6.569027900695801,250,"['employees', 'customers', 'payments']"
481,"List the restaurant's ID that has a review greater than the 70% of average review of all American restaurants with street number greater than 2000. Hint: American restaurant refers to food_type = 'american'; street number greater than 2000 refers to street_num > 2000; review greater than the 70% of average review refers to review > multiply(avg(review), 0.7)",restaurant,SELECT T1.id_restaurant FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.food_type = 'american' AND T1.street_num > 2000 GROUP BY T1.id_restaurant ORDER BY AVG(T2.review) * 0.7 DESC,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",203,6.606483459472656,250,"['location', 'generalinfo']"
482,State name of students who filed for bankruptcy and have the longest duration of absense from school. Hint: longest duration of absense refers to MAX(month),student_loan,SELECT T1.name FROM longest_absense_from_school AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name ORDER BY T1.month DESC LIMIT 1,"CREATE TABLE `filed_for_bankrupcy` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",183,6.559996128082275,250,"['filed_for_bankrupcy', 'longest_absense_from_school']"
483,Indicate the height of all players from team Oshawa Generals in inches. Hint: height in inches refers to height_in_inch; players refers to PlayerName; team Oshawa Generals refers to TEAM = 'Oshawa Generals';,ice_hockey_draft,SELECT T3.height_in_inch FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN height_info AS T3 ON T1.height = T3.height_id WHERE T2.TEAM = 'Oshawa Generals',"CREATE TABLE `height_info` (
  height_id INTEGER,
  height_in_cm INTEGER,
  height_in_inch TEXT
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",168,6.544492483139038,250,"['height_info', 'playerinfo']"
484,Describe the full title which had the character named Servant to Montague. Hint: full title refers to LongTitle; character named Servant to Montague refers to characters.Description = 'Servant to Montague',shakespeare,SELECT DISTINCT T1.LongTitle FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T4.Description = 'Servant to Montague',"CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",162,6.541905879974365,250,"['characters', 'works', 'chapters', 'paragraphs']"
485,What is the language of method number 28 that can be found in the repository number 3? Hint: language of method refers to Lang; method number refers to Method_100k.Id; Method_100k.Id = 28; repository number refers to RepoId; RepoID = 3;,codebase_comments,SELECT T2.Lang FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Id = 28 AND T1.RepoId = 3,"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",185,6.562615633010864,250,"['solution', 'method', 'repo']"
486,"What is the precise location of Sac State Union? Hint: precise location = Latitude, Longitude; Sac State Union refers to LocationName = 'Sac State Union';",beer_factory,"SELECT T2.Latitude, T2.Longitude FROM location AS T1 INNER JOIN geolocation AS T2 ON T1.LocationID = T2.LocationID WHERE T1.LocationName = 'Sac State Union'","CREATE TABLE `location` (
  LocationID INTEGER REFERENCES geolocation(LocationID),
  LocationName TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER
);

",164,6.5383265018463135,250,['location']
487,"For the university id 268, show its number of students in 2013. Hint: number of students refers to num_students; in 2013 refers to year = 2013",university,SELECT num_students FROM university_year WHERE university_id = 268 AND year = 2013,"CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",177,6.550699472427368,250,['university_year']
488,"In the year 1998, how many home wins did the team which had the 1st round, 12th pick have that year? Hint: in 1998 refers to year = 1998; 1st round refers to draftRound = 1; 12th pick refers to draftSelection = 12; home win refers to homeWon",professional_basketball,SELECT T2.homeWon FROM draft AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.draftYear = T2.year WHERE T1.draftRound = 1 AND T1.draftSelection = 12 AND T1.draftYear = 1998,"CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",231,6.650677680969238,250,['player_allstar']
489,What is the total number of active businesses in AZ with a medium review count? Hint: active businesses refers to active = 'true'; AZ is a state; medium review count refers to review_count = 'Medium',public_review_platform,SELECT COUNT(business_id) FROM Business WHERE review_count = 'Medium' AND state = 'AZ' AND active = 'true',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",208,6.609497308731079,250,['business']
490,What is the age of female customers within the number of inhabitants below 30? Hint: female customers within the number of inhabitants below 30 refer to SEX = 'Female' where INHABITANTS_K < 30;,software_company,SELECT age FROM Customers WHERE GEOID IN ( SELECT GEOID FROM Demog WHERE INHABITANTS_K < 30 ) AND SEX = 'Female',"CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",171,6.541372060775757,250,"['demog', 'customers']"
491,"Among the customers having at least one shipment in 2017, how many of them have an annual revenue of over 30000000? Hint: shipment in 2017 refers to Cast(ship_date AS DATE) = 2017; annual revenue of over 30000000 refers to annual_revenue > 30000000",shipping,"SELECT COUNT(COUNTCUSID) FROM ( SELECT COUNT(T1.cust_id) AS COUNTCUSID FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE STRFTIME('%Y', T2.ship_date) = '2017' AND T1.annual_revenue > 30000000 GROUP BY T1.cust_id HAVING COUNT(T2.ship_id) >= 1 ) T3","CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",203,6.6023383140563965,250,"['customer', 'shipment']"
492,"Among the sales people who achieved projected sales quota 2013, is there any person from territory ID 1? If yes, state the business entity ID. Hint: projected sales quota refers to SalesQuota; projected sales quota in 2013 refers to year(QuotaDate) = 2013;",works_cycles,"SELECT DISTINCT T1.BusinessEntityID FROM SalesPerson AS T1 INNER JOIN SalesPersonQuotaHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.TerritoryID = 1 AND STRFTIME('%Y', QuotaDate) = '2013'","CREATE TABLE `salesperson` (
  BusinessEntityID INTEGER REFERENCES Employee(BusinessEntityID),
  TerritoryID INTEGER REFERENCES SalesTerritory(TerritoryID),
  SalesQuota REAL,
  Bonus REAL,
  CommissionPct REAL,
  SalesYTD REAL,
  SalesLastYear REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salespersonquotahistory` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES SalesPerson(BusinessEntityID),
  QuotaDate DATETIME PRIMARY KEY,
  SalesQuota REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",495,7.294841527938843,250,"['salesperson', 'salespersonquotahistory']"
493,"What percentage of the AdventureWorks data is in Thai? Hint: percentage = DIVIDE(Culture.Name = 'Thai', count(ALL Culture.Name))*100%",works_cycles,SELECT CAST(SUM(CASE WHEN T1.Name = 'Thai' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.CultureID) FROM Culture AS T1 INNER JOIN ProductModelProductDescriptionCulture AS T2 ON T1.CultureID = T2.CultureID,"CREATE TABLE `Culture` (
  CultureID TEXT PRIMARY KEY,
  Name TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",466,7.2257606983184814,250,['Culture']
494,Give the name of the country and state of the city with elevation of 1039. Hint: elevation of 1039 refers to elevation = 1039,address,"SELECT DISTINCT T1.name, T2.state FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state INNER JOIN zip_data AS T3 ON T2.zip_code = T3.zip_code WHERE T3.elevation = 1039","CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `cbsa` (
  CBSA INTEGER,
  CBSA_name TEXT,
  CBSA_type TEXT
);

",169,6.538755655288696,250,"['state', 'cbsa']"
495,"Indicate the page id of Wikipedia about Catalan language of all the pages that have a numeric value in their title. Hint: the page id of Wikipedia refers to pid; numeric value contains only numbers, LIKE '%0%' OR '%1%' OR '%2%' OR '%3%' OR '%4%' OR '%5%' OR '%6%' OR '%7%' OR '%8%' OR '%9%';",language_corpus,"SELECT pid, title FROM pages WHERE title LIKE '%0%' OR '%1%' OR '%2%' OR '%3%' OR '%4%' OR '%5%' OR '%6%' OR '%7%' OR '%8%' OR '%9%'","CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",220,6.624337673187256,250,['pages']
496,"Among the states with a public school count of 20 and below, list their race. Hint: public refers to control = 'Public'; school_count < 20;",college_completion,SELECT DISTINCT T2.race FROM state_sector_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.stateid = T1.stateid WHERE T1.schools_count <= 20 AND T1.control = 'Public',"CREATE TABLE `state_sector_details` (
  stateid INTEGER PRIMARY KEY,
  state TEXT REFERENCES institution_details(state),
  state_post TEXT,
  level TEXT PRIMARY KEY,
  control TEXT PRIMARY KEY,
  schools_count INTEGER,
  counted_pct TEXT,
  awards_per_state_value TEXT,
  awards_per_natl_value REAL,
  exp_award_state_value TEXT,
  exp_award_natl_value INTEGER,
  state_appr_value TEXT,
  state_appr_rank TEXT,
  grad_rate_rank TEXT,
  awards_per_rank TEXT
);

",161,6.529492139816284,250,['state_sector_details']
497,"How many books were published in 2017? Hint: published in 2017 refers to Substr(publication_date,1, 4) = '2017'",books,"SELECT COUNT(*) FROM book WHERE STRFTIME('%Y', publication_date) = '2017'","CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

",210,6.610026121139526,250,['book']
498,"After Azha Restaurant Inc. passed the inspection on 2010/1/21, when was the follow-up inspection done? Hint: Azha Restaurant Inc. refers to dba_name = 'Azha Restaurant Inc.'; on 2010/1/21 refers to inspection_date = '2010-01-21'; follow-up inspection date refers to followup_to",food_inspection_2,SELECT T1.followup_to FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T2.dba_name = 'Azha Restaurant Inc.' AND T1.results = 'Pass' AND T1.inspection_date = '2010-01-21',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",209,6.608547925949097,250,"['inspection', 'establishment']"
499,"Of the first 60,000 customers who sent a true response to the incentive mailing sent by the marketing department, how many of them are divorced males? Hint: RESPONSE = 'true'; SEX = 'Male'; MARITAL_STATUS = 'Divorced';",software_company,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.SEX = 'Male' AND T1.MARITAL_STATUS = 'Divorced' AND T2.RESPONSE = 'true',"CREATE TABLE `mailings1_2` (
  REFID INTEGER REFERENCES Customers(None),
  REF_DATE DATETIME,
  RESPONSE TEXT
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",184,6.558189153671265,250,"['mailings1_2', 'customers']"
500,"List the character names in the ""Open Water"" movie. Hint: ""Open Water"" movie refers to title = 'Open Water'",movies_4,SELECT T2.character_name FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Open Water',"CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

",206,6.6076929569244385,250,"['person', 'movie']"
501,How many users have more than 100 followers in the list created by users in 2009? Hint: more than 100 followers refers to list_followers >100;  list created by the user in 2009 refers to list_creation_date_utc = '2009';,movie_platform,SELECT COUNT(T1.user_id) FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T2.list_followers > 100 AND T1.list_creation_date_utc LIKE '2009%',"CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

",191,6.564697027206421,250,"['lists', 'lists_users']"
502,Which root beer got the most five stars in 2012? Give the brand name of this beer. Hint: most five stars refers to MAX(COUNT(StarRating = 5)); in 2012 refers to FirstBrewedYear = 2012;,beer_factory,"SELECT T3.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID WHERE T2.StarRating = 5 AND strftime('%Y', T2.ReviewDate) = '2012' GROUP BY T1.BrandID ORDER BY COUNT(T2.BrandID) DESC LIMIT 1","CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",186,6.557964563369751,250,"['rootbeerreview', 'rootbeerbrand']"
503,"What is the ratio of good to bad business star for a businesses that are opened all the time? Hint: opened all the time refers to Business_Hours where day_id BETWEEN 1 and 7 and opening_time = closing_time; ratio can be computed as DIVIDE(COUNT(stars BETWEEN 3.5 and 5), COUNT(stars BETWEEN 1 and 2.5));",public_review_platform,SELECT CAST(SUM(CASE WHEN T1.stars BETWEEN 3.5 AND 5 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.stars BETWEEN 1 AND 2.5 THEN 1 ELSE 0 END) AS ratio FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id,"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_Hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

",256,6.6946165561676025,250,"['business', 'business_Hours']"
504,"How many more black female victims than white female victims were discovered? Hint: black refers to race = 'B'; female refers to gender = 'F'; white refers to race = 'W'; result = subtract(count(victims where race = 'B'), count(victims where race = 'W')) where gender = 'F'",shooting,SELECT SUM(race = 'B') - SUM(race = 'W') FROM subjects WHERE gender = 'F',"CREATE TABLE `subjects` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

CREATE TABLE `officers` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

",179,6.551034927368164,250,"['subjects', 'officers']"
505,Which object classes belong to the onion category? Hint: onion category refers to OBJ_CLASS = 'onion';,image_and_language,SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS = 'onion',"CREATE TABLE `obj_classes` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",171,6.544551849365234,250,['obj_classes']
506,How many players bowl in the legbreak style? Hint: legbreak style refers to Bowling_skill = 'Legbreak',soccer_2016,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Bowling_Style AS T2 ON T1.Bowling_skill = T2.Bowling_Id WHERE T2.Bowling_skill = 'Legbreak',"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `bowling_style` (
  Bowling_Id INTEGER,
  Bowling_skill TEXT
);

",229,6.645521402359009,250,"['player', 'bowling_style']"
507,How many field goals did George Mikan make overall between 1951 and 1953? Hint: between 1951 and 1953 refers to season_id; field goal refers to fg_made,professional_basketball,SELECT COUNT(fg_made) FROM player_allstar WHERE first_name = 'George' AND last_name = 'Mikan' AND season_id BETWEEN 1951 AND 1953,"CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",200,6.599765300750732,250,['player_allstar']
508,"What is the full name of the client whose complaint on 2017/3/27 was received by MICHAL? Hint: full names = first, middle, last; on 2017/3/27 refers to ""Date received"" = '2017-03-27'; MICHAL refers to server = 'MICHAL';",retail_complains,"SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.`Date received` = '2017-03-27' AND T2.server = 'MICHAL'","CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `callcenterlogs` (
  Date received DATE,
  Complaint ID TEXT PRIMARY KEY,
  rand client TEXT REFERENCES client(client_id),
  phonefinal TEXT,
  vru+line TEXT,
  call_id INTEGER,
  priority INTEGER,
  type TEXT,
  outcome TEXT,
  server TEXT,
  ser_start TEXT,
  ser_exit TEXT,
  ser_time TEXT
);

",199,6.596832036972046,250,"['client', 'callcenterlogs']"
509,"List the product ID of the top five products, by descending order, the number of quantities in stock. Hint: by descending in number of quantity in stock refers to max(UnitsInStock)",retail_world,SELECT ProductID FROM Products ORDER BY UnitsInStock DESC LIMIT 5,"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

",179,6.552703857421875,250,['products']
510,"What is the percentage of under $500 thefts among all cases that happened in West Englewood? Hint: under $500 refers to secondary_description = '$500 AND UNDER'; theft refers to primary_description = 'THEFT'; West Englewood refers to community_area_name = 'West Englewood'; percentage = divide(count(case_number where secondary_description = '$500 AND UNDER'), count(case_number)) where primary_description = 'THEFT' and community_area_name = 'West Englewood' * 100%",chicago_crime,SELECT CAST(SUM(CASE WHEN T2.secondary_description = '$500 AND UNDER' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.case_number) FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T1.iucr_no = T2.iucr_no INNER JOIN Community_Area AS T3 ON T1.community_area_no = T3.community_area_no WHERE T2.primary_description = 'THEFT' AND T3.community_area_name = 'West Englewood',"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",263,6.741777420043945,250,"['crime', 'community_area']"
511,Which river with its mouth in the Donau River and a length greater than 500 km is located in Slovenia?,mondial_geo,SELECT T2.River FROM country AS T1 INNER JOIN geo_river AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'Slovenia' AND T2.River IN ( SELECT NAME FROM river WHERE Length > 500 AND River = 'Donau' ),"CREATE TABLE `river` (
  Name TEXT PRIMARY KEY,
  River TEXT,
  Lake TEXT REFERENCES lake(None),
  Sea TEXT,
  Length REAL,
  SourceLongitude REAL,
  SourceLatitude REAL,
  Mountains TEXT,
  SourceAltitude REAL,
  EstuaryLongitude REAL,
  EstuaryLatitude REAL
);

CREATE TABLE `located` (
  City TEXT REFERENCES city(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  River TEXT REFERENCES river(None),
  Lake TEXT REFERENCES lake(None),
  Sea TEXT REFERENCES sea(None)
);

CREATE TABLE `province` (
  Name TEXT PRIMARY KEY,
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population INTEGER,
  Area REAL,
  Capital TEXT,
  CapProv TEXT
);

",274,6.759982347488403,250,"['river', 'located', 'province']"
512,How much is the Volkswagen Dasher with 14.1 mph acceleration? Hint: cost refers to price; Volkswagen Dasher refers to car_name = 'volkswagen dasher'; 14.1 mph acceleration refers to acceleration = 14.1,cars,SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'volkswagen dasher' AND T1.acceleration = '14.1',"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",173,6.545168161392212,250,"['data', 'price']"
513,List the full name its capital of all the countries with parliamentary democracy government. Hint: Parliamentary democracy is a government form,mondial_geo,SELECT T1.Capital FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country WHERE T2.Government = 'parliamentary democracy',"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",272,6.759169340133667,250,['country']
514,"What is the birth name of the person who voiced 'Helen Lovejoy?' Hint: voiced refers to role; role = 'Helen Lovejoy""",simpson_episodes,SELECT DISTINCT T1.birth_name FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.role = 'Helen Lovejoy';,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",157,6.541901588439941,250,"['credit', 'person']"
515,How many married male employees were born before the year 1960? Hint: married refers to MaritalStatus = 'M'; male refers to Gender = 'M'; BirthDate < = '1959-12-31';,works_cycles,"SELECT COUNT(BusinessEntityID) FROM Employee WHERE MaritalStatus = 'M' AND STRFTIME('%Y', BirthDate) < '1960' AND Gender = 'M'","CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",477,7.264774560928345,250,['employee']
516,Which episodes of the Law & Order have been nominated for the Primetime Emmy Awards? Hint: episode refers to award; the Primetime Emmy Awards refers to award_category like 'Primetime Emmy',law_episode,SELECT DISTINCT episode_id FROM Award WHERE award_category = 'Primetime Emmy',"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  series TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  person_id TEXT REFERENCES Person(person_id),
  role TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",162,6.548365831375122,250,"['award', 'episode']"
517,"List the categories of active businesses in Surprise, AZ. Hint: categories refers to category_name; active businesses refers to active = 'true'; in Surprise, AZ refers to city = 'Surprise' and state = 'AZ'",public_review_platform,SELECT T3.category_name FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.active LIKE 'TRUE' AND T1.state LIKE 'AZ' AND T1.city LIKE 'Surprise' GROUP BY T3.category_name,"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",213,6.640348434448242,250,"['business', 'business_categories', 'categories']"
518,"For person id No.2054, is his/her vendor still active? Hint: ActiveFlag = 1 means 'Vendor no longer used'; ActiveFlag = 2 means 'Vendor is actively used",works_cycles,SELECT T1.ActiveFlag FROM Vendor AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonID = 2054,"CREATE TABLE `productvendor` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Vendor(BusinessEntityID),
  AverageLeadTime INTEGER,
  StandardPrice REAL,
  LastReceiptCost REAL,
  LastReceiptDate DATETIME,
  MinOrderQty INTEGER,
  MaxOrderQty INTEGER,
  OnOrderQty INTEGER,
  UnitMeasureCode TEXT REFERENCES UnitMeasure(UnitMeasureCode),
  ModifiedDate DATETIME
);

CREATE TABLE `vendor` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  AccountNumber TEXT PRIMARY KEY,
  Name TEXT,
  CreditRating INTEGER,
  PreferredVendorStatus INTEGER,
  ActiveFlag INTEGER,
  PurchasingWebServiceURL TEXT,
  ModifiedDate DATETIME
);

",467,7.248689651489258,250,"['productvendor', 'vendor']"
519,What is the proportion of action movies directors who are called 'box office success paradox'? Hint: 'box office success paradox' means average revenue exceeds their quality; The proportion can be computed by [(avg_revenue > d_quality) / ()] * 100%,movielens,"SELECT CAST(SUM(IIF(T2.avg_revenue > T2.d_quality, 1, 0)) AS REAL) * 100 / COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN directors AS T2 ON T1.directorid = T2.directorid WHERE T1.genre = 'Action'","CREATE TABLE `directors` (
  directorid INTEGER,
  d_quality INTEGER PRIMARY KEY,
  avg_revenue INTEGER PRIMARY KEY
);

CREATE TABLE `movies2directors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  directorid INTEGER PRIMARY KEY REFERENCES directors(None),
  genre TEXT
);

",193,6.610172271728516,250,"['directors', 'movies2directors']"
520,"In August of 1996, how many orders were placed by the customer with the highest amount of orders? Hint: August of 1996 refers to OrderDate = '1996-8'; highest amount of orders refers to MAX(COUNT(OrderID))",retail_world,SELECT COUNT(OrderID) FROM Orders WHERE OrderDate LIKE '1996-08%' GROUP BY CustomerID ORDER BY COUNT(OrderID) DESC LIMIT 1,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",195,6.617643356323242,250,"['orders', 'customers']"
521,How many people gave the most enjoyed episode a 10-star rating? Hint: the most enjoyed refers max(rating); 10-star refers to stars = 10,law_episode,SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T2.stars = 10,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",155,6.5474936962127686,250,"['episode', 'vote']"
522,"What is the total actual profit gained from orders made by American customers from 2003-01-06 to 2005-05-09? Hint: total actual profit = SUM(SUBTRACT(priceEach, buyPrice)); American is a nationality of country = 'USA'; orderDate BETWEEN '2003-01-06' AND '2005-05-09';",car_retails,SELECT SUM(T2.priceEach - T1.buyPrice) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode INNER JOIN orders AS T3 ON T2.orderNumber = T3.orderNumber INNER JOIN customers AS T4 ON T3.customerNumber = T4.customerNumber WHERE T3.orderDate > '2003-01-05' AND T3.orderDate < '2005-05-10',"CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",224,6.654836416244507,250,"['orders', 'customers']"
523,"What was the major type of crime that happened in the Rogers Park community area? Hint: ""Rogers Park"" is the community_area_name; major type of crime refers to title",chicago_crime,"SELECT T1.fbi_code_no, T1.title FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no INNER JOIN Community_Area AS T3 ON T2.community_area_no = T3.community_area_no WHERE T3.community_area_name = 'Rogers Park' GROUP BY T1.fbi_code_no, T1.title","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",170,6.559851169586182,250,"['crime', 'community_area']"
524,"Provide the phone brands and models of the users who were at the coordinates of (80,44). Hint: models refers to device_model; coordinates of (80,44) refers to longitude = 80 AND latitude = 44;",talkingdata,"SELECT DISTINCT T1.phone_brand, T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T2.longitude = 80 AND T2.latitude = 44","CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",226,6.656112909317017,250,['phone_brand_device_model2']
525,How many methods with solutions with path 'maravillas_linq-to-delicious\tasty.sln'? Hint: solution refers to SolutionId;,codebase_comments,SELECT COUNT(T2.SolutionId) FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'maravillas_linq-to-delicious\tasty.sln',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",152,6.529313802719116,250,"['solution', 'method']"
526,How many flights were there on 2018/8/1? Hint: on 2018/8/1 refers to FL_DATE = '2018/8/1';,airline,SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1',"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",152,6.535114765167236,250,['airlines']
527,"List 10 addresses located in Poland. Hint: ""Polan"" is the country_name; address refers to street_number, street_name, city",books,"SELECT T1.street_number, T1.street_name, T1.city FROM address AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE T2.country_name = 'Poland' LIMIT 10","CREATE TABLE `address` (
  address_id INTEGER,
  street_number TEXT,
  street_name TEXT,
  city TEXT,
  country_id INTEGER REFERENCES country(country_id)
);

CREATE TABLE `country` (
  country_id INTEGER,
  country_name TEXT
);

",201,6.613070487976074,250,"['address', 'country']"
528,Which United States province is home to the greatest number of corporations' corporate headquarters? Hint: Organization refers to corporation,mondial_geo,SELECT T1.Province FROM country AS T1 INNER JOIN organization AS T2 ON T1.Code = T2.Country WHERE T1.Name = 'United States' GROUP BY T1.Province ORDER BY COUNT(T1.Name) DESC LIMIT 1,"CREATE TABLE `organization` (
  Abbreviation TEXT PRIMARY KEY,
  Name TEXT PRIMARY KEY,
  City TEXT REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Established DATE
);

CREATE TABLE `province` (
  Name TEXT PRIMARY KEY,
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population INTEGER,
  Area REAL,
  Capital TEXT,
  CapProv TEXT
);

",269,6.759355545043945,250,"['organization', 'province']"
529,How many images have less than 15 object samples? Hint: images refer to IMG_ID; less than 15 object samples refer to COUNT(OBJ_SAMPLE_ID) < 15;,image_and_language,SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE OBJ_SAMPLE_ID < 15,"CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

",192,6.571762323379517,250,['img_obj']
530,Which country produced the most expensive car in 1970? Hint: the most expensive refers to max(price); in 1970 refers to model_year = 1970,cars,SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country INNER JOIN price AS T4 ON T4.ID = T1.ID WHERE T2.model_year = 1970 ORDER BY T4.price DESC LIMIT 1,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",148,6.529851675033569,250,"['data', 'country', 'production']"
531,What is the phone number of all companies where the last name of the contact person starts with the letter M and are not from Germany? Hint: last name of contact person starts with M refers to lastName LIKE 'M%'; Germany is a country; not from Germany refers to country<>'Germany';,car_retails,SELECT phone FROM customers WHERE contactLastName LIKE 'M%' AND country != 'Germany',"CREATE TABLE `employees` (
  employeeNumber INTEGER,
  lastName TEXT,
  firstName TEXT,
  extension TEXT,
  email TEXT,
  officeCode TEXT REFERENCES offices(officeCode),
  reportsTo INTEGER REFERENCES employees(employeeNumber),
  jobTitle TEXT
);

",189,6.573947191238403,250,['employees']
532,"For all list titles with at least 200 movies in the list, what is their average number of followers? Hint: at least 200 movies in the list refers to list_movie_number > 200; average number of followers refers to avg(list_followers)",movie_platform,SELECT AVG(list_followers) FROM lists WHERE list_movie_number > 200,"CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

",180,6.557800054550171,250,['lists']
533,"What is the name of the product the work order ""2540"" was making?",works_cycles,SELECT T2.Name FROM WorkOrder AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.WorkOrderID = 2540,"CREATE TABLE `workorder` (
  WorkOrderID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  OrderQty INTEGER,
  StockedQty INTEGER,
  ScrappedQty INTEGER,
  StartDate DATETIME,
  EndDate DATETIME,
  DueDate DATETIME,
  ScrapReasonID INTEGER REFERENCES ScrapReason(ScrapReasonID),
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",442,7.184622287750244,250,"['workorder', 'product']"
534,"For movie id 1269, how many users, who was a paying subscriber and was eligible for trial when he rated the movie, gave the movie a rating score of less than or equal to 2? Hint: paying subscriber refers to user_has_payment_method = 1; eligible for trial refers to user_eligible_for_trial = 1; rating_score< = 2;",movie_platform,SELECT COUNT(*) FROM ratings WHERE movie_id = 1269 AND rating_score <= 2 AND user_eligible_for_trial = 1 AND user_has_payment_method = 1,"CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `ratings_users` (
  user_id INTEGER REFERENCES lists_users(user_id),
  rating_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",204,6.611590147018433,250,"['ratings', 'ratings_users']"
535,List out all the gold medalist winners in cycling sport. Hint: gold medalist winners refer to full_name where medal_name = 'Gold'; cycling sport refers to sport_name = 'Cycling';,olympics,SELECT DISTINCT T5.full_name FROM event AS T1 INNER JOIN competitor_event AS T2 ON T1.id = T2.event_id INNER JOIN games_competitor AS T3 ON T2.competitor_id = T3.id INNER JOIN sport AS T4 ON T1.sport_id = T4.id INNER JOIN person AS T5 ON T3.person_id = T5.id WHERE T4.sport_name = 'Cycling' AND T2.medal_id = 1,"CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

CREATE TABLE `medal` (
  id INTEGER,
  medal_name TEXT
);

CREATE TABLE `sport` (
  id INTEGER,
  sport_name TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",197,6.600009202957153,250,"['person', 'medal', 'sport', 'games_competitor']"
536,Which donor has donated the most for a project whose main subject area is Literacy & Language? Please give his or her ID. Hint: main subject area refers to primary_focus_area = 'Literacy & Language'; donated the most refers to Max(donation_total);,donor,SELECT T2.donor_acctid FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.primary_focus_area = 'Literacy & Language' ORDER BY T2.donation_total DESC LIMIT 1,"CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",176,6.555124044418335,250,"['donations', 'projects']"
537,"Who was the coach for the team which had the most bench minors penalty in 2003？ Hint: Coach of the team refers to firstName+lastName; 2003 refers to the year

",hockey,"SELECT DISTINCT T3.firstName, T3.lastName FROM Teams AS T1 INNER JOIN Coaches AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Master AS T3 ON T2.coachID = T3.coachID WHERE T1.year = '2003' GROUP BY T3.firstName, T3.lastName ORDER BY SUM(T1.BenchMinor) DESC LIMIT 1","CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  notes TEXT,
  g INTEGER,
  w INTEGER,
  l INTEGER,
  t INTEGER,
  postg TEXT,
  postw TEXT,
  postl TEXT,
  postt TEXT
);

CREATE TABLE `teamvsteam` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year) REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  oppID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT
);

CREATE TABLE `awardscoaches` (
  coachID TEXT REFERENCES Coaches(coachID),
  award TEXT,
  year INTEGER,
  lgID TEXT,
  note TEXT
);

",259,6.7334630489349365,250,"['coaches', 'teamvsteam', 'awardscoaches']"
538,"Among products bought by Kathryn Ashe, what is the name of the product with the highest quantity? Hint: highest quantity refers to MAX(Quantity);",sales,SELECT T1.Name FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T3.FirstName = 'Kathryn' AND T3.LastName = 'Ashe' ORDER BY T2.Quantity DESC LIMIT 1,"CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",145,6.5178446769714355,250,"['sales', 'products', 'customers']"
539,"What is the most common domain for the email address among all the customers? Hint: most common domain for the email refers to Max(Count(SUBSTR(email, CHARINDEX('@', email) + 1, length(email) - charindex('@', email))))",books,"SELECT SUBSTR(email, INSTR(email, '@') + 1, LENGTH(email) - INSTR(email, '@')) AS ym FROM customer GROUP BY SUBSTR(email, INSTR(email, '@') + 1, LENGTH(email) - INSTR(email, '@')) ORDER BY COUNT(*) DESC LIMIT 1","CREATE TABLE `customer` (
  customer_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  email TEXT
);

",224,6.630793809890747,250,['customer']
540,Provide the responsible person and his/her email address of Chicago Lawn. Hint: responsible person refers to commander; email address refers to email; Chicago Lawn refers to district_name = 'Chicago Lawn',chicago_crime,"SELECT commander, email FROM District WHERE district_name = 'Chicago Lawn'","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",175,6.548273086547852,250,"['crime', 'district']"
541,"List the income and number of inhabitants of customers with a reference ID greater than the 50% of average of number of false response? Hint: reference ID greater than the 50% of average of number of false response refers to REFID > DIVIDE(MULTIPLY(0.5, COUNT(RESPONSE = 'false')), COUNT(RESPONSE)); income refers to INCOME_K; number of inhabitants refer to INHABITANTS_K;",software_company,"SELECT T2.INCOME_K, T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID INNER JOIN Mailings1_2 AS T3 ON T1.ID = T3.REFID WHERE T3.REFID > ( SELECT 0.5 * COUNT(CASE WHEN RESPONSE = 'false' THEN 1 ELSE NULL END) / COUNT(RESPONSE) FROM Mailings1_2 )","CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",225,6.636656284332275,250,"['demog', 'customers']"
542,"Among the players whose short handed assists are greater or equal to 7, what is the final standing of the team with the most number of assists? Indicate the year to which the most number of assists was achieved and the name of the team. Hint: short handed assists refers to SHA; SHA> = 7; final standing refers to rank; the final standing of the team with the most number of assists refers to max(A)
",hockey,"SELECT T2.rank, T2.year, T2.name FROM Scoring AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.SHA >= 7 ORDER BY T1.A DESC LIMIT 1","CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

CREATE TABLE `teamvsteam` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year) REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  oppID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT
);

",308,6.833284139633179,250,"['goalies', 'teamvsteam']"
543,"Among all the users that have posted a tweet with over 1000 likes, how many of them are male? Hint: over 1000 likes refers to Likes > 1000; 'Male' is the Gender of user",social_media,SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T1.Likes > 10 AND T2.Gender = 'Male',"CREATE TABLE `user` (
  UserID TEXT PRIMARY KEY,
  Gender TEXT
);

CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

",158,6.538269996643066,250,"['user', 'twitter']"
544,How many of the legislators are female? Hint: female refers to gender_bio = 'F';,legislator,SELECT COUNT(gender_bio) FROM current WHERE gender_bio = 'F',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",140,6.513433218002319,250,"['historical', 'historical-terms']"
545,Calculate the average price of cars from Europe. Hint: from Europe refers to country = 'Europe'; average price = avg(price) where country = 'Europe',cars,SELECT AVG(T1.price) FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Europe',"CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",142,6.530742168426514,250,"['country', 'price']"
546,Name all disabled students that are enrolled in SMC. Hint: enrolled in SMC refers to school = 'smc';,student_loan,SELECT T2.name FROM enrolled AS T1 INNER JOIN disabled AS T2 ON T1.`name` = T2.`name` WHERE T1.school = 'smc',"CREATE TABLE `disabled` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `enrolled` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  school TEXT PRIMARY KEY,
  month INTEGER
);

",177,6.563841819763184,250,"['disabled', 'enrolled']"
547,What is the average age of Argentina's athletes who participated in the Summer Olympics in 2012? Hint: AVG(age) where games_name = '2012 Summer' and region_name = 'Argentina';,olympics,SELECT AVG(T2.age) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person_region AS T3 ON T2.person_id = T3.person_id INNER JOIN noc_region AS T4 ON T3.region_id = T4.id WHERE T1.games_name = '2012 Summer' AND T4.region_name = 'Argentina',"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

CREATE TABLE `noc_region` (
  id INTEGER,
  noc TEXT,
  region_name TEXT
);

",200,6.608819007873535,250,"['person_region', 'games_competitor', 'person', 'noc_region']"
548,Name the oldest employee who is working on night shift. How old is the employee? Hint: working on night shift refers to ShiftID = 3; oldest employee refers to min(BirthDate); age = 2022-year(BirthDate)+1,works_cycles,"SELECT T1.FirstName, T1.LastName , STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', BirthDate) FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.ShiftId = 3 ORDER BY STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', BirthDate) DESC LIMIT 1","CREATE TABLE `shift` (
  ShiftID INTEGER,
  Name TEXT PRIMARY KEY,
  StartTime TEXT PRIMARY KEY,
  EndTime TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",480,7.267841339111328,250,"['shift', 'employee']"
549,Provide the name and model of the car with the highest price. Hint: car's name refers to car_name; the highest price refers to max(price),cars,"SELECT T1.car_name, T1.model FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1","CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",142,6.51984715461731,250,"['data', 'price']"
550,Which city in the Midwest region has the least number of clients? Hint: least number of clients refers to min(count(client_id)),retail_complains,SELECT T2.city FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN state AS T3 ON T2.state_abbrev = T3.StateCode WHERE T3.Region = 'Midwest' GROUP BY T2.city ORDER BY COUNT(T2.city) LIMIT 1,"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `state` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

CREATE TABLE `district` (
  district_id INTEGER,
  city TEXT,
  state_abbrev TEXT REFERENCES state(StateCode),
  division TEXT
);

",148,6.524787425994873,250,"['client', 'state', 'district']"
551,"Identify the percent of long reviews among all 5-star reviews given to businesses by the Yelp users. Hint: percentage = divide(count(business_id where review_length = 'Long' and review_stars = 5), count(business_id)) * 100%; long reviews refers to review_length = 'Long'; 5-star review refers to review_stars = 5",public_review_platform,SELECT CAST(SUM(CASE WHEN review_length = 'Long' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(review_length) FROM Reviews WHERE review_stars = 5,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

",248,6.695963144302368,250,['reviews']
552,What are the top five most popular episodes? Hint: most popular episodes refers to MAX(votes),simpson_episodes,SELECT episode_id FROM Episode ORDER BY votes DESC LIMIT 5;,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",145,6.525086164474487,250,"['episode', 'vote']"
553,How many units are being sold for item 1 when the average temperature is 83? Hint: item 1 refers to item_nbr = 1; when the average temperature is 83 refers to tavg = 83,sales_in_weather,SELECT SUM(units) FROM weather AS T1 INNER JOIN sales_in_weather AS T2 ON T1.`date` = T2.`date` INNER JOIN relation AS T3 ON T2.store_nbr = T3.store_nbr WHERE T2.item_nbr = 1 AND T1.tavg = 83,"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `sales_in_weather` (
  date DATE PRIMARY KEY,
  store_nbr INTEGER PRIMARY KEY,
  item_nbr INTEGER PRIMARY KEY,
  units INTEGER
);

",158,6.529993057250977,250,"['weather', 'sales_in_weather']"
554,How many 6-star votes did episode 12 get? Please include the air date and rating. Hint: 6-star vote refers to stars = 6,law_episode,"SELECT T2.air_date, T2.rating FROM Vote AS T1 INNER JOIN Episode AS T2 ON T2.episode_id = T1.episode_id WHERE T1.stars = 6 AND T2.episode = 12","CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",152,6.524941444396973,250,"['vote', 'episode']"
555,"How many territories are there in the Eastern region? Hint: ""Eastern"" is the RegionDescription",retail_world,SELECT COUNT(T1.RegionID) FROM Territories AS T1 INNER JOIN Region AS T2 ON T1.RegionID = T2.RegionID WHERE T2.RegionDescription = 'Eastern',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",157,6.530312776565552,250,['customers']
556,"Which gender owned more of the Galaxy Note 2 device model? Hint: gender that owned more = SUBTRACT(IF(SUM(gender = 'M'), SUM(gender = 'F'),'M','F'));",talkingdata,"SELECT IIF(SUM(IIF(T1.gender = 'M', 1, 0)) - SUM(IIF(T1.gender = 'F', 1, 0)) > 0, 'M', 'F') AS gender FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 2'","CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",220,6.629787445068359,250,['phone_brand_device_model2']
557,List down product ids that were purchased by customers called Abby.,sales,SELECT DISTINCT T1.ProductID FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Abby',"CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",125,6.468865633010864,250,"['sales', 'customers']"
558,Which team has the most Swedish? Hint: Swedish refers to nation = 'Sweden'; team with the most Swedish refers to MAX(TEAM WHERE nation = 'Sweden');,ice_hockey_draft,"SELECT T.TEAM FROM ( SELECT T2.TEAM, COUNT(DISTINCT T1.ELITEID) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.nation = 'Sweden' GROUP BY T2.TEAM ORDER BY COUNT(DISTINCT T1.ELITEID) DESC LIMIT 1 ) AS T","CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",155,6.5261945724487305,250,['playerinfo']
559,How many strategy games are there? Hint: strategy games refers game_name WHERE genre_name = 'Strategy';,video_games,SELECT COUNT(CASE WHEN T1.genre_name = 'Strategy' THEN T2.id ELSE NULL END) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id,"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

CREATE TABLE `genre` (
  id INTEGER,
  genre_name TEXT
);

",152,6.524871349334717,250,"['game', 'genre']"
560,What is the most widely used shipping company in the United States of America? Hint: most widely used refers to max(count(ShipVia)); shipping company refers to CompanyName; in the United States of America refers to ShipCountry = 'USA',retail_world,SELECT T2.CompanyName FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.ShipCountry = 'USA' GROUP BY T2.CompanyName ORDER BY COUNT(T2.CompanyName) DESC LIMIT 1,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",190,6.565516948699951,250,"['orders', 'shippers']"
561,What is the title of episode that won the Best International TV Series Award in 2017? Hint: won refers to result = 'Winner'; in 2017 refers to year = 2017,simpson_episodes,"SELECT T2.title FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2017' AND T1.award = 'Best International TV Series' AND T1.result = 'Winner';","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",170,6.5439841747283936,250,"['award', 'episode']"
562,List the ID of all professors who are not faculty member along with the courses taught by him/her. Hint: ID of all professors refers to person.p_id where professor = 1; not faculty member refers to hasPosition = 0; courses refers to taughtBy.course_id,computer_student,"SELECT T2.p_id, T2.course_id FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id WHERE T1.professor = 1 AND T1.hasPosition <> 0","CREATE TABLE `person` (
  p_id INTEGER,
  professor INTEGER,
  student INTEGER,
  hasPosition TEXT,
  inPhase TEXT,
  yearsInProgram TEXT
);

CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

",171,6.545874834060669,250,"['person', 'taughtby']"
563,List the names of all the cast members in the series. Hint: cast member refers to category = 'Cast',law_episode,SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T1.category = 'Cast',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",141,6.518636703491211,250,"['credit', 'person']"
564,How many journals do not have a website? Hint: do not have a website refers to HomePage = '',authors,SELECT COUNT(HomePage) FROM Journal WHERE HomePage = '',"CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",138,6.514405727386475,250,['journal']
565,Provide the price of the only Toyota Corona hardtop in the database. Hint: Toyota Corona hardtop refers to car_name = 'toyota corona hardtop',cars,SELECT T2.price FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'toyota corona hardtop',"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",147,6.528424978256226,250,"['data', 'price']"
566,"Write down the store IDs and region of the state ""Michigan"". Hint: ""Michigan"" is the State",regional_sales,"SELECT DISTINCT T2.StoreID, T1.Region FROM Regions AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StateCode = T1.StateCode WHERE T2.State = 'Michigan'","CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

CREATE TABLE `regions` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

",149,6.5262978076934814,250,"['store locations', 'regions']"
567,What is the batting hand of MK Pandey? Hint: MK Pandey refers to Player_Name = 'MK Pandey',soccer_2016,SELECT T2.Batting_hand FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T1.Player_Name = 'MK Pandey',"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `batting_style` (
  Batting_Id INTEGER,
  Batting_hand TEXT
);

",235,6.671984434127808,250,"['player', 'batting_style']"
568,"Calculate the difference in the average number of low-priority orders shipped by truck in each month of 1995 and 1996. Hint: SUBTRACT(DIVIDE(SUM(l_orderkey where year(l_shipdate) = 1995), 12), DIVIDE(SUM(l_orderkey where year(l_shipdate) = 1996), 12)) where o_orderpriority = '5-LOW';",retails,"SELECT (CAST(SUM(IIF(STRFTIME('%Y', T2.l_shipdate) = 1995, 1, 0)) AS REAL) / 12) - (CAST(SUM(IIF(STRFTIME('%Y', T2.l_shipdate) = 1996, 1, 0)) AS REAL) / 12) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderpriority = '5-LOW' AND T2.l_shipmode = 'TRUCK'","CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",234,6.662317514419556,250,"['orders', 'lineitem']"
569,"How many customers have an address that is located in the city of Villeneuve-la-Garenne? Hint: ""Villeneuve-la-Garenne"" is the city",books,SELECT COUNT(address_id) FROM address WHERE city = 'Villeneuve-la-Garenne',"CREATE TABLE `address` (
  address_id INTEGER,
  street_number TEXT,
  street_name TEXT,
  city TEXT,
  country_id INTEGER REFERENCES country(country_id)
);

CREATE TABLE `customer_address` (
  customer_id INTEGER PRIMARY KEY REFERENCES customer(customer_id),
  address_id INTEGER PRIMARY KEY REFERENCES address(address_id),
  status_id INTEGER
);

",209,6.615967273712158,250,"['address', 'customer_address']"
570,Please list the occupations of the customers over 40 and have sent a true response to the incentive mailing sent by the marketing department. Hint: over 40 refers to age > 40; RESPONSE = 'true';,software_company,SELECT DISTINCT T1.OCCUPATION FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID WHERE T1.age > 40 AND T2.RESPONSE = 'true',"CREATE TABLE `mailings1_2` (
  REFID INTEGER REFERENCES Customers(None),
  REF_DATE DATETIME,
  RESPONSE TEXT
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",170,6.548521995544434,250,"['mailings1_2', 'customers']"
571,"Among the active businesses in Ahwatukee, which of them are still open in Sunday? Hint: active business refers to active = 'true'; 'Ahwatukee' is the name of city; open in Sunday refers to day_of_week = 'Sunday'",public_review_platform,SELECT T1.business_id FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Ahwatukee' AND T1.active LIKE 'TRUE' AND T3.day_of_week LIKE 'Sunday',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `days` (
  day_id INTEGER,
  day_of_week TEXT
);

",217,6.629683971405029,250,"['business', 'days']"
572,How many matches played in the 2019 season of Scottish Championship league were ended with an equal result of 2-2? Hint: matches refer to Div; Scottish Championship is a name of the league; equal result of 2-2 refers to FTAG = 2 AND FTHG = 2;,european_football_1,SELECT COUNT(T1.Div) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T1.season = 2019 AND T2.name = 'Scottish Championship' AND T1.FTAG = 2 AND T1.FTHG = 2,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",167,6.545252323150635,250,"['matchs', 'divisions']"
573,Show the id of University of Orléans. Hint: University of Orléans refers to university_name = 'University of Orléans';,university,SELECT id FROM university WHERE university_name = 'University of Orléans',"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

",164,6.5442304611206055,250,['university']
574,What's on the notes for the order happened on 1994/9/14? Hint: order happened on refers to ord_date,book_publishing_company,"SELECT T1.notes FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE STRFTIME('%Y-%m-%d', T2.ord_date) = '1994-09-14'","CREATE TABLE `sales` (
  stor_id TEXT PRIMARY KEY REFERENCES stores(stor_id),
  ord_num TEXT PRIMARY KEY,
  ord_date DATETIME,
  qty INTEGER,
  payterms TEXT,
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id)
);

",173,6.553303956985474,250,['sales']
575,Provide match ID which had the extra type of penalty. Hint: extra type of penalty refers to Extra_Name = 'penalty';,soccer_2016,SELECT T1.Match_Id FROM Extra_Runs AS T1 INNER JOIN Extra_Type AS T2 ON T1.Extra_Type_Id = T2.Extra_Id WHERE T2.Extra_Name = 'penalty',"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `extra_type` (
  Extra_Id INTEGER,
  Extra_Name TEXT
);

",231,6.661402940750122,250,"['match', 'extra_type']"
576,List down the series codes in which the topic is about Environment: Emissions and the license type is restricted. Please include their alpha code.,world_development_indicators,SELECT SeriesCode FROM Series WHERE Topic = 'Environment: Emissions' AND LicenseType = 'Restricted',"CREATE TABLE `series` (
  SeriesCode TEXT PRIMARY KEY,
  Topic TEXT,
  IndicatorName TEXT,
  ShortDefinition TEXT,
  LongDefinition TEXT,
  UnitOfMeasure TEXT,
  Periodicity TEXT,
  BasePeriod TEXT,
  OtherNotes INTEGER,
  AggregationMethod TEXT,
  LimitationsAndExceptions TEXT,
  NotesFromOriginalSource TEXT,
  GeneralComments TEXT,
  Source TEXT,
  StatisticalConceptAndMethodology TEXT,
  DevelopmentRelevance TEXT,
  RelatedSourceLinks TEXT,
  OtherWebLinks INTEGER,
  RelatedIndicators INTEGER,
  LicenseType TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",145,6.525759696960449,250,"['series', 'country', 'countrynotes']"
577,What is the average duration time of the films starring PENELOPE GUINESS? Hint: average duration time = AVG(length),movie_3,SELECT AVG(T3.length) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",196,6.609070777893066,250,"['actor', 'film_actor']"
578,"List down the company names which supplied products for the order on 14th August, 1996. Hint: products refers to Order_Details.ProductID; on 14th August, 1996 refers to OrderDate = '8/14/1996'",retail_world,SELECT T1.CompanyName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN `Order Details` AS T3 ON T2.ProductID = T3.ProductID INNER JOIN Orders AS T4 ON T3.OrderID = T4.OrderID WHERE date(T4.OrderDate) = '1996-08-14',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

",200,6.609768390655518,250,"['products', 'suppliers', 'orders']"
579,"How many words are there on the page that the word ""grec"" has occurred for 52 times? Hint: the word ""grec"" refers to word = 'grec'; occurred for 52 times refers to occurrences = 52",language_corpus,SELECT SUM(T3.words) FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'grec' AND T2.occurrences = 52,"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",179,6.564236879348755,250,"['words', 'pages', 'pages_words']"
580,"Compare the number of business between the category of ""Men's Clothing"" and ""Women's Clothing"". Hint: category of ""Men's Clothing"" refers to category_name = 'Men''s Clothing'; ""Women's Clothing"" refers to category_name = 'Women''s Clothing'",public_review_platform,SELECT SUM(CASE WHEN T1.category_name = 'Men''s Clothing' THEN 1 ELSE 0 END) - SUM(CASE WHEN T1.category_name = 'Women''s Clothing' THEN 1 ELSE 0 END) AS diff FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id,"CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",232,6.661927223205566,250,"['business_categories', 'categories']"
581,List down the page numbers for menu with dishes on the right upper corner. Hint: on the right upper corner refers to xpos > 0.75 AND ypos < 0.25;,menu,SELECT T2.page_number FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id INNER JOIN MenuItem AS T3 ON T2.id = T3.menu_page_id WHERE T3.xpos > 0.75 AND T3.ypos < 0.25,"CREATE TABLE `menupage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",150,6.525747299194336,250,"['menupage', 'menu']"
582,How many apps have rating of 5? Hint: FALSE;,app_store,SELECT COUNT(App) FROM playstore WHERE Rating = 5,"CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

",118,6.4633469581604,250,['playstore']
583,"How many dishes have appeared on the menu in less than 5 years? Hint: appeared on the menu in less than 5 years = SUBTRACT(last_appeared, first_appeared) < 5;",menu,SELECT COUNT(*) FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.last_appeared - T1.first_appeared < 5,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",154,6.53188681602478,250,"['dish', 'menuitem']"
584,"Among the white patients, what is the average body height of the patients? Hint: white refers to race = 'white'; average body height = AVG(observations.VALUE WHERE observations.DESCRIPTION = 'Body Height'); body height refers to observations.DESCRIPTION = 'Body Height';",synthea,SELECT AVG(T1.VALUE) FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.race = 'white' AND T1.DESCRIPTION = 'Body Height',"CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

CREATE TABLE `observations` (
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE TEXT,
  DESCRIPTION TEXT,
  VALUE REAL,
  UNITS TEXT
);

",209,6.617861747741699,250,"['patients', 'observations']"
585,How many books are in English? Hint: books in English refers to language_name = 'English',books,SELECT COUNT(*) FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T2.language_name = 'English',"CREATE TABLE `book_language` (
  language_id INTEGER,
  language_code TEXT,
  language_name TEXT
);

",188,6.567635774612427,250,['book_language']
586,What is the genre of PG rated movie starred by the actor with highest net worth? Hint: PG rated refers to MPAA Rating = 'PG';  highest net worth refers to max(NetWorth),movie,"SELECT T1.Genre FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.`MPAA Rating` = 'PG' ORDER BY CAST(REPLACE(REPLACE(T3.NetWorth, ',', ''), '$', '') AS REAL) DESC LIMIT 1","CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",152,6.531423568725586,250,"['movie', 'actor', 'characters']"
587,Give the number of solutions that the repository which has 3060 Stars contains. Hint: solutions refers to Solution.Id; repository refers to Repository.Id;,codebase_comments,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 3060,"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",152,6.534381628036499,250,"['solution', 'repo']"
588,"For the biwords pair that appears ""116430"" times, what is the second word of the pair? Hint: the biwords pair that appears ""116430"" times refers to occurrences = 116430; second word of the pair refers to w2nd",language_corpus,SELECT T1.word FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w2nd WHERE T2.occurrences = 116430,"CREATE TABLE `biwords` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  w1st INTEGER PRIMARY KEY REFERENCES words(wid),
  w2nd INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",192,6.580395936965942,250,['biwords']
589,List all the comments on the lowest rated Mature 17+ app. Hint: comments refers to Translated_Review; lowest rated refers to Rating = 1; Mature 17+ refers to Content Rating = 'Mature 17+ ';,app_store,"SELECT T2.Translated_Review FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.""Content Rating"" = 'Mature 17+' ORDER BY T1.Rating LIMIT 1","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",161,6.540658235549927,250,"['playstore', 'user_reviews']"
590,"Among the students who filed for bankruptcy with an absence in school of no more than 6 months, how many students enlisted for the fire department? Hint: absence of no more than 6 months refers to month < 6; department refers to organ; organ = 'fire_department';",student_loan,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN filed_for_bankrupcy AS T2 ON T1.name = T2.name INNER JOIN enlist AS T3 ON T3.name = T2.name WHERE T3.organ = 'fire_department',"CREATE TABLE `filed_for_bankrupcy` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

",211,6.629240989685059,250,"['filed_for_bankrupcy', 'longest_absense_from_school', 'enlist']"
591,Is donor “22cbc920c9b5fa08dfb331422f5926b5” a teacher? Hint: donor “22cbc920c9b5fa08dfb331422f5926b5” refers to donor_acctid = '22cbc920c9b5fa08dfb331422f5926b5'; is a teacher refers to is_teacher_acct;,donor,SELECT DISTINCT is_teacher_acct FROM donations WHERE donor_acctid = '22cbc920c9b5fa08dfb331422f5926b5',"CREATE TABLE `resources` (
  resourceid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  vendorid INTEGER,
  vendor_name TEXT,
  project_resource_type TEXT,
  item_name TEXT,
  item_number TEXT,
  item_unit_price REAL,
  item_quantity INTEGER
);

",243,6.685791254043579,250,['donors']
592,"How many tags does the release ""city funk"" have？ Hint: release ""city funk"" refers to groupName = 'city funk';",music_tracker,SELECT COUNT(T2.tag) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupName = 'city funk',"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

CREATE TABLE `tags` (
  index INTEGER PRIMARY KEY,
  id INTEGER REFERENCES torrents(None),
  tag TEXT
);

",134,6.514706611633301,250,"['torrents', 'tags']"
593,"What is the percentage of orders with 0.2 discount in the Central superstore were purchased by customers who live in Texas? Hint: live in Texas refers to State = 'Texas'; percentage = divide(sum(Order ID) when Discount = 0.2, sum(Order ID)) as percentage",superstore,SELECT CAST(SUM(CASE  WHEN T2.Discount = 0.2 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.State = 'Texas',"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `people` (
  Customer ID TEXT PRIMARY KEY,
  Customer Name TEXT,
  Segment TEXT,
  Country TEXT,
  City TEXT,
  State TEXT,
  Postal Code INTEGER,
  Region TEXT PRIMARY KEY
);

",190,6.579398155212402,250,"['central_superstore', 'people']"
594,What is the average number of students for each advisor? Hint: students refers to advisedBy.p_id; advisor refers to p_id_dummy; average number = avg(count(advisedBy.p_id)),computer_student,SELECT CAST(COUNT(p_id) AS REAL) / COUNT(DISTINCT p_id_dummy) AS avgnum FROM advisedBy GROUP BY p_id_dummy,"CREATE TABLE `advisedby` (
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id),
  p_id_dummy INTEGER PRIMARY KEY REFERENCES person(p_id)
);

",162,6.545084714889526,250,['advisedby']
595,What are the names of the vendors to which the company purchased its women's tights products? Hint: product is purchased refers to MakeFlag = 0; women's refers to Style = 'W'; ProductSubcategoryID = 'Tights';,works_cycles,SELECT DISTINCT T4.Name FROM Product AS T1 INNER JOIN ProductVendor AS T2 ON T1.ProductID = T2.ProductID INNER JOIN ProductSubcategory AS T3 ON T1.ProductSubcategoryID = T3.ProductSubcategoryID INNER JOIN Vendor AS T4 ON T2.BusinessEntityID = T4.BusinessEntityID WHERE T1.MakeFlag = 0 AND T1.Style = 'W' AND T3.Name = 'Tights',"CREATE TABLE `productvendor` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Vendor(BusinessEntityID),
  AverageLeadTime INTEGER,
  StandardPrice REAL,
  LastReceiptCost REAL,
  LastReceiptDate DATETIME,
  MinOrderQty INTEGER,
  MaxOrderQty INTEGER,
  OnOrderQty INTEGER,
  UnitMeasureCode TEXT REFERENCES UnitMeasure(UnitMeasureCode),
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productsubcategory` (
  ProductSubcategoryID INTEGER,
  ProductCategoryID INTEGER REFERENCES ProductCategory(ProductCategoryID),
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",475,7.259990215301514,250,"['productvendor', 'product', 'productsubcategory']"
596,How many Away Victories happened on 2016/3/27 in the LaLiga 2 division? Hint: Away victories refer to FTR = 'A'; LaLiga 2 is the name of division; Date = '2016-03-27';,european_football_1,SELECT COUNT(T1.FTR) FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'LaLiga 2' AND T1.Date = '2016-03-27' AND T1.FTR = 'A',"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",169,6.553035497665405,250,"['matchs', 'divisions']"
597,"Give the number of users who joined Yelp since ""2004"". Hint: joined yelp since 2004 refers to user_yelping_since_year = 2004;",public_review_platform,SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year = 2004,"CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",207,6.624266624450684,250,['users']
598,Tell the weight of Dagfinn Sverre Aarskog.,olympics,SELECT weight FROM person WHERE full_name = 'Dagfinn Sverre Aarskog',"CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

",163,6.549814224243164,250,['person']
599,Please provide the title of the list with the most comments on the list. Hint: the most comments refers to Max(list_comments);,movie_platform,SELECT list_title FROM lists GROUP BY list_title ORDER BY COUNT(list_comments) DESC LIMIT 1,"CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

",145,6.5272440910339355,250,"['lists', 'lists_users']"
600,How many Italian patients have the care plan code of 304510005? Hint: Italian patients refers to ethnicity = 'italian';,synthea,SELECT COUNT(DISTINCT T2.patient) FROM careplans AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.ethnicity = 'italian' AND T1.CODE = '304510005',"CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",180,6.559368133544922,250,['patients']
601,"Compare the graduate cohort for Auburn University from 2011 to 2013? Hint: graduate cohort for Auburn University refers to grad_cohort is not null WHERE chronname = 'Auburn University', gender = 'B', race = 'X' and cohort = '4y other', '4y bach'; from 2011 to 2013 refers to year in (2011, 2012, 2013);",college_completion,"SELECT SUM(CASE WHEN T2.year = 2011 THEN T2.grad_cohort ELSE 0 END), SUM(CASE WHEN T2.year = 2012 THEN T2.grad_cohort ELSE 0 END), SUM(CASE WHEN T2.year = 2013 THEN T2.grad_cohort ELSE 0 END) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.gender = 'B' AND T2.race = 'X' AND T1.chronname = 'Auburn University'","CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",236,6.674216985702515,250,['institution_grads']
602,What is the disparate number of the comedy films that got the 1 rating?,movielens,SELECT COUNT(DISTINCT T1.movieid) FROM movies2directors AS T1 INNER JOIN u2base AS T2 ON T1.movieid = T2.movieid WHERE T2.rating = 1 AND T1.genre = 'comedy',"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2directors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  directorid INTEGER PRIMARY KEY REFERENCES directors(None),
  genre TEXT
);

",145,6.5220770835876465,250,"['movies', 'movies2directors']"
603,Please list the short name of countries which have the latest trade data after 2010. Hint: the latest trade data after 2010 implies LatestTradeData > 2010;,world_development_indicators,SELECT ShortName FROM Country WHERE LatestTradeData > 2010,"CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",162,6.534475564956665,250,['countrynotes']
604,What are the companies that have the same phone area code as 171? Hint: phone area code as 171 refers to Phone LIKE '(171)%'; companies refer to CompanyName;,retail_world,SELECT CompanyName FROM Customers WHERE Phone LIKE '(171)%',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",182,6.560843467712402,250,['customers']
605,"How many paragraphs are there in Act 5 Scene 1 of ""Comedy of Errors""? Hint: ""Comedy of Errors"" refers to Title = 'Comedy of Errors'",shakespeare,SELECT COUNT(T3.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T2.Act = 5 AND T2.Scene = 1 AND T1.Title = 'Comedy of Errors',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",159,6.531246185302734,250,"['works', 'chapters', 'paragraphs']"
606,List the product name with more than 5 quantity in the shopping cart. Hint: Product with more than 5 quantity refers to Quantity>5,works_cycles,SELECT T1.Name FROM Product AS T1 INNER JOIN ShoppingCartItem AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Quantity > 5,"CREATE TABLE `productInventory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  LocationID INTEGER PRIMARY KEY REFERENCES Location(LocationID),
  Shelf TEXT,
  Bin INTEGER,
  Quantity INTEGER,
  rowguid TEXT,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",454,7.203301191329956,250,"['productInventory', 'product']"
607,"How much space does page 1 of the menu ""Zentral Theater Terrace"" cover? Hint: how much space = MULTIPLY(full_height, full_width); Zentral Theater Terrace is a name of menu;",menu,SELECT T2.full_height * T2.full_width FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id WHERE T1.name = 'Zentral Theater Terrace' AND T2.page_number = 1,"CREATE TABLE `menupage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",163,6.539407253265381,250,"['menupage', 'menu']"
608,"Please list the first names of the players with the most personal fouls in the 'NBL' league. Hint: ""NBL"" is the lgID; most  personal foul refers to Max(Count(PF))",professional_basketball,"SELECT T1.firstName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.lgID = 'NBL' GROUP BY T1.playerID, T1.firstName ORDER BY COUNT(PF) DESC LIMIT 1","CREATE TABLE `players` (
  playerID TEXT PRIMARY KEY,
  useFirst TEXT,
  firstName TEXT,
  middleName TEXT,
  lastName TEXT,
  nameGiven TEXT,
  fullGivenName TEXT,
  nameSuffix TEXT,
  nameNick TEXT,
  pos TEXT,
  firstseason INTEGER,
  lastseason INTEGER,
  height REAL,
  weight INTEGER,
  college TEXT,
  collegeOther TEXT,
  birthDate DATE,
  birthCity TEXT,
  birthState TEXT,
  birthCountry TEXT,
  highSchool TEXT,
  hsCity TEXT,
  hsState TEXT,
  hsCountry TEXT,
  deathDate DATE,
  race TEXT
);

CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",197,6.601345539093018,250,"['players', 'player_allstar']"
609,Which country produced the car with the lowest price? Hint: the lowest price refers to min(price),cars,SELECT T3.country FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country ORDER BY T1.price ASC LIMIT 1,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",128,6.474446535110474,250,"['data', 'country', 'production']"
610,How many self-relations are there between the object samples in image no.5? Hint: self-relations refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID; image no.5 refers to IMG_ID = 5,image_and_language,SELECT SUM(CASE WHEN IMG_ID = 5 THEN 1 ELSE 0 END) FROM IMG_REL WHERE OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID,"CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",204,6.6144232749938965,250,['img_rel']
611,What are the names of the establishments that met all of the required standards in 2013? Hint: establishments have the same meaning as businesses; met all of the required standards refers to score = 100; year(date) = 2013,food_inspection,"SELECT DISTINCT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2013' AND T1.score = 100","CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

CREATE TABLE `inspections` (
  business_id INTEGER REFERENCES businesses(business_id),
  score INTEGER,
  date DATE,
  type TEXT
);

",165,6.541132926940918,250,"['businesses', 'inspections']"
612,Provide the menu page ids of all the menu that includes mashed potatoes. Hint: mashed potatoes is a name of dish;,menu,SELECT T2.menu_page_id FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T1.name = 'Mashed potatoes',"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",138,6.511562824249268,250,"['dish', 'menuitem']"
613,What is the sum of year 1 and year 2 students? Hint: year 1 and year 2 students refers to yearsInProgram = 'Year_1' and yearsInProgram = 'Year_2' and student = 1,computer_student,SELECT COUNT(*) FROM person WHERE yearsInProgram = 'Year_1' OR yearsInProgram = 'Year_2',"CREATE TABLE `person` (
  p_id INTEGER,
  professor INTEGER,
  student INTEGER,
  hasPosition TEXT,
  inPhase TEXT,
  yearsInProgram TEXT
);

",160,6.535485744476318,250,['person']
614,"Among all the production technicians, how many have a below average pay rate for a production technician? Hint: production technician is a job title; below average rate refers to Rate<AVG(Rate);",works_cycles,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' AND T2.Rate < ( SELECT AVG(T2.Rate) FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' ),"CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",467,7.238633155822754,250,['employee']
615,"Calculate the actual profit for order number 10100. Hint: SUM(MULTIPLY(quantityOrdered (SUBTRACT (priceEach, buyPrice));",car_retails,SELECT SUM((t1.priceEach - t2.buyPrice) * t1.quantityOrdered) FROM orderdetails AS t1 INNER JOIN products AS t2 ON t1.productCode = t2.productCode WHERE t1.orderNumber = '10100',"CREATE TABLE `orderdetails` (
  orderNumber INTEGER PRIMARY KEY REFERENCES orders(None),
  productCode TEXT PRIMARY KEY REFERENCES products(None),
  quantityOrdered INTEGER,
  priceEach REAL,
  orderLineNumber INTEGER
);

CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

",164,6.545926809310913,250,"['orderdetails', 'products']"
616,List all the public institutes from the state with the least number of graduate cohort in 2013. Hint: public refers to control = 'Public'; institutes refers to chronname; least number of graduate cohort refers to MIN(grad_cohort); in 2013 refers to year = 2013;,college_completion,SELECT T1.chronname FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2013 AND T1.control = 'Public' ORDER BY T2.grad_cohort LIMIT 1,"CREATE TABLE `institution_details` (
  unitid INTEGER,
  chronname TEXT,
  city TEXT,
  state TEXT,
  level TEXT,
  control TEXT,
  basic TEXT,
  hbcu TEXT,
  flagship TEXT,
  long_x REAL,
  lat_y REAL,
  site TEXT,
  student_count INTEGER,
  awards_per_value REAL,
  awards_per_state_value REAL,
  awards_per_natl_value REAL,
  exp_award_value INTEGER,
  exp_award_state_value INTEGER,
  exp_award_natl_value INTEGER,
  exp_award_percentile INTEGER,
  ft_pct REAL,
  fte_value INTEGER,
  fte_percentile INTEGER,
  med_sat_value TEXT,
  med_sat_percentile TEXT,
  aid_value INTEGER,
  aid_percentile INTEGER,
  endow_value TEXT,
  endow_percentile TEXT,
  grad_100_value REAL,
  grad_100_percentile INTEGER,
  grad_150_value REAL,
  grad_150_percentile INTEGER,
  pell_value REAL,
  pell_percentile INTEGER,
  retain_value REAL,
  retain_percentile INTEGER,
  ft_fac_value REAL,
  ft_fac_percentile INTEGER,
  vsa_year TEXT,
  vsa_grad_after4_first TEXT,
  vsa_grad_elsewhere_after4_first TEXT,
  vsa_enroll_after4_first TEXT,
  vsa_enroll_elsewhere_after4_first TEXT,
  vsa_grad_after6_first TEXT,
  vsa_grad_elsewhere_after6_first TEXT,
  vsa_enroll_after6_first TEXT,
  vsa_enroll_elsewhere_after6_first TEXT,
  vsa_grad_after4_transfer TEXT,
  vsa_grad_elsewhere_after4_transfer TEXT,
  vsa_enroll_after4_transfer TEXT,
  vsa_enroll_elsewhere_after4_transfer TEXT,
  vsa_grad_after6_transfer TEXT,
  vsa_grad_elsewhere_after6_transfer TEXT,
  vsa_enroll_after6_transfer TEXT,
  vsa_enroll_elsewhere_after6_transfer TEXT,
  similar TEXT,
  state_sector_ct INTEGER,
  carnegie_ct INTEGER,
  counted_pct TEXT,
  nicknames TEXT,
  cohort_size INTEGER
);

CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",196,6.608311891555786,250,"['institution_details', 'institution_grads']"
617,"What is the percentage of businesses with ""Good for Kids"" attribute over the other attributes? Hint: ""Good for Kids"" attribute refers to attribute_name = 'Good for Kids' AND attribute_value = 'true'; Calculation = DIVIDE(SUM(attribute_name = 'Good for Kids' AND attribute_value = 'true')), SUM(business_id) * 100",public_review_platform,SELECT CAST(SUM(CASE WHEN attribute_name = 'Good for Kids' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T2.attribute_value = 'true',"CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

",245,6.686657905578613,250,"['business_attributes', 'attributes']"
618,List all movies with the best rating score. State the movie title and number of Mubi user who loves the movie. Hint: best rating score refers to rating_score = 5; number of Mubi user who loves the movie refers to movie_popularity;,movie_platform,"SELECT DISTINCT T2.movie_title, T2.movie_popularity FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5","CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",173,6.559394359588623,250,"['movies', 'ratings']"
619,How many items weren't sold in store 2 on 1/1/2012? Hint: store no.2 refers to store_nbr = 2; item weren't sold refers to units = 0; on 1/1/2012 refers to date = '2012-01-01',sales_in_weather,SELECT COUNT(item_nbr) FROM sales_in_weather WHERE store_nbr = 2 AND units = 0 AND `date` = '2012-01-01',"CREATE TABLE `sales_in_weather` (
  date DATE PRIMARY KEY,
  store_nbr INTEGER PRIMARY KEY,
  item_nbr INTEGER PRIMARY KEY,
  units INTEGER
);

",183,6.568768501281738,250,['sales_in_weather']
620,"Find the total payment of the orders by customers from San Francisco. Hint: from San Francisco refers to City = 'San Francisco'; total payment refers to sum(MULTIPLY(UnitPrice, Quantity, SUBTRACT(1, Discount)))",retail_world,SELECT SUM(T3.UnitPrice * T3.Quantity * (1 - T3.Discount)) AS TOTALPAYMENT FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID WHERE T1.City = 'San Francisco',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",189,6.578859806060791,250,"['orders', 'customers']"
621,State the name of the optional ingredient of no.1397 recipe. Hint: no.1397 recipe refers to recipe_id = 1397; optional ingredient refers to optional = 'TRUE',cookbook,SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T2.recipe_id = 1397 AND T2.optional = 'TRUE',"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",159,6.541812181472778,250,"['quantity', 'ingredient']"
622,List at least 10 users ID that has 4 as an average ratings of all reviews sent. Hint: 4 as an average rating refers to user_average_stars = 4,public_review_platform,SELECT COUNT(user_id) FROM Users WHERE user_average_stars = 4 LIMIT 10,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

",201,6.608434677124023,250,['reviews']
623,"Among the movies from France, how many of them are drama? Hint: France a one country",movielens,SELECT COUNT(T1.movieid) FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'France' AND T1.genre = 'drama',"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2directors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  directorid INTEGER PRIMARY KEY REFERENCES directors(None),
  genre TEXT
);

",148,6.524789810180664,250,"['movies', 'movies2directors']"
624,What is the average of the white population in the cities with area code 920? Hint: AVG(white_population) where area_code = 920;,address,SELECT AVG(T2.white_population) FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 920,"CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",170,6.551296949386597,250,"['area_code', 'zip_data']"
625,How many inspections were done in January 2011? Hint: in January 2011 refers to inspection_date like '2011-01%',food_inspection_2,"SELECT COUNT(inspection_id) FROM inspection WHERE strftime('%Y-%m', inspection_date) = '2011-01'","CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

",158,6.535783767700195,250,['inspection']
626,List the full name of all current female senators. Hint: full name refers to official_full_name; female refers to gender_bio = 'F'; senators refers to type = 'sen',legislator,"SELECT T2.first_name, T2.last_name FROM `current-terms` AS T1 INNER JOIN current AS T2 ON T2.bioguide_id = T1.bioguide WHERE T1.type = 'sen' AND T2.gender_bio = 'F' GROUP BY T2.ballotpedia_id","CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",161,6.540116548538208,250,"['current', 'historical']"
627,Who is the customer who purchased the highest number of products in a single order? Hint: highest number of products refers to MAX(COUNT(ProductID)),retail_world,SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN `Order Details` AS T3 ON T2.OrderID = T3.OrderID GROUP BY T1.CompanyName ORDER BY COUNT(T3.ProductID) DESC LIMIT 1,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",167,6.543633460998535,250,"['orders', 'customers']"
628,"Mention the user average star, elite year and the compliment type of user ID 6027 whereby number of compliments reach uber. Hint: number of compliments reach uber refers to number_of_compliments = 'Uber'; elite year refers to year_id; user average star refers to user_average_stars",public_review_platform,"SELECT T2.user_average_stars, T1.year_id, T4.compliment_type, T3.number_of_compliments FROM Elite AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id INNER JOIN Users_Compliments AS T3 ON T2.user_id = T3.user_id INNER JOIN Compliments AS T4 ON T3.compliment_id = T4.compliment_id INNER JOIN Years AS T5 ON T1.year_id = T5.year_id WHERE T3.number_of_compliments = 'Uber' AND T3.user_id = 6027","CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",236,6.665614604949951,250,"['reviews', 'users']"
629,"Indicate the id of the reviewer whose itunes id is 1516665400. Hint: ""151665400"" is itunes_id; id of reviewer refers to author_id",music_platform_2,SELECT T2.author_id FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T1.itunes_id = 1516665400,"CREATE TABLE `reviews` (
  podcast_id TEXT REFERENCES podcasts(None),
  title TEXT,
  content TEXT,
  rating INTEGER,
  author_id TEXT,
  created_at TEXT
);

",165,6.541340351104736,250,['reviews']
630,"List the name of all awards along with the award category, nominated by Marc Wilmore. Hint: ""Marc Wilmore"" is the name of person",simpson_episodes,"SELECT award_id, award_category FROM Award WHERE person = 'Marc Wilmore';","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",156,6.533086538314819,250,"['award', 'person']"
631,"Calculate the average percentage of word appearance in the page that have revision page id smaller than 106680. Hint: revision page id smaller than 106680 refers to revision < 106680; word appearance refers to occurrences; DIVIDE(SUM(occurrences where revision < 106680), COUNT(occurrences)) as percentage;",language_corpus,SELECT CAST(SUM(T1.words) AS REAL) * 100 / SUM(T2.occurrences) FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.revision < 106680,"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",216,6.626506090164185,250,"['pages', 'words', 'pages_words']"
632,"Give the case number and coordinates of the places where child abduction is reported. Hint: ""CHILD ABDUCTION"" is the secondary_description; coordinates refers to latitude, longitude",chicago_crime,"SELECT T1.case_number, T1.latitude, T1.longitude FROM Crime AS T1 INNER JOIN IUCR AS T2 ON T2.iucr_no = T1.iucr_no WHERE T2.secondary_description = 'CHILD ABDUCTION'","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `iucr` (
  iucr_no TEXT PRIMARY KEY,
  primary_description TEXT,
  secondary_description TEXT,
  index_code TEXT
);

",171,6.547853469848633,250,"['crime', 'iucr']"
633,"What category does the item ordered by Katherine Murray on 11/4/2018 in the South region belong to? Hint: ordered by Katherine Murray refers to ""Customer Name"" = 'Katherine Murray'; on 11/4/2018 refers to ""Order Date"" = Date('2018-11-04');",superstore,SELECT DISTINCT T3.Category FROM south_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T1.`Product ID` WHERE T2.`Customer Name` = 'Katherine Murray' AND T1.`Order Date` = '2018-11-04' AND T2.Region = 'South',"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `people` (
  Customer ID TEXT PRIMARY KEY,
  Customer Name TEXT,
  Segment TEXT,
  Country TEXT,
  City TEXT,
  State TEXT,
  Postal Code INTEGER,
  Region TEXT PRIMARY KEY
);

",205,6.612016677856445,250,"['central_superstore', 'people']"
634,List the games available on Wii. Hint: games available refers to game_name; Wii refers to platform_name = 'Wii';,video_games,SELECT T4.game_name FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN game_publisher AS T3 ON T2.game_publisher_id = T3.id INNER JOIN game AS T4 ON T3.game_id = T4.id WHERE T1.platform_name = 'Wii',"CREATE TABLE `game_platform` (
  id INTEGER,
  game_publisher_id INTEGER REFERENCES game_publisher(id),
  platform_id INTEGER REFERENCES platform(id),
  release_year INTEGER
);

CREATE TABLE `platform` (
  id INTEGER,
  platform_name TEXT
);

",159,6.537177085876465,250,"['game_platform', 'platform']"
635,Give the district numbers with an Anti-Administration party.,legislator,SELECT district FROM `historical-terms` WHERE party = 'Anti-Administration' GROUP BY district,"CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",130,6.513147354125977,250,['historical-terms']
636,Tell the name of the county which is represented by Hartzler Vicky. Hint: name of county refers to county,address,SELECT T1.county FROM country AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T3.first_name = 'Hartzler' AND T3.last_name = 'Vicky' GROUP BY T1.county,"CREATE TABLE `alias` (
  zip_code INTEGER REFERENCES zip_data(zip_code),
  alias TEXT
);

",156,6.529784917831421,250,['alias']
637,How many product names does the supplier Exotic Liquids have? Hint: 'Exotic Liquids' is a CompanyName,retail_world,SELECT COUNT(T1.ProductName) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Exotic Liquids',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",163,6.5429158210754395,250,"['products', 'suppliers']"
638,Provide the air carrier description of the flight with the highest actual elapsed time. Hint: highest actual elapsed time refers to MAX(ACTUAL_ELAPSED_TIME);,airline,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID ORDER BY T2.ACTUAL_ELAPSED_TIME DESC LIMIT 1,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",146,6.524118423461914,250,"['airlines', 'air carriers']"
639,List all of the information about the music department's casts and crews. Hint: information about the music department refers to category = 'Music Department',simpson_episodes,"SELECT DISTINCT person, name, birthdate, birth_name, birth_place , birth_region, birth_country, height_meters, nickname FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T2.category = 'Music Department';","CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",156,6.533449411392212,250,"['credit', 'person']"
640,At which district did the multiple homicide case number JB120039 occurred? Hint: multiple homicide refers to Count(case_number) > 1; district refers to district_name,chicago_crime,"SELECT T1.district_no, T1.district_name FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T2.case_number = 'JB120039' GROUP BY T1.district_no, T1.district_name","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",172,6.551624059677124,250,"['crime', 'district']"
641,Which year did Europe produce the most cars? Hint: year refers to model_year; Europe refers to country = 'Europe'; the most cars refers to max(model_year),cars,SELECT T1.model_year FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T2.country = 'Europe' GROUP BY T1.model_year ORDER BY COUNT(T1.model_year) DESC LIMIT 1,"CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",144,6.521691799163818,250,"['country', 'production']"
642,Name the publisher who published the most books. Hint: published the most books refers to Max(Count(book_id)); publisher refers to publisher_name,books,SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id GROUP BY T2.publisher_name ORDER BY COUNT(T2.publisher_id) DESC LIMIT 1,"CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `publisher` (
  publisher_id INTEGER,
  publisher_name TEXT
);

",198,6.603135585784912,250,"['book', 'publisher']"
643,How many users who are between 20 and 60 use phone brand of TCL?,talkingdata,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age BETWEEN 20 AND 60 AND T2.phone_brand = 'TCL',"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",190,6.572224140167236,250,['phone_brand_device_model2']
644,"Provide the episode number, title and rating of which were aired in October, 2008. Hint: episode number refers to episode; aired in refers to air_date; October refers to Substr(air_date, 6, 2) = '10': 2008 refers to Substr(air_date, 0, 5) = '2008'",simpson_episodes,"SELECT episode, title, rating FROM Episode WHERE SUBSTR(air_date, 1, 7) LIKE '2008-10%';","CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",212,6.621429920196533,250,['episode']
645,What year saw the greatest number of organizations created on the European continent?,mondial_geo,"SELECT STRFTIME('%Y', T4.Established) FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T2.Country = T3.Code INNER JOIN organization AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Europe' GROUP BY STRFTIME('%Y', T4.Established) ORDER BY COUNT(T4.Name) DESC LIMIT 1","CREATE TABLE `organization` (
  Abbreviation TEXT PRIMARY KEY,
  Name TEXT PRIMARY KEY,
  City TEXT REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Established DATE
);

CREATE TABLE `continent` (
  Name TEXT PRIMARY KEY,
  Area REAL
);

",260,6.738213777542114,250,"['organization', 'continent']"
646,"In which years does the country whose Alpha2Code is 1A have a result of the indicator Adolescent fertility rate? Hint: indicator Adolescent fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'

",world_development_indicators,"SELECT T2.Year FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",189,6.568740606307983,250,"['country', 'indicators']"
647,Please list the territories whose sales are taken in charge by the employees who report to Andrew Fuller. Hint: territories refers to TerritoryDescription;,retail_world,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.ReportsTo = ( SELECT EmployeeID FROM Employees WHERE FirstName = 'Andrew' AND LastName = 'Fuller' ),"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

",167,6.552526473999023,250,"['employees', 'orders']"
648,"What is the percentage of users gave ""5"" to the movie ""Go Go Tales""? Hint: movie ""Go Go Tales"" refers to movie_title = 'Go Go Tales'; gave ""5"" refers to rating_score = 5; percentage refers to DIVIDE(COUNT(rating_score = 5),COUNT(rating_score))*100",movie_platform,SELECT CAST(SUM(CASE WHEN T1.rating_score = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Go Go Tales',"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",194,6.596048831939697,250,"['movies', 'ratings']"
649,How many christmas albums were released in 2004? Hint: album refers to releaseType; groupYear = 2004; tag = 'christmas';,music_tracker,SELECT COUNT(T1.id) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'christmas' AND T1.groupYear = 2004 AND T1.releaseType LIKE 'album',"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

CREATE TABLE `tags` (
  index INTEGER PRIMARY KEY,
  id INTEGER REFERENCES torrents(None),
  tag TEXT
);

",141,6.521661043167114,250,"['torrents', 'tags']"
650,How many suppliers are from UK? Hint: from UK refers to Country = 'UK',retail_world,SELECT COUNT(SupplierID) FROM Suppliers WHERE Country = 'UK',"CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",154,6.532105922698975,250,['suppliers']
651,How many shipments by truck were made? Hint: shipment by truck refers to Name = 'XRQ - TRUCK GROUND';,works_cycles,SELECT COUNT(*) FROM ShipMethod AS T1 INNER JOIN SalesOrderHeader AS T2 USING (ShipMethodID) WHERE T1.Name = 'XRQ - TRUCK GROUND',"CREATE TABLE `ShipMethod` (
  ShipMethodID INTEGER,
  Name TEXT PRIMARY KEY,
  ShipBase REAL,
  ShipRate REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",455,7.21565318107605,250,['ShipMethod']
652,What is the highest possible discount rate for 'Excess Inventory'? Hint: excess inventory refers to Type = 'Excess Inventory'; highest possible discount refers to Max(DiscountPct);,works_cycles,SELECT DiscountPct FROM SpecialOffer WHERE Type = 'Excess Inventory' ORDER BY DiscountPct DESC LIMIT 1,"CREATE TABLE `productcategory` (
  ProductCategoryID INTEGER,
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salesreason` (
  SalesReasonID INTEGER,
  Name TEXT,
  ReasonType TEXT,
  ModifiedDate DATETIME
);

",467,7.245259761810303,250,"['productcategory', 'salesreason']"
653,"Among the menu pages on which the dish ""Chicken gumbo"" had appeared, what is the menu ID of the one with the biggest width? Hint: Chicken gumbo is a name of dish; biggest width refers to MAX(full_width);",menu,SELECT T1.id FROM MenuPage AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.menu_page_id INNER JOIN Dish AS T3 ON T2.dish_id = T3.id WHERE T3.name = 'Chicken gumbo' ORDER BY T1.full_width DESC LIMIT 1,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",164,6.552801609039307,250,"['dish', 'menuitem']"
654,Give the name of the tallest athlete from Sweden. Hint: the tallest athlete refers to id where MAX(height); from Sweden refers to region_name = 'Sweden'; name refers to full_name;,olympics,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Sweden' ORDER BY T3.height DESC LIMIT 1,"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

CREATE TABLE `noc_region` (
  id INTEGER,
  noc TEXT,
  region_name TEXT
);

",195,6.606462478637695,250,"['person_region', 'person', 'noc_region']"
655,"What is the difference between the number of married patients and the number of single patients with diabetes? Hint: difference = SUBTRACT(patients.patient WHERE marital = 'M'), COUNT(patients.patient WHERE marital = 'S') WHERE conditions.DESCRIPTION = 'Diabetes'); married patients refers to marital = 'M'; single patients refers to marital = 'S'; diabetes refers to conditions.DESCRIPTION = 'Diabetes';",synthea,SELECT SUM(CASE WHEN T2.marital = 'M' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.marital = 'S' THEN 1 ELSE 0 END) FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Diabetes',"CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

",244,6.685200452804565,250,"['patients', 'conditions']"
656,"What is the average absence period of a disabled student? Hint: average refers to DIVIDE(SUM(month), COUNT(name))",student_loan,SELECT AVG(T1.month) FROM longest_absense_from_school AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name,"CREATE TABLE `disabled` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",179,6.560780048370361,250,"['disabled', 'longest_absense_from_school']"
657,"For how many times has the scene ""OLIVIA’S house."" appeared in Twelfth Night? Hint: ""OLIVIA’S house.""  refers to chapters.Description = 'OLIVIA’S house.'; Twelfth Night refers to Title = 'Twelfth Night'",shakespeare,SELECT COUNT(T2.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Description = 'OLIVIA’S house.' AND T1.Title = 'Twelfth Night',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",179,6.570168972015381,250,"['works', 'chapters']"
658,List at least 5 students who have payment due and are enlisted in Peace Corps organization? Hint: have payment due refers to bool = 'pos'; organization refers to organ; organ = 'Peace Corps';,student_loan,SELECT T1.name FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T2.name = T1.name WHERE T2.organ = 'peace_corps' AND T1.bool = 'pos' LIMIT 5,"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

",195,6.613723278045654,250,"['enlist', 'no_payment_due']"
659,Which role did Joseph Blair play in the show?,law_episode,SELECT T1.role FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id WHERE T2.name = 'Joseph Blair',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",128,6.482954502105713,250,"['credit', 'person']"
660,List all the users with average star less than 3 stars in 2012 Hint: average star less than 3 stars refers to user_average_stars < 3; in 2012 refers to user_yelping_since_year = 2012,public_review_platform,SELECT user_id FROM Users WHERE user_yelping_since_year = 2012 AND user_average_stars < 3,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",222,6.641920804977417,250,"['reviews', 'users']"
661,"How many days was the fastest shipping of Berglunds snabbkp's order? Hint: Berglunds snabbkp is the CompanyName; fastest shipping = Min(Subtract(ShippedDate, OrderDate))",retail_world,"SELECT datediff(T2.ShippedDate, T2.OrderDate) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CompanyName = 'Berglunds snabbkp' ORDER BY datediff(T2.ShippedDate, T2.OrderDate) LIMIT 1","CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",190,6.573375463485718,250,"['orders', 'suppliers']"
662,How many scenes are there in Act 1 in Twelfth Night? Hint: Twelfth Night refers to Title = 'Twelfth Night',shakespeare,SELECT COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 1 AND T1.Title = 'Twelfth Night',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",148,6.525460481643677,250,"['works', 'chapters']"
663,What is the job title of the newest employee in department 12? Hint: newest employee refers to MAX(StartDate),works_cycles,SELECT T1.JobTitle FROM Employee AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.DepartmentID = 12 ORDER BY T2.StartDate DESC LIMIT 1,"CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `employeeDepartmenthistory` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Employee(None),
  DepartmentID INTEGER PRIMARY KEY REFERENCES Department(None),
  ShiftID INTEGER PRIMARY KEY REFERENCES Shift(None),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ModifiedDate DATETIME
);

",450,7.202344655990601,250,"['employee', 'employeeDepartmenthistory']"
664,"State the male population for all zip code which were under the Berlin, NH CBSA. Hint: ""Berlin, NH"" is the CBSA_name",address,"SELECT T2.male_population FROM CBSA AS T1 INNER JOIN zip_data AS T2 ON T1.CBSA = T2.CBSA WHERE T1.CBSA_name = 'Berlin, NH' GROUP BY T2.male_population","CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `cbsa` (
  CBSA INTEGER,
  CBSA_name TEXT,
  CBSA_type TEXT
);

",168,6.548735618591309,250,"['zip_data', 'state', 'cbsa']"
665,"Among the universities in Australia, how many of them have more than 15000 students in 2011? Hint: in 2011 refers to year 2011; have more than 15000 students refers to num_students > 15000; in Australia refers to country_name = 'Australia';",university,SELECT COUNT(*) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'Australia' AND T2.year = 2011 AND T2.num_students > 15000,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

",210,6.620037078857422,250,"['university', 'country']"
666,List all the streets with more than 10 restaurants in Alameda county. Hint: street refers to street_name; more than 10 restaurants refers to count(id_restaurant) > 10,restaurant,SELECT T2.street_name FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city WHERE T1.county = 'alameda county' GROUP BY T2.street_name HAVING COUNT(T2.id_restaurant) > 10,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",151,6.526954412460327,250,"['location', 'generalinfo']"
667,"Among the customers who have rented the film ACADEMY DINOSAUR, how many of them are active? Hint: ""ACADEMY DINOSAUR"" is the title of film; customer refers to customer_id; active refers to active = 1",movie_3,SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.active = 1 AND T4.title = 'ACADEMY DINOSAUR',"CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",222,6.635585784912109,250,"['rental', 'film', 'customer']"
668,"Under the conference name of MICRO, calculate how many more paper is needed to published in 1971 to 1980 in average by yearly to get equivalent to the number of paper from 1991 to 2000. Write down the title and author name of the paper that were actually published during 1971 to 1980 with the conference name with MICRO. Hint: ""MICRO"" is the ShortName of conference; in 1971 to 1980 refers to Year BETWEEN '1971' AND '1980'; in 1991 to 2000 refers to Year BETWEEN '1991' AND '2000': Average needed paper = Subtract (Count(PaperId(Year BETWEEN '1991' AND '2000')), Count(PaperId(Year BETWEEN '1971' AND '1980')))/10",authors,"SELECT T2.title, T3.name, T1.FullName FROM Conference AS T1 INNER JOIN Paper AS T2 ON T1.id = T2.ConferenceId INNER JOIN PaperAuthor AS T3 ON T1.id = T3.PaperId WHERE T1.ShortName = 'MICRO' AND T2.Year BETWEEN '1971' AND '1980'","CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `conference` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",345,6.923899173736572,250,"['paper', 'conference']"
669,What is the name of the team that got more wins than loses in the Stanley Cup finals in 1917? Hint: more wins than loses refers to W>L; year = 1917;,hockey,SELECT T2.name FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = '1917' AND T1.W > T1.L,"CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

CREATE TABLE `teamvsteam` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year) REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  oppID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT
);

",259,6.737515211105347,250,"['teams', 'teamvsteam']"
670,Where was the destination city of shipment no.1701? Hint: shipment no. 1701 refers to ship_id = 1701; destination city refers to city_name,shipping,SELECT T2.city_name FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id WHERE T1.ship_id = '1701',"CREATE TABLE `city` (
  city_id INTEGER,
  city_name TEXT,
  state TEXT,
  population INTEGER,
  area REAL
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",156,6.53690242767334,250,"['city', 'shipment']"
671,Add the number of businesses that indicate their home address as their address and those whose address corresponds to the shipping address. Hint: their home address as their address refers to AddressTypeID = 2; address corresponds to the shipping address refers to AddressTypeID = 5,works_cycles,"SELECT SUM(CASE WHEN T2.Name = 'Home' THEN 1 ELSE 0 END) , SUM(CASE WHEN T2.Name = 'Shipping' THEN 1 ELSE 0 END) FROM BusinessEntityAddress AS T1 INNER JOIN AddressType AS T2 ON T1.AddressTypeID = T2.AddressTypeID","CREATE TABLE `businessentityaddress` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES BusinessEntity(BusinessEntityID),
  AddressID INTEGER PRIMARY KEY REFERENCES Address(AddressID),
  AddressTypeID INTEGER PRIMARY KEY REFERENCES AddressType(AddressTypeID),
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",476,7.263904333114624,250,['businessentityaddress']
672,"Among the films that the customer RUTH MARTINEZ has rented, how many of them are released in 2006? Hint: release in 2006 refers to release_year = 2006",movie_3,SELECT COUNT(T1.customer_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T4.release_year = 2006 AND T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ',"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `inventory` (
  inventory_id INTEGER,
  film_id INTEGER REFERENCES film(None),
  store_id INTEGER REFERENCES store(None),
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",212,6.623323678970337,250,"['film', 'inventory', 'rental', 'customer']"
673,Find out the language ID of the movie with the highest popularity. Hint: highest popularity refers to max(popularity),movies_4,SELECT T2.language_id FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.popularity DESC LIMIT 1,"CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

",204,6.613276720046997,250,['movie']
674,What is the average sentiment polarity score of the Cooking Fever app? Indicate the age group that the app is targeted at. Hint: average sentiment polarity score = AVG(Sentiment_Polarity); age group the app is target at refers to Content Rating;,app_store,"SELECT AVG(T2.Sentiment_Polarity), T1.""Content Rating"" FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Cooking Fever'","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

",163,6.543099880218506,250,['playstore']
675,"What are the total products value shipped to Brazil by Speedy Express Company? Hint: shipped to Brazil refers to ShipCountry = 'Brazil'; by Speedy Express Company refers to CompanyName = 'Speedy Express'; total products value refers to sum(MULTIPLY(UnitPrice, Quantity))",retail_world,SELECT SUM(T2.Quantity * T2.UnitPrice) FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Shippers AS T3 ON T1.ShipVia = T3.ShipperID WHERE T3.CompanyName = 'Speedy Express' AND T1.ShipCountry = 'Brazil',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",200,6.608805418014526,250,"['orders', 'shippers', 'suppliers']"
676,Tell the Id number of the business with the most number of violations. Hint: Id number for that business refers to business_id; the most number of violations refers to MAX(COUNT(business_id));,food_inspection,SELECT business_id FROM violations GROUP BY business_id ORDER BY COUNT(business_id) DESC LIMIT 1,"CREATE TABLE `violations` (
  business_id INTEGER REFERENCES businesses(business_id),
  date DATE,
  violation_type_id TEXT,
  risk_category TEXT,
  description TEXT
);

",153,6.533952236175537,250,['violations']
677,"Name the podcast title, rating and review content created by '76A4C24B6038145'. Hint: ""76A4C24B6038145"" is author_id; review content refers to content",music_platform_2,"SELECT T2.title, T2.rating, T2.content FROM podcasts AS T1 INNER JOIN reviews AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.author_id = '76A4C24B6038145'","CREATE TABLE `reviews` (
  podcast_id TEXT REFERENCES podcasts(None),
  title TEXT,
  content TEXT,
  rating INTEGER,
  author_id TEXT,
  created_at TEXT
);

CREATE TABLE `podcasts` (
  podcast_id TEXT PRIMARY KEY,
  itunes_id INTEGER,
  slug TEXT,
  itunes_url TEXT,
  title TEXT
);

",169,6.547983884811401,250,"['reviews', 'podcasts']"
678,"Give the full name of employee who handled the order id 10280. Hint: full name refers to FirstName, LastName",retail_world,"SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10280","CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

",165,6.546761751174927,250,"['employees', 'orders']"
679,Please list the IDs of the events happened on all the vivo devices. Hint: IDs of the events refers to event_id; vivo devices refers to phone_brand = 'vivo';,talkingdata,SELECT T2.event_id FROM phone_brand_device_model2 AS T1 INNER JOIN events AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'vivo',"CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",213,6.627288818359375,250,"['events', 'phone_brand_device_model2']"
680,Please list the names of the top three movies in the number comments related to the critic made by the user rating the movie. Hint: number of comments related to the critic made by the user rating the movie refers to critic_comments; top movie refers to Max(critic_comments);,movie_platform,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id ORDER BY T1.critic_comments DESC LIMIT 3,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `ratings_users` (
  user_id INTEGER REFERENCES lists_users(user_id),
  rating_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",175,6.557874441146851,250,"['movies', 'ratings', 'ratings_users']"
681,"In Abadia, what is the word id of the of the Catalan language that appeared the highest amount of times? Indicate the how many times did they said word id appeared. Hint: Abadia refers to title = 'Abadia'; word id refers to wid; the highest amount of times refers to max(occurrences)",language_corpus,"SELECT T2.wid, T2.occurrences FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.title = 'Abadia' ORDER BY T2.occurrences DESC LIMIT 1","CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",198,6.607292890548706,250,"['words', 'pages', 'pages_words']"
682,What is the review of the restaurant at 8440 Murray Ave? Hint: 8440 Murray Ave refers to street_num = 8440 and street_name = 'murray ave',restaurant,SELECT T2.review FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'murray ave' AND T1.street_num = 8440,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

",152,6.53727650642395,250,['location']
683,How many male patients have prediabetes condition? Hint: male refers to gender = 'M'; prediabetes condition refers to conditions.DESCRIPTION = 'Prediabetes';,synthea,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 WHERE T2.DESCRIPTION = 'Prediabetes' AND T1.gender = 'M',"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",186,6.571617603302002,250,"['conditions', 'patients']"
684,What is the long title of the work with the highest number of scenes in act 1? Hint: highest number of scenes refers to max(count(Scene)),shakespeare,SELECT T2.LongTitle FROM chapters AS T1 INNER JOIN works AS T2 ON T1.work_id = T2.id WHERE T1.Act = 1 ORDER BY T1.Scene DESC LIMIT 1,"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",151,6.5380706787109375,250,"['works', 'chapters']"
685,How many customers in the machinery segment are in debt? Hint: machinery segment refers to c_mktsegment = 'MACHINERY'; in debt refers to c_acctbal < 0,retails,SELECT COUNT(c_custkey) FROM customer WHERE c_acctbal < 0 AND c_mktsegment = 'MACHINERY',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",165,6.550510406494141,250,"['customer', 'nation']"
686,"How many times did the word pair ""i"" and ""a"" appeared in the Cataln language/page? Hint: times appeared refers to occurrences; word pair ""i"" and ""a"" refers to w1st.word = 'i' w2st.word = 'a'",language_corpus,SELECT SUM(occurrences) FROM biwords WHERE w1st = 86 AND w2nd = 109,"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",188,6.5787436962127686,250,"['words', 'pages', 'pages_words']"
687,Which continent was Michael Preston born on? Hint: continent refers to birth_country,law_episode,SELECT birth_country FROM Person WHERE name = 'Michael Preston',"CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",136,6.519832372665405,250,['person']
688,"Which song is associated with the most popular Disney movie in 1970s? Hint: the most popular movie refers to movie_title where MAX(total_gross); in 1970s refers to (cast(SUBSTR(release_date, instr(release_date, ', ') + 1) as int) between 1970 and 1979);",disney,"SELECT T2.song FROM movies_total_gross AS T1 INNER JOIN characters AS T2 ON T1.movie_title = T2.movie_title WHERE CAST(SUBSTR(T1.release_date, INSTR(T1.release_date, ', ') + 1) AS int) BETWEEN 1970 AND 1979 ORDER BY CAST(REPLACE(SUBSTR(T1.total_gross, 2), ',', '') AS float) DESC LIMIT 1","CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

",206,6.6195995807647705,250,['movies_total_gross']
689,Identify all restaurants in Contra Costa County by id.,restaurant,SELECT T1.id_restaurant FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'contra costa county',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `geographic` (
  city TEXT PRIMARY KEY,
  county TEXT,
  region TEXT
);

",117,6.465383052825928,250,"['location', 'geographic']"
690,What is the detailed position of the store which has order SO - 000115? Hint: Latitude and Longitude coordinates can be used to identify the detailed position of stores; store refers to StoreID WHERE OrderNumber = 'SO - 000115';,regional_sales,"SELECT T2.Latitude, T2.Longitude FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.OrderNumber = 'SO - 000115'","CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",183,6.569545269012451,250,"['store locations', 'sales orders']"
691,How many orders were shipped to GREAL via United Package? Hint: GREAL refers to CustomerID = 'GREAL'; via United Package refers to CompanyName = 'United Package',retail_world,SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.CustomerID = 'GREAL' AND T2.CompanyName = 'United Package',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",174,6.553599119186401,250,"['orders', 'shippers']"
692,"List down the name of dishes from menu created in April. Hint: created in April refers to SUBSTR(created_at, 7, 1) = '4';",menu,"SELECT T2.name FROM MenuItem AS T1 INNER JOIN Dish AS T2 ON T2.id = T1.dish_id WHERE SUBSTR(T1.created_at, 7, 1) = '4'","CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

",147,6.530452728271484,250,"['menu', 'dish']"
693,"Which member of the faculty are teaching the most courses and what is his/her general course level? Hint: member of the faculty refers to hasPosition <> 0, most courses refers to max(count(course.course_id))",computer_student,"SELECT T1.p_id, T3.courseLevel FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id GROUP BY T1.p_id ORDER BY COUNT(T2.course_id) DESC LIMIT 1","CREATE TABLE `course` (
  course_id INTEGER,
  courseLevel TEXT
);

CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

CREATE TABLE `person` (
  p_id INTEGER,
  professor INTEGER,
  student INTEGER,
  hasPosition TEXT,
  inPhase TEXT,
  yearsInProgram TEXT
);

",159,6.539695501327515,250,"['course', 'taughtby', 'person']"
694,"How many scenes are there in the 5th act of ""History of Henry VIII""? Hint: 5th act refers to Act = 5; ""History of Henry VIII"" refers to LongTitle = 'History of Henry VIII'",shakespeare,SELECT SUM(T2.Scene) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 5 AND T1.LongTitle = 'History of Henry VIII',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",164,6.544795036315918,250,"['works', 'chapters']"
695,"When did the first match that score more than 10 goals happen? Hint: score more than 10 goals refers to SUM(FTHG, FTAG)>10, which are short names for Final-time Home-team Goals and Final-time Away-team Goals; the first means the earliest and refers to MIN(Date);",european_football_1,SELECT MIN(Date) FROM matchs WHERE FTHG + FTAG > 10,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

",178,6.564018249511719,250,['matchs']
696,What is the total value of Argentum coined traded in the past 24 hours on 2016/10/11. Hint: total value in the past 24 hours refers to volume_24h; on 11/10/16 refers to date = '2016-11-10',coinmarketcap,SELECT T2.volume_24h FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Argentum' AND T2.date = '2016-10-11',"CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",180,6.569645166397095,250,"['historical', 'coins']"
697,"Which menu page has a bigger width, page 1 of ""Zentral Theater Terrace"" or page 1 of ""Young's Hotel""? Hint: if SUM(full_width where page_number = 1 AND menu.name = 'Zentral Theater Terrace') > SUM(full_width where page_number = 1 AND menu.name = 'Young''s Hotel'), it means Zentral Theater Terrace menu page is bigger than Young's Hotel; if SUM(full_width WHERE page_number = 1 AND menu.name = 'Young''s Hotel') < SUM(full_width WHERE page_number = 1 AND menu.name = 'Zentral Theater Terrace'), it means Young's Hotel menu page is bigger than Zentral Theater Terrace;",menu,SELECT CASE WHEN SUM(CASE WHEN T1.name = 'Zentral Theater Terrace' THEN T2.full_width ELSE 0 END) - SUM(CASE WHEN T1.name = 'Young''s Hotel' THEN T2.full_width ELSE 0 END) > 0 THEN 'Zentral Theater Terrace' ELSE 'Young''s Hotel' END FROM Menu AS T1 INNER JOIN MenuPage AS T2 ON T1.id = T2.menu_id,"CREATE TABLE `menuPage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",283,6.790389776229858,250,"['menuPage', 'menu']"
698,How many Catalan language wikipedia pages have between 1000 to 2000 number of different words? Hint: between 1000 to 2000 number of different words refers to words BETWEEN 1000 AND 2000,language_corpus,SELECT COUNT(pid) FROM pages WHERE words BETWEEN 1000 AND 2000,"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",188,6.577482223510742,250,"['pages', 'words', 'pages_words']"
699,"Who is the driver that transported the lightest weight of shipment? Provide the full name of the driver. Hint: lightest weight refers to Min(weight); full name refers to first_name, last_name",shipping,"SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id ORDER BY T1.weight ASC LIMIT 1","CREATE TABLE `driver` (
  driver_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip_code INTEGER,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",158,6.536740064620972,250,"['driver', 'shipment']"
700,Which was the dominant hand for the goaltender who played 32 games for QUN in 1973? Give the full name. Hint: the dominant hand refers to shootCatch; year = 1973; tmID = 'QUN'; played 32 games refers to GP = 32;,hockey,"SELECT T2.shootCatch, T2.firstName, T2.lastName FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID AND T1.year = 1973 WHERE T1.tmID = 'QUN' AND T1.GP = 32","CREATE TABLE `goaliessc` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP INTEGER,
  Min INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  SHO INTEGER,
  GA INTEGER
);

CREATE TABLE `abbrev` (
  Type TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Fullname TEXT
);

",282,6.78235125541687,250,"['goaliessc', 'abbrev']"
701,What is the most populated city of the 12th highest density country? Hint: Population density = Population / area,mondial_geo,"SELECT T2.Name FROM country AS T1 INNER JOIN city AS T2 ON T1.Code = T2.Country WHERE T1.Name = ( SELECT Name FROM country ORDER BY CAST(Population AS REAL) / Area LIMIT 11, 1 ) ORDER BY T2.Population DESC LIMIT 1","CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

",274,6.771136522293091,250,"['country', 'city']"
702,Please list the names of all the awards won by the crew member whose nickname is Doofus. Hint: award won refers to result = 'Winner',simpson_episodes,SELECT T2.award FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T1.nickname = 'Doofus' AND T2.result = 'Winner';,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",157,6.532920598983765,250,"['award', 'credit', 'person']"
703,What is the current official Youtube username of Chris Van Hollen? Hint: Youtube username refers to youtube; Chris Van Hollen is an official_full_name,legislator,SELECT T2.youtube FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.official_full_name = 'Chris Van Hollen',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",155,6.531814098358154,250,"['historical', 'historical-terms', 'social-media']"
704,What is the average level employees working as Managing Editor are at? How many levels are there between the average level and the highest level? Hint: Managing Editor is a job description which refers to job_desc; job level refers to job_lvl; highest level job refers to max_lvl; levels between the average level and the highest level = SUBTRACT(max_lvl; AVG(job_lvl)),book_publishing_company,"SELECT AVG(T2.job_lvl), T1.max_lvl - AVG(T2.job_lvl) FROM jobs AS T1 INNER JOIN employee AS T2 ON T1.job_id = T2.job_id WHERE T1.job_desc = 'Managing Editor' GROUP BY T2.job_id, T1.max_lvl","CREATE TABLE `employee` (
  emp_id TEXT PRIMARY KEY,
  fname TEXT,
  minit TEXT,
  lname TEXT,
  job_id INTEGER REFERENCES jobs(job_id),
  job_lvl INTEGER,
  pub_id TEXT REFERENCES publishers(pub_id),
  hire_date DATETIME
);

",232,6.6587536334991455,250,['employee']
705,"What is the maximum salary of position ""Trainer""? Hint: maximum salary refers to maxsalary; Trainee is a positiontitle",human_resources,SELECT maxsalary FROM position WHERE positiontitle = 'Trainee',"CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

",134,6.511653184890747,250,['position']
706,Which legislators are woman? Hint: woman refers to gender_bio = 'F';,legislator,"SELECT first_name, last_name FROM historical WHERE gender_bio = 'F'","CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",137,6.514322280883789,250,"['historical', 'historical-terms']"
707,"How many matches were held at the venue named ""Newlands""? Hint: the venue named ""Newlands"" refers to Venue_Name = 'Newlands'",soccer_2016,SELECT SUM(CASE WHEN T2.Venue_Name = 'Newlands' THEN 1 ELSE 0 END) FROM Match AS T1 INNER JOIN Venue AS T2 ON T2.Venue_Id = T1.Venue_Id,"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `venue` (
  Venue_Id INTEGER,
  Venue_Name TEXT,
  City_Id INTEGER REFERENCES City(City_Id)
);

",235,6.6715943813323975,250,"['match', 'venue']"
708,"What is the gender of student1000? Hint: student name appear in Male table means student is a male, student does not appear in Male table means student is a female",student_loan,"SELECT IIF(T.result = 0, 'female', 'male') AS re FROM ( SELECT COUNT(name) AS result FROM male WHERE name = 'studenT1000' ) T","CREATE TABLE `person` (
  name TEXT PRIMARY KEY
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",189,6.574119567871094,250,"['person', 'male']"
709,"How many orders did Marcelia Goering place in 2021 that uses the Priority Shipping method? Hint: in 2021 refers to substr(order_date, 1, 4) = '2021'; priority shipping method refers to method_name = 'Priority'",books,"SELECT COUNT(*) FROM customer AS T1 INNER JOIN cust_order AS T2 ON T1.customer_id = T2.customer_id INNER JOIN shipping_method AS T3 ON T3.method_id = T2.shipping_method_id WHERE T1.first_name = 'Marcelia' AND T1.last_name = 'Goering' AND STRFTIME('%Y', T2.order_date) = '2021' AND T3.method_name = 'Priority'","CREATE TABLE `order_history` (
  history_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  status_id INTEGER REFERENCES order_status(None),
  status_date DATETIME
);

CREATE TABLE `cust_order` (
  order_id INTEGER,
  order_date DATETIME,
  customer_id INTEGER REFERENCES customer(None),
  shipping_method_id INTEGER REFERENCES shipping_method(None),
  dest_address_id INTEGER REFERENCES address(None)
);

CREATE TABLE `shipping_method` (
  method_id INTEGER,
  method_name TEXT,
  cost REAL
);

",232,6.665045499801636,250,"['order_history', 'cust_order', 'shipping_method']"
710,"Calculate the percentage of the domestic violence cases handled by Christopher Taliaferro. Among them, list report numbers of cases that happened in the bank. Hint: domestic violence refers to domestic = 'TRUE'; report number refers to report_no; in the bank refers to location_description = 'BANK'; percentage = divide(count(report_no where domestic = 'TRUE'), count(report_no)) * 100%",chicago_crime,"SELECT CAST(COUNT(CASE WHEN T1.domestic = 'TRUE' THEN T1.report_no END) AS REAL) * 100 / COUNT(T1.report_no), COUNT(CASE WHEN T1.domestic = 'TRUE' AND T1.location_description = 'BANK' THEN T1.report_no END) AS ""number"" FROM Crime AS T1 INNER JOIN Ward AS T2 ON T2.ward_no = T1.ward_no WHERE T2.alderman_first_name = 'Christopher' AND T2.alderman_last_name = 'Taliaferro'","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `fbi_code` (
  fbi_code_no TEXT PRIMARY KEY,
  title TEXT,
  description TEXT,
  crime_against TEXT
);

",221,6.638920783996582,250,"['crime', 'fbi_code']"
711,"Give the percentage of ""Automotive"" businesses among all the Yelp businesses. Hint: automotive businesses refers to category_name = 'Automotive'; percentage = MULTIPLY(DIVIDE(SUM(category_name = 'Automotive'), COUNT(business_id)), 1.0);",public_review_platform,"SELECT CAST(SUM(CASE WHEN T2.category_name LIKE 'Automotive' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) AS ""percentage"" FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id","CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",229,6.660075664520264,250,"['business_categories', 'categories']"
712,"Among customers named Kate, who has the highest quantity? Hint: highest quantity refers to MAX(Quantity);",sales,"SELECT T2.FirstName, T2.LastName FROM Sales AS T1 INNER JOIN Customers AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.FirstName = 'Kate' ORDER BY T1.Quantity DESC LIMIT 1","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",134,6.513519763946533,250,"['sales', 'customers']"
713,"What percentage of authors of the paper about Charged particle multiplicity are affiliated with INFN? Hint: about Charged particle multiplicity refers to Title which contains 'Charged particle multiplicity'; affiliated with INFN refers to Affiliation LIKE '%INFN%' ; percentage refers to DIVIDE(COUNT(Affiliation LIKE '%INFN%' ), COUNT(AuthorId)) * 100%",authors,SELECT CAST((SUM(CASE WHEN T1.Affiliation LIKE '%INFN%' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(T2.Id) FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T2.Title LIKE '%Charged particle multiplicity%',"CREATE TABLE `paperAuthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",206,6.61769437789917,250,"['paperAuthor', 'author']"
714,How many Italian regions are bordered by the Mediterranean Sea? How deep is the Mediterranean Sea? Hint: Reigion refers to province,mondial_geo,"SELECT COUNT(DISTINCT T2.province), T3.Depth FROM country AS T1 INNER JOIN located AS T2 ON T1.Code = T2.Country INNER JOIN sea AS T3 ON T3.Name = T2.Sea WHERE T1.Code = 'I' AND T3.Name = 'Mediterranean Sea' GROUP BY T3.Depth","CREATE TABLE `sea` (
  Name TEXT PRIMARY KEY,
  Depth REAL
);

CREATE TABLE `borders` (
  Country1 TEXT PRIMARY KEY REFERENCES country(None),
  Country2 TEXT PRIMARY KEY REFERENCES country(None),
  Length REAL
);

CREATE TABLE `religion` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Name TEXT PRIMARY KEY,
  Percentage REAL
);

CREATE TABLE `province` (
  Name TEXT PRIMARY KEY,
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population INTEGER,
  Area REAL,
  Capital TEXT,
  CapProv TEXT
);

",275,6.7690958976745605,250,"['sea', 'borders', 'religion', 'province']"
715,How many deserts are not located in a single country? Name them.,mondial_geo,SELECT Desert FROM geo_desert GROUP BY Desert HAVING COUNT(DISTINCT Country) > 1,"CREATE TABLE `desert` (
  Name TEXT PRIMARY KEY,
  Area REAL,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `located` (
  City TEXT REFERENCES city(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  River TEXT REFERENCES river(None),
  Lake TEXT REFERENCES lake(None),
  Sea TEXT REFERENCES sea(None)
);

CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",261,6.749675512313843,250,"['desert', 'located', 'country']"
716,"What is the correlation between the review starts and business stars? Hint: highest review count refers to review_count = 'Uber'; average business review stars = Divide (Sum(review_stars), Count(user_id))",public_review_platform,SELECT CAST(SUM(T2.review_stars) AS REAL) / COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",209,6.620303630828857,250,"['reviews', 'business']"
717,How many universities got less than 50 scores under ranking criteria ID 6 in 2011? Hint: in 2011 refers to year 2011; less than 50 scores refers to score < 50;,university,SELECT COUNT(*) FROM university_ranking_year WHERE ranking_criteria_id = 6 AND year = 2011 AND score < 50,"CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

",183,6.567678928375244,250,['university_ranking_year']
718,"On image no. 99 identify the percentage of objects that are described as white. Hint: image no. 99 refers to IMG_ID = 99; described as white refers to ATT_CLASS = 'white'; percentage = divide(count(OBJ_SAMPLE_ID) where ATT_CLASS = 'white', count(OBJ_SAMPLE_ID)) as percentage",image_and_language,SELECT CAST(SUM(CASE WHEN T2.ATT_CLASS = 'white' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(OBJ_SAMPLE_ID) FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 99,"CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `att_classes` (
  ATT_CLASS_ID INTEGER,
  ATT_CLASS TEXT
);

",232,6.6685707569122314,250,"['img_obj', 'att_classes']"
719,List all the country in East Asia & Pacific region that have more than 2000000 urban population in 1970. Hint: country refers to LongName; have more than 2000000 urban population refers to value where indicatorname = 'Urban population'>2000000; in 1970 refers to year = '1970',world_development_indicators,SELECT DISTINCT T1.CountryCode FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Year = 1970 AND T1.Region = 'East Asia & Pacific' AND T2.Value > 2000000 AND t2.indicatorname = 'Urban population',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",207,6.617722749710083,250,"['country', 'indicators']"
720,"What is the average number of inspections done by the top 5 employees with the highest salary? List the names of the said employees. Hint: the highest salary refers to max(salary); sanitarian refers to title = 'Sanitarian'; name refers to first_name, last_name; average number = divide(sum(inspection_id), 5)",food_inspection_2,"SELECT CAST(COUNT(DISTINCT T2.inspection_id) AS REAL) / 5, T1.first_name, T1.last_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T1.title = 'Sanitarian' ORDER BY T1.salary DESC LIMIT 5","CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

",195,6.6002516746521,250,"['employee', 'inspection']"
721,What is the average review number for application with 5 rating? Hint: average review = AVG(Review); application refers to app; Rating = 5;,app_store,SELECT AVG(Reviews) FROM playstore WHERE Rating = 5,"CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",138,6.52001953125,250,"['playstore', 'user_reviews']"
722,"Indicate the last number of each street. Hint: street refers to street_name; last number of each street refers to Substr (street_number, -1)",books,SELECT street_number FROM address,"CREATE TABLE `address` (
  address_id INTEGER,
  street_number TEXT,
  street_name TEXT,
  city TEXT,
  country_id INTEGER REFERENCES country(country_id)
);

",202,6.614197254180908,250,['address']
723,Provide the total number of the male users that use OPPO as their phone brand. Hint: male refers to gender = 'Male';,talkingdata,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' AND T1.gender = 'M',"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

CREATE TABLE `gender_age_train` (
  device_id INTEGER,
  gender TEXT,
  age INTEGER,
  group TEXT
);

",200,6.604868173599243,250,"['phone_brand_device_model2', 'gender_age_train']"
724,"What is the journal's short and full names that feature papers on the ""Materials"" topic? Hint: papers on the ""Materials"" topic refers to Keyword = 'Materials'",authors,"SELECT T2.ShortName, T2.FullName FROM Paper AS T1 INNER JOIN Journal AS T2 ON T1.JournalId = T2.Id WHERE T1.Keyword LIKE '%Materials%'","CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",155,6.536038398742676,250,"['journal', 'paper']"
725,How many directors with average revenue of 4 have made either action or adventure films?,movielens,SELECT COUNT(T1.directorid) FROM directors AS T1 INNER JOIN movies2directors AS T2 ON T1.directorid = T2.directorid WHERE T1.avg_revenue = 4 AND (T2.genre = 'Adventure' OR T2.genre = 'Action'),"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2directors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  directorid INTEGER PRIMARY KEY REFERENCES directors(None),
  genre TEXT
);

",145,6.528973817825317,250,"['movies', 'movies2directors']"
726,Provide the number of airplanes that landed on Oakland Airport on 2018/8/7. Hint: landed on refers to DEST; Oakland Airport refers to Description which contains 'Oakland'; on 2018/8/7 refers to FL_DATE = '2018/8/7';,airline,SELECT SUM(CASE WHEN T1.Description LIKE '%Oakland%' THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/7',"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",181,6.566518783569336,250,['airlines']
727,"What is the most requested item under the resource type ""Supplies"" for projects whose main subject area is Literacy & Language? Hint: main subject area refers to primary_focus_area = 'Literacy & Language'; resource type supplies refers to project_resource_type = 'Supplies'; most requested item refers to Max(item_quantity);",donor,SELECT T1.item_name FROM resources AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.primary_focus_area = 'Literacy & Language' AND T1.project_resource_type = 'Supplies' ORDER BY T1.item_quantity DESC LIMIT 1,"CREATE TABLE `resources` (
  resourceid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  vendorid INTEGER,
  vendor_name TEXT,
  project_resource_type TEXT,
  item_name TEXT,
  item_number TEXT,
  item_unit_price REAL,
  item_quantity INTEGER
);

",188,6.579945802688599,250,"['projects', 'primary_focus_area', 'resource_type', 'item_quantity']"
728,What is the website address of the institution with the highest number of White degree-seeking students at 2-year institutions in 2008? Hint: website address refers to site; White refers to race = 'W'; degree-seeking students at 2-year institutions refers to cohort = '2y all'; in 2008 refers to year = '2008';,college_completion,SELECT T1.site FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T2.race = 'W' AND T2.cohort = '2y all' AND T2.year = 2008 ORDER BY T2.grad_cohort DESC LIMIT 1,"CREATE TABLE `institution_details` (
  unitid INTEGER,
  chronname TEXT,
  city TEXT,
  state TEXT,
  level TEXT,
  control TEXT,
  basic TEXT,
  hbcu TEXT,
  flagship TEXT,
  long_x REAL,
  lat_y REAL,
  site TEXT,
  student_count INTEGER,
  awards_per_value REAL,
  awards_per_state_value REAL,
  awards_per_natl_value REAL,
  exp_award_value INTEGER,
  exp_award_state_value INTEGER,
  exp_award_natl_value INTEGER,
  exp_award_percentile INTEGER,
  ft_pct REAL,
  fte_value INTEGER,
  fte_percentile INTEGER,
  med_sat_value TEXT,
  med_sat_percentile TEXT,
  aid_value INTEGER,
  aid_percentile INTEGER,
  endow_value TEXT,
  endow_percentile TEXT,
  grad_100_value REAL,
  grad_100_percentile INTEGER,
  grad_150_value REAL,
  grad_150_percentile INTEGER,
  pell_value REAL,
  pell_percentile INTEGER,
  retain_value REAL,
  retain_percentile INTEGER,
  ft_fac_value REAL,
  ft_fac_percentile INTEGER,
  vsa_year TEXT,
  vsa_grad_after4_first TEXT,
  vsa_grad_elsewhere_after4_first TEXT,
  vsa_enroll_after4_first TEXT,
  vsa_enroll_elsewhere_after4_first TEXT,
  vsa_grad_after6_first TEXT,
  vsa_grad_elsewhere_after6_first TEXT,
  vsa_enroll_after6_first TEXT,
  vsa_enroll_elsewhere_after6_first TEXT,
  vsa_grad_after4_transfer TEXT,
  vsa_grad_elsewhere_after4_transfer TEXT,
  vsa_enroll_after4_transfer TEXT,
  vsa_enroll_elsewhere_after4_transfer TEXT,
  vsa_grad_after6_transfer TEXT,
  vsa_grad_elsewhere_after6_transfer TEXT,
  vsa_enroll_after6_transfer TEXT,
  vsa_enroll_elsewhere_after6_transfer TEXT,
  similar TEXT,
  state_sector_ct INTEGER,
  carnegie_ct INTEGER,
  counted_pct TEXT,
  nicknames TEXT,
  cohort_size INTEGER
);

CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",210,6.622127056121826,250,"['institution_details', 'institution_grads']"
729,Which geographic area does the city with the second lowest tax rate belongs to? Indicate the name of the state or province as well. Hint: geographic area to which the city belong refers to Group;,works_cycles,"SELECT T3.'Group', T2.Name FROM SalesTaxRate AS T1 INNER JOIN StateProvince AS T2 ON T1.StateProvinceID = T2.StateProvinceID INNER JOIN SalesTerritory AS T3 ON T2.TerritoryID = T3.TerritoryID ORDER BY T1.TaxRate LIMIT 1, 1","CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salesterritory` (
  TerritoryID INTEGER,
  Name TEXT PRIMARY KEY,
  CountryRegionCode TEXT REFERENCES CountryRegion(CountryRegionCode),
  Group TEXT,
  SalesYTD REAL,
  SalesLastYear REAL,
  CostYTD REAL,
  CostLastYear REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salesterritoryhistory` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES SalesPerson(BusinessEntityID),
  TerritoryID INTEGER PRIMARY KEY REFERENCES SalesTerritory(TerritoryID),
  StartDate DATETIME PRIMARY KEY,
  EndDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",466,7.235807418823242,250,"['salesorderheader', 'salesterritory', 'salesterritoryhistory']"
730,Compare the number of inspections under toxic items and no-smoking regulations. Hint: under toxic items refers to category = 'Toxic Items'; no-smoking regulations refers to category = 'No Smoking Regulations',food_inspection_2,"SELECT COUNT(CASE WHEN T2.category = 'Toxic Items' THEN T1.inspection_id END) AS Tox_nums , COUNT(CASE WHEN T2.category = 'No Smoking Regulations' THEN T1.inspection_id END) AS NosmoNums FROM violation AS T1 INNER JOIN inspection_point AS T2 ON T1.point_id = T2.point_id","CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",166,6.543985366821289,250,"['violation', 'establishment']"
731,How many users who are under 30 years old use device model of Galaxy Note 2? Hint: under 30 refers to age < 30;,talkingdata,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Galaxy Note 2' AND T1.age < 30,"CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",204,6.609818935394287,250,"['gender_age', 'phone_brand_device_model2']"
732,"What are the affiliations of the author ""Mark A. Musen"" written on and off paper? Hint: Mark A. Musen refer to Author.Name;",authors,SELECT T1.Affiliation FROM PaperAuthor AS T1 INNER JOIN Author AS T2 ON T1.AuthorId = T2.Id WHERE T2.Name = 'Mark A. Musen',"CREATE TABLE `paperAuthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",149,6.532777309417725,250,"['paperAuthor', 'author']"
733,"Among the active employees, how many of them have a courtesy title of ""Mr""? Hint: active status of employees refers to CurrentFlag = 1;",works_cycles,SELECT COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.CurrentFlag = 1 AND T2.Title = 'Mr.',"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",454,7.205184698104858,250,['person']
734,"Name the top five titles that sold more than average and list them in descending order of the number of sales in California stores? Hint: qty is abbreviation for quantity; sold more than average refers to qty > AVG(qty); california refers to state = 'CA""",book_publishing_company,SELECT T1.title FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id INNER JOIN publishers AS T3 ON T1.pub_id = T3.pub_id WHERE T2.qty > ( SELECT CAST(SUM(qty) AS REAL) / COUNT(title_id) FROM sales ) AND T3.state = 'CA' ORDER BY T2.qty DESC LIMIT 5,"CREATE TABLE `sales` (
  stor_id TEXT PRIMARY KEY REFERENCES stores(stor_id),
  ord_num TEXT PRIMARY KEY,
  ord_date DATETIME,
  qty INTEGER,
  payterms TEXT,
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id)
);

CREATE TABLE `stores` (
  stor_id TEXT PRIMARY KEY,
  stor_name TEXT,
  stor_address TEXT,
  city TEXT,
  state TEXT,
  zip TEXT
);

",202,6.608628511428833,250,"['sales', 'stores']"
735,List down 5 non English adventure movies from UK? Hint: not English refers to isEnglish = 'F'; UK is a country,movielens,SELECT T1.movieid FROM movies2directors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.country = 'UK' AND T1.genre = 'Adventure' AND T2.isEnglish = 'F' LIMIT 5,"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2directors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  directorid INTEGER PRIMARY KEY REFERENCES directors(None),
  genre TEXT
);

",156,6.532748222351074,250,"['movies', 'movies2directors']"
736,"How old was composer of the show when he was nominated for Emmy's Outstanding Music Composition for a Series in 2009. Indicate his full name as well. Hint: in 2009 refers to year = 2009; old refers to SUBTRACT(2009, birthdate); composer of the show refers to role = 'composer'; Emmy's refers to organization = 'Primetime Emmy Awards'; nominated refers to result = 'Nominee'; Outstanding Music Composition refers to award = 'Outstanding Music Composition for a Series (Original Dramatic Score)'",simpson_episodes,"SELECT T1.year - T2.birthdate AS ageIn2009, T2.name FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person = T2.name WHERE T1.role = 'composer' AND T1.organization = 'Primetime Emmy Awards' AND T1.award = 'Outstanding Music Composition for a Series (Original Dramatic Score)' AND T1.result = 'Nominee' AND T1.year = 2009;","CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",265,6.755038499832153,250,"['credit', 'award', 'episode']"
737,In which province is the highest volcano mountain located in?,mondial_geo,SELECT T1.Province FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country INNER JOIN mountain AS T3 ON T3.Name = T2.Mountain WHERE T3.Type = 'volcano' ORDER BY T3.Height DESC LIMIT 1,"CREATE TABLE `mountain` (
  Name TEXT PRIMARY KEY,
  Mountains TEXT,
  Height REAL,
  Type TEXT,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `mountainOnIsland` (
  Mountain TEXT PRIMARY KEY REFERENCES mountain(None),
  Island TEXT PRIMARY KEY REFERENCES island(None)
);

CREATE TABLE `lake` (
  Name TEXT PRIMARY KEY,
  Area REAL,
  Depth REAL,
  Altitude REAL,
  Type TEXT,
  River TEXT,
  Longitude REAL,
  Latitude REAL
);

",259,6.742968797683716,250,"['mountain', 'mountainOnIsland', 'lake']"
738,To which predicted relation class does the self-relation of the object sample in image no.5 belong? Hint: predicted relation class refers to PRED_CLASS; self-relations refers to OBJ1_SAMPLE_ID = OBJ2_SAMPLE_ID; image no.5 refers to IMG_ID = 5,image_and_language,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 5 AND T2.OBJ1_SAMPLE_ID = T2.OBJ2_SAMPLE_ID,"CREATE TABLE `pred_classes` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",218,6.63186502456665,250,"['pred_classes', 'img_rel']"
739,How many athletes competed in the 1992 Summer Olympics? Hint: 1992 Summer Olympics refer to games_name = '1928 Summer';,olympics,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '1928 Summer',"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",187,6.569106340408325,250,"['games', 'games_competitor']"
740,List the order key of the orders with a total price between 200000 and 300000. Hint: orders with a total price between 200000 and 300000 refer to o_totalprice between 200000 and 300000;,retails,SELECT o_orderkey FROM orders WHERE o_totalprice BETWEEN 200000 AND 300000,"CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

",198,6.606626749038696,250,['orders']
741,State number of legislators who are not the senator among female legislators. Hint: not the senator refers to class IS NULL OR class = ''; female refers to gender_bio = 'F';,legislator,SELECT COUNT(*) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'F' AND (T2.class IS NULL OR T2.class = ''),"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",160,6.540382146835327,250,"['historical', 'historical-terms']"
742,"How much is the discounted price of every item that customer 111511 ordered in order 53159? List the names of the parts of every item. Hint: discounted price refers to multiply(l_extendedprice, subtract(1, l_discount)); customer 111511 refers to o_custkey = 111511; order 53159 refers to o_orderkey = 53159; name of the part refers to p_name",retails,"SELECT T2.l_extendedprice * (1 - T2.l_discount), T3.p_name FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey INNER JOIN part AS T3 ON T2.l_partkey = T3.p_partkey WHERE T1.o_custkey = 111511 AND T1.o_orderkey = 53159","CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

CREATE TABLE `part` (
  p_partkey INTEGER,
  p_type TEXT,
  p_size INTEGER,
  p_brand TEXT,
  p_name TEXT,
  p_container TEXT,
  p_mfgr TEXT,
  p_retailprice REAL,
  p_comment TEXT
);

",241,6.678333282470703,250,"['lineitem', 'part']"
743,Which publisher published the most games? Hint: publisher refers to publisher_name; the most games refers to max(count(game_id)),video_games,"SELECT T.publisher_name FROM ( SELECT T1.publisher_name, COUNT(DISTINCT T2.game_id) FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id GROUP BY T1.publisher_name ORDER BY COUNT(DISTINCT T2.game_id) DESC LIMIT 1 ) t","CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

CREATE TABLE `publisher` (
  id INTEGER,
  publisher_name TEXT
);

",158,6.540987730026245,250,"['game_publisher', 'publisher']"
744,"What is the total cost of all the ""Road-650, Red, 60"" products that Abraham E. Bennet sold? Hint: total cost = SUM(MULTIPLY(Quantity, Price)); 'Road-650, Red, 60' is name of product;",sales,"SELECT SUM(T2.Quantity * T3.Price) FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.FirstName = 'Abraham' AND T1.MiddleInitial = 'e' AND T1.LastName = 'Bennet' AND T3.Name = 'Road-650 Red, 60'","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

",179,6.561708450317383,250,"['sales', 'products']"
745,"What are locations of the work order ""35493""?",works_cycles,SELECT T2.Name FROM WorkOrderRouting AS T1 INNER JOIN Location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.WorkOrderID = 35493,"CREATE TABLE `workorder` (
  WorkOrderID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  OrderQty INTEGER,
  StockedQty INTEGER,
  ScrappedQty INTEGER,
  StartDate DATETIME,
  EndDate DATETIME,
  DueDate DATETIME,
  ScrapReasonID INTEGER REFERENCES ScrapReason(ScrapReasonID),
  ModifiedDate DATETIME
);

CREATE TABLE `location` (
  LocationID INTEGER,
  Name TEXT PRIMARY KEY,
  CostRate REAL,
  Availability REAL,
  ModifiedDate DATETIME
);

",437,7.183464527130127,250,"['workorder', 'location']"
746,How many games were released in the year 2001? Hint: released in the year 2001 refers to release_year = 2001;,video_games,SELECT COUNT(id) FROM game_platform AS T WHERE T.release_year = 2001,"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

",165,6.54865574836731,250,['game']
747,List all orders where its products were shipped from Daly City. Hint: shipped from Daly City refers to Store Locations where City Name = 'Daly City'; orders refer to OrderNumber;,regional_sales,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.`City Name` = 'Daly City' THEN T1.OrderNumber END AS T FROM `Sales Orders` T1 INNER JOIN `Store Locations` T2 ON T2.StoreID = T1._StoreID ) WHERE T IS NOT NULL,"CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",163,6.5432493686676025,250,"['store locations', 'sales orders']"
748,"What is the status of the orders placed on 04/10/2022? Hint: placed on 04/10/2022 refers to SUBSTR(order_date, 1, 10) = '2022-04-10'; status of order refers to status_value",books,SELECT DISTINCT T1.status_value FROM order_status AS T1 INNER JOIN order_history AS T2 ON T1.status_id = T2.status_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id WHERE T3.order_date LIKE '2022-04-10%',"CREATE TABLE `order_status` (
  status_id INTEGER,
  status_value TEXT
);

",241,6.679278373718262,250,['order_status']
749,Give the body height status of Mr. Vincent Wyman on 2010/8/2. Hint: body height status refers to DESCRIPTION = 'Body Height' from observations; on 2010/8/2 refers to DATE = '2010-08-02';,synthea,"SELECT T2.description, T2.VALUE, T2.units FROM patients AS T1 INNER JOIN observations AS T2 ON T1.patient = T2.PATIENT WHERE T1.prefix = 'Mr.' AND T1.first = 'Vincent' AND T1.last = 'Wyman' AND T2.date = '2010-08-02' AND T2.description = 'Body Height'","CREATE TABLE `observations` (
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE TEXT,
  DESCRIPTION TEXT,
  VALUE REAL,
  UNITS TEXT
);

",217,6.6327292919158936,250,['observations']
750,"Among the films starring PENELOPE GUINESS, how many of them are released in 2006? Hint: release in 2006 refers to release_year = 2006;",movie_3,SELECT COUNT(T2.film_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.release_year = 2006 AND T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",212,6.625925540924072,250,"['actor', 'film_actor']"
751,How many authors are affiliated with NASA Langley Research Center? Hint: NASA Langley Research Center is the Affiliation,authors,SELECT COUNT(Name) FROM Author WHERE Affiliation = 'NASA Langley Research Center',"CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",141,6.518527269363403,250,['author']
752,"Which category does ""tofu"" belong to? Hint: category refers to CategoryName; tofu refers to ProductName = 'Tofu';",retail_world,SELECT T2.CategoryName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.ProductName = 'Tofu',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `categories` (
  CategoryID INTEGER,
  CategoryName TEXT,
  Description TEXT
);

",168,6.544557094573975,250,"['products', 'categories']"
753,"Please list the employees who have more than 20 vacations hours and wish to receive e-mail promotions. Hint: Contact does wish to receive e-mail promotions refers to EmailPromotion = (1,2); more than 20 vacations hours refers to VacationHours>20",works_cycles,SELECT T1.BusinessEntityID FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 1 AND T1.VacationHours > 20,"CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",488,7.291607618331909,250,['employee']
754,"Which country does the customer with the email ""rturbitt2@geocities.jp"" from? Hint: ""rturbitt2@geocities.jp"" is the email of customer; country refers to country_name",books,SELECT T4.country_name FROM customer AS T1 INNER JOIN customer_address AS T2 ON T1.customer_id = T2.customer_id INNER JOIN address AS T3 ON T3.address_id = T2.address_id INNER JOIN country AS T4 ON T4.country_id = T3.country_id WHERE T1.email = 'rturbitT2@geocities.jp',"CREATE TABLE `address` (
  address_id INTEGER,
  street_number TEXT,
  street_name TEXT,
  city TEXT,
  country_id INTEGER REFERENCES country(country_id)
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  email TEXT
);

",217,6.630403280258179,250,"['address', 'customer']"
755,What is the product's name in the highest quantity in a single purchase? Hint: highest quantity refers to max(Quantity),superstore,SELECT T2.`Product Name` FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'East' ORDER BY T1.Quantity DESC LIMIT 1,"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

",154,6.5292885303497314,250,"['central_superstore', 'product']"
756,"Which product has the highest total amount of quantity sold? Calculate its overall total price. Hint: highest total amount of quantity refers to MAX(Quantity); overall total price = SUM(MULTIPLY(Quantity, Price));",sales,"SELECT T1.Name, SUM(T2.Quantity * T1.Price) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID GROUP BY T1.ProductID, T1.Name ORDER BY SUM(T2.Quantity) DESC LIMIT 1","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

",160,6.536239147186279,250,"['sales', 'products']"
757,"List by their ID the complaints received by the company on 25/09/2014 that took the longest. Hint: ID of the complaints refers to ""Complaint ID""; on 25/09/2014 refers to ""Date sent to company"" = '2014-09-25'; took the longest = MAX(SUBTRACT(""Date sent to company"", ""Date received""));",retail_complains,"SELECT `Complaint ID` FROM events WHERE strftime('%J', `Date sent to company`) - strftime('%J', `Date received`) = ( SELECT MAX(strftime('%J', `Date sent to company`) - strftime('%J', `Date received`)) FROM events WHERE `Date sent to company` = '2014-09-25' ) AND `Date sent to company` = '2014-09-25'","CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

",211,6.615630626678467,250,['events']
758,What is the name of the most popular restaurant serving Asian foods in San Francisco? Hint: the most popular refers to max(review); Asian food refers to food_type = 'asian'; San Francisco refers to city = 'san francisco',restaurant,SELECT label FROM generalinfo WHERE food_type = 'asian' AND city = 'san francisco' AND review = ( SELECT MAX(review) FROM generalinfo WHERE food_type = 'asian' AND city = 'san francisco' ),"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",157,6.533279180526733,250,"['location', 'generalinfo']"
759,"Of all the orders that have ordered Ikura, how many of them enjoys a unit price that's lower than its standard unit price? Hint: Ikura refers to ProductName = 'Ikura'; ordered unit price that's lower than its standard unit price refers to ""Order Details"".UnitPrice < ""Product"".UnitPrice;",retail_world,SELECT COUNT(T2.OrderID) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName = 'Ikura' AND T2.UnitPrice < T1.UnitPrice,"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `orderdetails` (
  OrderDetailID INTEGER,
  OrderID INTEGER REFERENCES Orders(OrderID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",207,6.616291761398315,250,"['products', 'orderdetails']"
760,How many inspections with critical food safety problems are under inspection point id 3? Hint: critical food safety problems refers to fine = 500; point_id = 3,food_inspection_2,SELECT COUNT(inspection_id) FROM violation WHERE point_id = 3 AND fine = 500,"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

",155,6.532671928405762,250,"['inspection', 'violation']"
761,How many Summer games are there that were held in Paris? Hint: Summer games refer to games_id where season = 'Summer'; Paris refers to city_name = 'Paris';,olympics,SELECT COUNT(T3.id) FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Paris' AND T3.season = 'Summer',"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",187,6.567866325378418,250,"['games_city', 'city']"
762,"What is the difference in the number of employees from the UK and the USA who work as sales representatives? Hint: SUBTRACT(COUNT(EmployeeID where Country = 'UK' and Title = 'sales representative'), COUNT(EmployeeID where Country = 'USA' and Title = 'sales representative'));",retail_world,SELECT ( SELECT COUNT(Title) FROM Employees WHERE Country = 'UK' AND Title = 'Sales Representative' ) - ( SELECT COUNT(Title) FROM Employees WHERE Country = 'USA' AND Title = 'Sales Representative' ) AS DIFFERENCE,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",205,6.610167980194092,250,['employees']
763,"Name number of samples of ""bed"" object are there in the image No.1098? Hint: samples of ""bed"" object refer to OBJ_SAMPLE_ID where OBJ_CLASS = 'bed'; image No.1098 refers to IMG_ID = 1098;",image_and_language,SELECT SUM(CASE WHEN T2.OBJ_CLASS = 'bed' THEN 1 ELSE 0 END) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 1098,"CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `obj_classes` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",215,6.623445987701416,250,"['img_obj', 'obj_classes']"
764,How many order keys are not applied for the discount? Hint: order key refers to l_orderkey; not applied for the discount refers to l_discount = 0,retails,SELECT COUNT(l_orderkey) FROM lineitem WHERE l_discount = 0,"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",159,6.538180112838745,250,['lineitem']
765,Pick 5 clients with 0 priority and write down their last name. Hint: 0 priority refers to priority = 0; last name refers to last,retail_complains,SELECT T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.priority = 0 LIMIT 5,"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",149,6.524543762207031,250,['client']
766,"What is the name of the state in which there have been the largest number of complaints with priority 0? Hint: largest number of complaints refers to MAX(COUNT(""Complaint ID"") WHERE priority = 0);",retail_complains,SELECT T2.state FROM callcenterlogs AS T1 INNER JOIN client AS T2 ON T1.`rand client` = T2.client_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id INNER JOIN state AS T4 ON T3.state_abbrev = T4.StateCode WHERE T1.priority = 0 GROUP BY T2.state ORDER BY COUNT(T2.state) DESC LIMIT 1,"CREATE TABLE `state` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

CREATE TABLE `callcenterlogs` (
  Date received DATE,
  Complaint ID TEXT PRIMARY KEY,
  rand client TEXT REFERENCES client(client_id),
  phonefinal TEXT,
  vru+line TEXT,
  call_id INTEGER,
  priority INTEGER,
  type TEXT,
  outcome TEXT,
  server TEXT,
  ser_start TEXT,
  ser_exit TEXT,
  ser_time TEXT
);

",162,6.537880182266235,250,"['state', 'callcenterlogs']"
767,How many conditions did Tyree Eichmann have? Hint: conditions refer to DESCRIPTION from conditions;,synthea,SELECT COUNT(DISTINCT T2.DESCRIPTION) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Tyree' AND T1.last = 'Eichmann',"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

",169,6.547692537307739,250,['conditions']
768,"What is the average value of the sales order? Hint: calculation = DIVIDE(SUM(UnitPrice * Quantity * SUBTRACT(1, Discount)), COUNT(OrderID))",retail_world,SELECT SUM(UnitPrice * Quantity * (1 - Discount)) / COUNT(OrderID) FROM `Order Details`,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

",178,6.5590362548828125,250,['orders']
769,What is the gender of the character 'USAF Master Sgt. Epps?' Hint: character 'USAF Master Sgt. Epps' refers to character_name = 'USAF Master Sgt. Epps',movies_4,SELECT T2.gender FROM movie_cast AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.gender_id WHERE T1.character_name = 'USAF Master Sgt. Epps',"CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

",225,6.638996601104736,250,['person']
770,What is the name of the person that has the highest number of nominated award but didn't win? Hint: nominated refers to result = 'Nominee'; highest number of nominated award refers to Max(Count(person)),simpson_episodes,SELECT person FROM Award WHERE result = 'Nominee' GROUP BY person ORDER BY COUNT(person) DESC LIMIT 1;,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",174,6.5517003536224365,250,"['award', 'person']"
771,"What kind of transaction type for the ""HL Road Frame - Black, 48"" order happened in 2012/12/13? Hint: Transactiontype = 'w' means 'WorkOrder'; transactiontype = 's' means 'SalesOrder'; transactiontype = 'P' means 'PurchaseOrder'; happened in refers to TransactionDate",works_cycles,"SELECT T1.TransactionType FROM TransactionHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'HL Road Frame - Black, 48' AND STRFTIME('%Y-%m-%d',T1.TransactionDate) = '2013-07-31'","CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `transactionhistory` (
  TransactionID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  ReferenceOrderID INTEGER,
  ReferenceOrderLineID INTEGER,
  TransactionDate DATETIME,
  TransactionType TEXT,
  Quantity INTEGER,
  ActualCost REAL,
  ModifiedDate DATETIME
);

",502,7.323063135147095,250,"['salesorderheader', 'transactionhistory']"
772,Who produced The simpson 20s: Season 20? Hint: produced refers to role = 'producer',simpson_episodes,SELECT DISTINCT person FROM Credit WHERE role = 'producer';,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

",150,6.533730745315552,250,['credit']
773,"What is the maximum weight of USA all-star players? Hint: ""USA"" is the birthCountry of player;  maximum weight refers to Max(weight)",professional_basketball,SELECT MAX(T1.weight) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.birthCountry = 'USA',"CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",183,6.568958759307861,250,['player_allstar']
774,What is the average occupation of users whose ratings are not more than 2 ?,movielens,SELECT AVG(T2.occupation) FROM u2base AS T1 INNER JOIN users AS T2 ON T1.userid = T2.userid WHERE T1.rating < 2,"CREATE TABLE `users` (
  userid INTEGER,
  age TEXT,
  u_gender TEXT,
  occupation TEXT
);

",144,6.525042533874512,250,['users']
775,Which team got the most wins in the Stanley Cup finals? Hint: team refers name; most wins = MAX(W);,hockey,SELECT T2.name FROM TeamsSC AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year GROUP BY T2.name ORDER BY SUM(T1.W) DESC LIMIT 1,"CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

CREATE TABLE `teamssc` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  GF INTEGER,
  GA INTEGER,
  PIM TEXT
);

CREATE TABLE `seriespost` (
  year INTEGER REFERENCES Teams(year) REFERENCES Teams(year),
  round TEXT,
  series TEXT,
  tmIDWinner TEXT REFERENCES Teams(tmID),
  lgIDWinner TEXT,
  tmIDLoser TEXT REFERENCES Teams(tmID),
  lgIDLoser TEXT,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  GoalsWinner INTEGER,
  GoalsLoser INTEGER,
  note TEXT
);

",238,6.6756439208984375,250,"['teams', 'teamssc', 'seriespost']"
776,"Compare the total number of orders between customer ""Apollo Ltd"" and ""Pacific Ltd"". Hint: ""Apollo Ltd"" and ""Pacific Ltd"" are both Customer Names; total number of orders refers to COUNT(OrderNumber)",regional_sales,"SELECT SUM(CASE WHEN T2.`Customer Names` = 'Apollo Ltd' THEN 1 ELSE 0 END), SUM(CASE WHEN T2.`Customer Names` = 'Pacific Ltd' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID","CREATE TABLE `customers` (
  CustomerID INTEGER,
  Customer Names TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",173,6.557837247848511,250,"['customers', 'sales orders']"
777,"Name the reason Walter Bahringer visited medical professionals in July 2009. Hint: reason for visiting medical professionals refers to encounters.REASONDESCRIPTION;  in July 2009 refers to  substr(encounters.DATE, 1, 7) = '2009-07' ;",synthea,SELECT T2.REASONDESCRIPTION FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Walter' AND T1.last = 'Bahringer' AND T2.DATE LIKE '2009-07%',"CREATE TABLE `encounters` (
  ID TEXT PRIMARY KEY,
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  CODE INTEGER,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",218,6.631537437438965,250,['encounters']
778,Which position did Mike Antonovich play? Hint: pos = 'LW' refers to left winger; pos = 'RW' refers to right winger; pos = 'C' refers to center; pos = 'G' refers to goalie; pos = 'D' refers to defenceman; pos = 'W' refers to winger; pos = 'F' refers to forward,hockey,SELECT T1.pos FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Mike' AND T1.lastName = 'Antonovich',"CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

",295,6.813453912734985,250,['goalies']
779,How many customers from the furniture segments come from Iraq? Hint: furniture segment refers to c_mktsegment = 'FURNITURE'; Iraq refers to n_name = 'Iraq',retails,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_mktsegment = 'FURNITURE' AND T2.n_name = 'IRAQ',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",165,6.546708345413208,250,"['customer', 'nation']"
780,"What is the awarded category that the awarded character Lenny won? Hint: 

awarded category refers to award_category",simpson_episodes,SELECT DISTINCT T1.award_category FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T2.character = 'Lenny';,"CREATE TABLE `Character_award` (
  award_id INTEGER REFERENCES Award(award_id),
  character TEXT
);

",151,6.531666040420532,250,['Character_award']
781,"Calculate the ratio of unemployed students who have never been absent from school. Hint: ratio = CONCAT(DIVIDE(MULTIPLY(COUNT(unemployed.name WHERE month = 0), 100), COUNT(month)),'%'); unemployed students who have never been absent from school refers to (unemployed.name WHERE month = 0);",student_loan,"SELECT CAST(SUM(IIF(T2.month = 0, 1, 0)) AS REAL) * 100 / COUNT(T1.name) FROM unemployed AS T1 INNER JOIN longest_absense_from_school AS T2 ON T2.name = T1.name","CREATE TABLE `unemployed` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",231,6.658061742782593,250,"['unemployed', 'longest_absense_from_school']"
782,How many low income countries are there in South Asia? Hint: South Asia is the name of the region; IncomeGroup = 'Low income';,world_development_indicators,SELECT COUNT(CountryCode) FROM Country WHERE Region = 'South Asia' AND IncomeGroup = 'Low income',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",148,6.526365041732788,250,"['country', 'countrynotes']"
783,"How many male students filed for bankruptcy as compare to female students? Hint: difference = SUBTRACT(COUNT(filed_for_bankrupcy.name who are In male.name), COUNT(filed_for_bankrupcy.name who are NOT in male.name)); male students are mentioned in male.name; female students refers to filed_for_bankrupy.name who are NOT in male.name;",student_loan,"SELECT COUNT(T2.name) - SUM(IIF(T2.name IS NULL, 1, 0)) AS num FROM filed_for_bankrupcy AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name","CREATE TABLE `filed_for_bankrupcy` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",242,6.681562900543213,250,"['filed_for_bankrupcy', 'male']"
784,"List out the root beer ID for the brand Bulldog, Bundaberg, Dad's, Dog n Suds and Virgil's. Hint: Bulldog, Bundaberg, Dad's, Dog n Suds and Virgil's refers to BrandName IN('Bulldog', 'Bundaberg', 'Dad''s', 'Dog n Suds', 'Virgil''s');",beer_factory,"SELECT T1.RootBeerID FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T2.BrandID = T1.BrandID WHERE T2.BrandName IN ('Bulldog', 'Bundaberg', 'Dad''s', 'Dog n Suds', 'Virgil''s')","CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",223,6.644972562789917,250,['rootbeerbrand']
785,"What is the ratio of American casts on episode 2 of the series? Please include their roles. Hint: American refers to birth_country = 'USA'; cast refers to category = 'Cast'; ratio = divide(count(person_id where birth_country = 'USA'), total(category)) where category = 'Cast'",law_episode,"SELECT CAST(SUM(CASE WHEN T2.category = 'Cast' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.category), T1.role FROM Award AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Episode AS T3 ON T2.episode_id = T3.episode_id INNER JOIN Person AS T4 ON T2.person_id = T4.person_id WHERE T3.episode = 2 AND T4.birth_country = 'USA'","CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",188,6.570911407470703,250,"['credit', 'person']"
786,"What is the MPAA rating for the movie with the character named ""Peter Quill"" in it? Hint: MPAA rating = 'G' means General audiences; MPAA rating = 'PG' means Parental guidance suggested; MPAA rating = 'R'means Restricted; MPAA rating = 'X' means No one under 17 admitted",movie,SELECT T1.`MPAA Rating` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.`Character Name` = 'Peter Quill',"CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",180,6.564455032348633,250,"['movie', 'characters']"
787,What are the keywords of the episode which has title as Dangerous Curves?,simpson_episodes,SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Dangerous Curves';,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `keyword` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  keyword TEXT PRIMARY KEY
);

",140,6.521998405456543,250,"['episode', 'keyword']"
788,List the names of all players in team Avangard Omsk in season 2000-2001. Hint: names of the players refers to PlayerName; team Avangard Omsk refers to TEAM = 'Avangard Omsk'; 2000-2001 season refers to SEASON = '2000-2001';,ice_hockey_draft,SELECT DISTINCT T2.PlayerName FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2000-2001' AND T1.TEAM = 'Avangard Omsk',"CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",200,6.614301919937134,250,"['seasonstatus', 'playerinfo']"
789,List out all the coach ID who have served more than 2 different teams. Hint: more than 2 different teams refers to count(tmID) > 2,professional_basketball,SELECT coachID FROM coaches GROUP BY coachID HAVING COUNT(DISTINCT tmID) > 2,"CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES teams(year),
  tmID TEXT PRIMARY KEY REFERENCES teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  won INTEGER,
  lost INTEGER,
  post_wins INTEGER,
  post_losses INTEGER
);

",182,6.565383672714233,250,['coaches']
790,"Which closed/not running Yelp business in ""Sun City"" has got the most reviews? Give the business id. Hint: closed/not running refers to active = 'False'; most reviews refers to MAX(COUNT(user_id));",public_review_platform,SELECT T1.business_id FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Sun City' AND T1.active LIKE 'FALSE' GROUP BY T1.business_id ORDER BY COUNT(T2.review_length) DESC LIMIT 1,"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",211,6.621649980545044,250,['business']
791,Indicate the name of the customers who have placed an order of 3 units in February 2018. Hint: name of customer refers to Customer Names; order of 3 unit refers to Order Quantity = 3; in February 2018 refers to OrderDate LIKE '2/%/18',regional_sales,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.`Order Quantity` = 3 AND T2.OrderDate LIKE '2/%/18' THEN T1.`Customer Names` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL,"CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  Customer Names TEXT
);

",191,6.577299356460571,250,"['sales orders', 'customers']"
792,Calculate the average number of students of all universities in 2012. Hint: average number of students refers to avg(num_students); in 2012 refers to year = 2012,university,SELECT AVG(num_students) FROM university_year WHERE year = 2012,"CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",177,6.561688661575317,250,['university_year']
793,In which continent does the country with the smallest surface area belongs? Hint: smallest surface area refers to MIN(smallest surface area);,world,SELECT Continent FROM Country ORDER BY SurfaceArea LIMIT 1,"CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

",138,6.515865802764893,250,"['country', 'city']"
794,What is the country location of the employee who handled order id 10257?,retail_world,SELECT T1.Country FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10257,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

",154,6.528658628463745,250,"['employees', 'orders']"
795,"Calculate the number of international students of University of Wisconsin-Madison in 2013. Hint: international students refers to DIVIDE(MULTIPLY(num_students, pct_international_students), 100); University of Wisconsin-Madison refers to university_name = 'University of Wisconsin-Madison'; in 2013 refers to year = 2013",university,SELECT CAST(T1.num_students * T1.pct_international_students AS REAL) / 100 FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2013 AND T2.university_name = 'University of Wisconsin-Madison',"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",220,6.64201283454895,250,"['university', 'university_year']"
796,What is the average price of products with more than fifty units in stock? Hint: more than fifty units in stock refers to UnitsInStock > 50; average price = avg(UnitPrice where UnitsInStock > 50),retail_world,SELECT SUM(UnitPrice) / COUNT(UnitPrice) FROM Products WHERE UnitsInStock > 50,"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

",186,6.567038536071777,250,['products']
797,"Which state did Veronica Grace Boland represent and which party is she affiliated? Hint: Veronica Grace Boland is a full name; full name refers to first_name, middle_name, last_name; party affiliated refers to party",legislator,"SELECT T2.state, T2.party FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name OR T1.middle_name OR T1.last_name = 'VeronicaGraceBoland'","CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",171,6.5513458251953125,250,"['historical', 'historical-terms', 'social-media']"
798,How many of the items are instructed to be delivered in person? Hint: instructed to be delivered in person refers to l_shipinstruct = 'DELIVER IN PERSON',retails,SELECT COUNT(l_linenumber) FROM lineitem WHERE l_shipinstruct = 'DELIVER IN PERSON',"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",164,6.543680667877197,250,['lineitem']
799,List the names of alcohol free recipes. Hint: alcohol free refers to alcohol = 0,cookbook,SELECT T1.title FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T2.alcohol = 0,"CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `nutrition` (
  recipe_id INTEGER REFERENCES Recipe(recipe_id),
  protein REAL,
  carbo REAL,
  alcohol REAL,
  total_fat REAL,
  sat_fat REAL,
  cholestrl REAL,
  sodium REAL,
  iron REAL,
  vitamin_c REAL,
  vitamin_a REAL,
  fiber REAL,
  pcnt_cal_carb REAL,
  pcnt_cal_fat REAL,
  pcnt_cal_prot REAL,
  calories REAL
);

",131,6.511704206466675,250,"['recipe', 'nutrition']"
800,Identify the players with the same height as Brian Gionta. How tall are they? Hint: players refers to PlayerName; height refers to height_in_cm;,ice_hockey_draft,"SELECT T2.PlayerName, T1.height_in_cm FROM height_info AS T1 INNER JOIN PlayerInfo AS T2 ON T1.height_id = T2.height WHERE T2.height = ( SELECT height FROM PlayerInfo WHERE PlayerName = 'Brian Gionta' )","CREATE TABLE `height_info` (
  height_id INTEGER,
  height_in_cm INTEGER,
  height_in_inch TEXT
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",150,6.528311491012573,250,"['height_info', 'playerinfo']"
801,What was the character that Dan Castellaneta did the voice over for and was awarded? Hint: voice over for and was awarded refers to award like '%Voice-Over%';,simpson_episodes,SELECT DISTINCT T2.character FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.award LIKE '%Voice-Over%' AND T1.person = 'Dan Castellaneta';,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",161,6.538926124572754,250,"['credit', 'award', 'person']"
802,Who is the commander of Morgan Park district? Hint: Morgan Park district refers to district_name = 'Morgan Park',chicago_crime,SELECT commander FROM District WHERE district_name = 'Morgan Park',"CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",155,6.5376975536346436,250,['district']
803,"Which brand of root beer has the lowest unit profit available to wholesalers? Indicate the ID of the customer that has the highest number of purchases of the said brand. Hint: brand of root beer refers to BrandName; lowest unit profit available to wholesalers refers to MIN(SUBTRACT(CurrentRetailPrice, WholesaleCost)); ID of the customer refers to CustomerID; highest number of purchases refers to MAX(COUNT(CustomerID));",beer_factory,"SELECT T3.BrandName, T2.CustomerID FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID INNER JOIN rootbeerbrand AS T3 ON T1.BrandID = T3.BrandID GROUP BY T3.BrandID ORDER BY T3.CurrentRetailPrice - T3.WholesaleCost, COUNT(T1.BrandID) DESC LIMIT 1","CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `rootbeer` (
  RootBeerID INTEGER,
  BrandID INTEGER REFERENCES rootbeerbrand(BrandID),
  ContainerType TEXT,
  LocationID INTEGER REFERENCES location(LocationID) REFERENCES geolocation(LocationID),
  PurchaseDate DATE
);

CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",221,6.6333537101745605,250,"['rootbeerbrand', 'rootbeer', 'transaction']"
804,"Among the root beer brands that do not advertise on Facebook and Twitter, which brand has the highest number of purchases? Hint: do not advertise on Facebook and Twitter refers to FacebookPage IS NULL AND Twitter IS NULL; highest number of purchases refers to MAX(COUNT(BrandID));",beer_factory,SELECT T2.BreweryName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T2.FacebookPage IS NULL AND T2.Twitter IS NULL GROUP BY T2.BrandID ORDER BY COUNT(T1.BrandID) DESC LIMIT 1,"CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",186,6.5627121925354,250,"['rootbeerbrand', 'transaction']"
805,List the universities in Denmark. Hint: in Denmark refers to country_name = 'Denmark'; name of university refers to university_name;,university,SELECT T1.university_name FROM university AS T1 INNER JOIN country AS T2 ON T1.country_id = T2.id WHERE T2.country_name = 'Denmark',"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

",161,6.53556227684021,250,"['university', 'country']"
806,Which location sold more bottles of beer? Hint: location refers to LocationName; bottle of beer refers to ContainerType = 'Bottle'; location that sold more bottles of beer refers to MAX(COUNT(LocationID WHERE ContainerType = 'Bottle'));,beer_factory,SELECT T2.LocationName FROM rootbeer AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.ContainerType = 'Bottle' GROUP BY T2.LocationID ORDER BY COUNT(T1.LocationID) DESC LIMIT 1,"CREATE TABLE `location` (
  LocationID INTEGER REFERENCES geolocation(LocationID),
  LocationName TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER
);

CREATE TABLE `rootbeer` (
  RootBeerID INTEGER,
  BrandID INTEGER REFERENCES rootbeerbrand(BrandID),
  ContainerType TEXT,
  LocationID INTEGER REFERENCES location(LocationID) REFERENCES geolocation(LocationID),
  PurchaseDate DATE
);

",182,6.560528039932251,250,"['location', 'rootbeer']"
807,Under which categories is Yelp_Business no. 1? Hint: categories refers to category_name; Yelp_Business no.1 refers to business_id = 1,public_review_platform,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T2.business_id = 1,"CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",199,6.603635549545288,250,"['business_categories', 'categories']"
808,To whom does Steve Patterson report? Please give his or her full name. Hint: reportsTO' is the leader of the 'employeeNumber';,car_retails,"SELECT t2.firstName, t2.lastName FROM employees AS t1 INNER JOIN employees AS t2 ON t2.employeeNumber = t1.reportsTo WHERE t1.firstName = 'Steve' AND t1.lastName = 'Patterson'","CREATE TABLE `employees` (
  employeeNumber INTEGER,
  lastName TEXT,
  firstName TEXT,
  extension TEXT,
  email TEXT,
  officeCode TEXT REFERENCES offices(officeCode),
  reportsTo INTEGER REFERENCES employees(employeeNumber),
  jobTitle TEXT
);

",157,6.536466121673584,250,['employees']
809,"Among the businesses in Chandler, list the attribute of the business with a low review count. Hint: in Chandler refers to city = 'Chandler'; attribute refers to attribute_name",public_review_platform,"SELECT DISTINCT T3.attribute_id, T3.attribute_name FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.attribute_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.review_count = 'Low' AND T1.city = 'Chandler'","CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",202,6.612708806991577,250,"['business_attributes', 'attributes', 'business']"
810,"Among all the active customers, how many of them live in Arlington? Hint: active refers to active = 1; Arlington refers to city = 'Arlington'",movie_3,SELECT COUNT(T2.customer_id) FROM address AS T1 INNER JOIN customer AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T1.city_id = T3.city_id WHERE T2.active = 1 AND T3.city = 'Arlington',"CREATE TABLE `address` (
  address_id INTEGER,
  address TEXT,
  address2 TEXT,
  district TEXT,
  city_id INTEGER REFERENCES city(None),
  postal_code TEXT,
  phone TEXT,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",198,6.608030557632446,250,"['address', 'customer']"
811,How many FIFA games are there across all platforms? Hint: FIFA games refers to game_name LIKE '%FIFA%';,video_games,SELECT COUNT(*) FROM ( SELECT T.game_name FROM game AS T WHERE T.game_name LIKE '%FIFA%' ),"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

CREATE TABLE `game_platform` (
  id INTEGER,
  game_publisher_id INTEGER REFERENCES game_publisher(id),
  platform_id INTEGER REFERENCES platform(id),
  release_year INTEGER
);

",157,6.5398170948028564,250,"['game', 'game_publisher', 'game_platform']"
812,Give the author's name of the books that cost 19 dollars and above. Hint: books cost 19 dollars and above refers to price > = 19,books,SELECT DISTINCT T3.author_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN order_line AS T4 ON T4.book_id = T1.book_id WHERE T4.price > 19,"CREATE TABLE `order_line` (
  line_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  book_id INTEGER REFERENCES book(None),
  price REAL
);

CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `book_author` (
  book_id INTEGER PRIMARY KEY REFERENCES book(book_id),
  author_id INTEGER PRIMARY KEY REFERENCES author(author_id)
);

CREATE TABLE `author` (
  author_id INTEGER,
  author_name TEXT
);

",202,6.611920595169067,250,"['order_line', 'book', 'book_author', 'author']"
813,List the IDs and names of the umpires from New Zealand. Hint: New Zealand refers to Country_Name = 'New Zealand'; ID of the umpire refers to Umpire_Id; name of the umpire refers to Umpire_Name,soccer_2016,"SELECT T1.Umpire_Id, T1.Umpire_Name FROM Umpire AS T1 INNER JOIN Country AS T2 ON T1.Umpire_Country = T2.Country_Id WHERE T2.Country_Name = 'New Zealand'","CREATE TABLE `country` (
  Country_Id INTEGER REFERENCES Country(Country_Id),
  Country_Name TEXT
);

CREATE TABLE `umpire` (
  Umpire_Id INTEGER,
  Umpire_Name TEXT,
  Umpire_Country INTEGER REFERENCES Country(Country_Id)
);

",257,6.729824066162109,250,"['country', 'umpire']"
814,What the percentage of the english methods among the methods whose comments is XML format? Hint: english methods refers to lang = 'en'; comment is XML format refers to CommentIsXml = 1;,codebase_comments,SELECT CAST(SUM(CASE WHEN Lang = 'en' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Name) FROM Method WHERE CommentIsXml = 1,"CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",157,6.53812313079834,250,['method']
815,What is the title of the employee with the highest number of territories in charge? Hint: highest number of territories refers to max(TerritoryID),retail_world,SELECT T1.Title FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.Title ORDER BY COUNT(T2.TerritoryID) DESC LIMIT 1,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",169,6.553473234176636,250,['employees']
816,"In the Venus and Adonis, what is the description of the last scene listed? Hint: Venus and Adonis refers to Title = 'Venus and Adonis'; last scene refers to max(Scene)",shakespeare,SELECT T2.Description FROM works AS T1 RIGHT JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Venus and Adonis' ORDER BY T2.Scene DESC LIMIT 1,"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",166,6.548543453216553,250,"['works', 'chapters']"
817,What is the name of the customer number 93697 with the total order price of 191918.92? Hint: customer name refers to c_name; number 93697 refers to o_custkey = 93697; total order price of 191918.92 refers to o_totalprice = 191918.92,retails,SELECT T2.c_name FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T1.o_totalprice = 191918.92 AND T1.o_custkey = 93697,"CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

",216,6.632171630859375,250,"['orders', 'customer']"
818,List out the phone number of the shipping company of order id 10296. Hint: shipping company refers to Shippers; phone number refers to Phone,retail_world,SELECT T2.Phone FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.OrderID = 10260,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",170,6.554297685623169,250,"['orders', 'shippers']"
819,What is the average life expentancy of countries that speak Arabic? Hint: average life expectancy = AVG(LifeExpectancy); speak Arabic refers to `Language` = 'Arabic';,world,SELECT AVG(T1.LifeExpectancy) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Arabic',"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",155,6.534458637237549,250,"['countrylanguage', 'country']"
820,How many orders were shipped by Federal Shipping? Hint: Federal Shipping refers to CompanyName = 'Federal Shipping',retail_world,SELECT COUNT(T1.OrderID) FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",159,6.536967754364014,250,"['orders', 'shippers']"
821,What are the apps that users pretty like this app and how many installs amount of these apps? Hint: users pretty much likes the app refers to Sentiment_Polarity = 'Positive';,app_store,"SELECT DISTINCT T1.App, T1.Installs FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment_Polarity > 0","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",145,6.52132511138916,250,"['playstore', 'user_reviews']"
822,"What is the season of the game where a competitor who weighted 73 kg and 180 cm tall, participated? Hint: competitor who weighted 73 kg and 180 cm tall refers to person_id where height = 180 and weight = 73;",olympics,SELECT DISTINCT T1.season FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.height = 180 AND T3.weight = 73,"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",209,6.619769096374512,250,"['games', 'games_competitor']"
823,State the transaction date whereby DigixDAO was transacted at the hightest price. Hint: the highest price refers to max(price); DigixDAO refers to name = 'DigixDAO',coinmarketcap,SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'DigixDAO' ORDER BY T2.price DESC LIMIT 1,"CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",148,6.528888463973999,250,"['historical', 'coins']"
824,"What is the repository number for the solution of method ""SCore.Poisson.ngtIndex""? Hint: repository number refers to RepoId; method refers to Name; Name = ‘SCore.Poisson.ngtIndex’",codebase_comments,SELECT T1.RepoId FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Name = 'SCore.Poisson.ngtIndex',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",166,6.553292989730835,250,"['solution', 'method', 'repo']"
825,"How many biwords pairs are there whose second word is ""grec""? Hint: grec refers to word = 'grec'; wid where word = 'grec' AS w2nd",language_corpus,SELECT COUNT(T2.w1st) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w2nd WHERE T1.word = 'grec',"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `biwords` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  w1st INTEGER PRIMARY KEY REFERENCES words(wid),
  w2nd INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",164,6.54230809211731,250,"['words', 'biwords', 'pages_words']"
826,"Which district does Maria Miller live in? Hint: 'Maria Miller' is a name of a customer; full name refers to first_name, last_name",movie_3,SELECT T2.district FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Maria' AND T1.last_name = 'Miller',"CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",197,6.598589181900024,250,['customer']
827,Write down the player names and IDs of the English umpires. Hint: English umpires refers to Country_Name = 'England',soccer_2016,"SELECT T1.Umpire_Name, T1.Umpire_Id FROM Umpire AS T1 INNER JOIN Country AS T2 ON T1.Umpire_Country = T2.Country_Id WHERE T2.Country_Name = 'England'","CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `umpire` (
  Umpire_Id INTEGER,
  Umpire_Name TEXT,
  Umpire_Country INTEGER REFERENCES Country(Country_Id)
);

",230,6.656395435333252,250,"['player', 'umpire']"
828,"In 1970, how many Middle Eastern & North African countries whose value for CO2 emissions from gaseous fuel consumption (kt) indicator is more than 600? Hint: Year = 1970; Middle East & North Africa is the name of the region where Region = 'Middle East & North Africa'; CO2 emissions from gaseous fuel consumption (kt) is the name of indicator where IndicatorName = 'CO2 emissions from gaseous fuel consumption (kt)'",world_development_indicators,SELECT COUNT(T2.CountryCode)  FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.Region = 'Middle East & North Africa' AND T1.IndicatorName = 'CO2 emissions FROM gaseous fuel consumption (kt)' AND T1.Year = 1970 AND T1.Value > 600,"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",224,6.639577388763428,250,"['country', 'countrynotes', 'indicators']"
829,How many times between 1975 and 1980 did the player abdulka01 play for LAL? Hint: between 1975 and 1980 refers to year between 1975 and 1980; player abdulka01 refers to playerID = 'abdulka01'; play for LAL refers to tmID = 'LAL',professional_basketball,SELECT COUNT(DISTINCT T2.year) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'LAL' AND T2.year BETWEEN 1975 AND 1980 AND T1.playerID = 'abdulka01',"CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",242,6.681369781494141,250,['player_allstar']
830,How many mountains are there in the country with the most land area?,mondial_geo,SELECT COUNT(Mountain) FROM geo_mountain WHERE Country = ( SELECT Code FROM country ORDER BY Area DESC LIMIT 1 ),"CREATE TABLE `mountain` (
  Name TEXT PRIMARY KEY,
  Mountains TEXT,
  Height REAL,
  Type TEXT,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",260,6.73678731918335,250,"['mountain', 'country']"
831,How many vendors are having their products ordered with an average delivery time of 25 days? Hint: vendors refers to distinct BusinessEntityID; average delivery time of 25 days refers to AverageLeadTime = 25 and onOrderQty > 0,works_cycles,SELECT COUNT(DISTINCT BusinessEntityID) FROM ProductVendor WHERE AverageLeadTime = 25,"CREATE TABLE `productvendor` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Vendor(BusinessEntityID),
  AverageLeadTime INTEGER,
  StandardPrice REAL,
  LastReceiptCost REAL,
  LastReceiptDate DATETIME,
  MinOrderQty INTEGER,
  MaxOrderQty INTEGER,
  OnOrderQty INTEGER,
  UnitMeasureCode TEXT REFERENCES UnitMeasure(UnitMeasureCode),
  ModifiedDate DATETIME
);

CREATE TABLE `vendor` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  AccountNumber TEXT PRIMARY KEY,
  Name TEXT,
  CreditRating INTEGER,
  PreferredVendorStatus INTEGER,
  ActiveFlag INTEGER,
  PurchasingWebServiceURL TEXT,
  ModifiedDate DATETIME
);

",477,7.264200925827026,250,"['productvendor', 'vendor']"
832,How many adventure movies are there that were released in 2000? Hint: adventure movies refers to genre_name = 'Adventure'; released in 2000 refers to release_date LIKE '2000%',movies_4,"SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Adventure' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2000","CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

",231,6.663666009902954,250,"['movie', 'movie_genres', 'genre']"
833,Are there any post-production movies in Nederlands? Hint: post-production movies refers to movie_status = 'Post Production'; Nederlands refers to language_name = 'Nederlands';,movies_4,SELECT DISTINCT CASE WHEN T1.movie_status = 'Post Production' THEN 'YES' ELSE 'NO' END AS YORN FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Nederlands',"CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `country` (
  country_id INTEGER,
  country_iso_code TEXT,
  country_name TEXT
);

CREATE TABLE `movie_company` (
  movie_id INTEGER REFERENCES movie(None),
  company_id INTEGER REFERENCES production_company(None)
);

CREATE TABLE `production_country` (
  movie_id INTEGER REFERENCES movie(movie_id),
  country_id INTEGER REFERENCES country(country_id)
);

",222,6.642277240753174,250,"['movie', 'country', 'movie_company', 'production_country']"
834,What is the rating and category of the podcast entitled Sitcomadon? Hint: entitled refers to title; 'Sitcomadon' is the title of podcast,music_platform_2,"SELECT DISTINCT T3.rating, T1.category FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id INNER JOIN reviews AS T3 ON T3.podcast_id = T2.podcast_id WHERE T2.title = 'Sitcomadon'","CREATE TABLE `podcasts` (
  podcast_id TEXT PRIMARY KEY,
  itunes_id INTEGER,
  slug TEXT,
  itunes_url TEXT,
  title TEXT
);

CREATE TABLE `categories` (
  podcast_id TEXT PRIMARY KEY REFERENCES podcasts(None),
  category TEXT PRIMARY KEY
);

",147,6.52509617805481,250,"['podcasts', 'categories']"
835,"Calculate the average usage of each bike in the third quarter of year 2013. Find the average wind direction within the same period. Hint: the third quarter of year 2013 implies 3 month interval, including July, August, and September of 2013 and refers to date; the average usage of each bike = DIVIDE(SUM(duration), COUNT(bike_id)); the average wind direction = DIVIDE(SUM(wind_dir_degrees), COUNT(date));",bike_share_1,"SELECT AVG(T1.duration), AVG(T2.wind_dir_degrees) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE SUBSTR(CAST(T2.date AS TEXT), 1, INSTR(T2.date, '/') - 1) IN ('7', '8', '9') AND SUBSTR(CAST(T2.date AS TEXT), -4) = '2013'","CREATE TABLE `weather` (
  date TEXT,
  max_temperature_f INTEGER,
  mean_temperature_f INTEGER,
  min_temperature_f INTEGER,
  max_dew_point_f INTEGER,
  mean_dew_point_f INTEGER,
  min_dew_point_f INTEGER,
  max_humidity INTEGER,
  mean_humidity INTEGER,
  min_humidity INTEGER,
  max_sea_level_pressure_inches REAL,
  mean_sea_level_pressure_inches REAL,
  min_sea_level_pressure_inches REAL,
  max_visibility_miles INTEGER,
  mean_visibility_miles INTEGER,
  min_visibility_miles INTEGER,
  max_wind_Speed_mph INTEGER,
  mean_wind_speed_mph INTEGER,
  max_gust_speed_mph INTEGER,
  precipitation_inches TEXT,
  cloud_cover INTEGER,
  events TEXT,
  wind_dir_degrees INTEGER,
  zip_code TEXT
);

CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

",220,6.6331470012664795,250,"['weather', 'trip']"
836,State the max temperature of the weather station which has the no.21 store on 2012/11/9. Hint: no.21 store refers to store_nbr = 21; on 2012/11/9 refers to date = '2012-11-09'; max temperature refers to tmax,sales_in_weather,SELECT tmax FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 21 AND T1.`date` = '2012-11-09',"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `relation` (
  store_nbr INTEGER REFERENCES sales_in_weather(store_nbr),
  station_nbr INTEGER REFERENCES weather(station_nbr)
);

",187,6.563559532165527,250,"['weather', 'relation']"
837,List the brand names of bottled root beer whose first brewing year is no later than 1930. Hint: bottled root beer refers to ContainerType = 'Bottle'; first brewing year is no later than 1930 refers to FirstBrewedYear < 1930;,beer_factory,SELECT T2.BrandName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T2.FirstBrewedYear < '1930-01-01' AND T1.ContainerType = 'Bottle' ORDER BY T2.FirstBrewedYear LIMIT 1,"CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",194,6.598059415817261,250,['rootbeerbrand']
838,"Among all the users with the average ratings of at least 4 and above of all reviews, calculate the percent that have no fans or followers. Hint: average ratings of at least 4 refers to user_average_stars > = 4; no fans or followers refers to user_fans = 'None'; percentage = divide(count(user_id where user_average_stars > = 4 and user_fans = 'None'), sum(user_id where user_average_stars > = 4))*100%",public_review_platform,SELECT CAST(SUM(CASE WHEN user_fans = 'None' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(user_id) FROM Users WHERE user_average_stars >= 4,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",277,6.7784507274627686,250,"['reviews', 'users']"
839,"How many games are not of the genres 'Role-Playing', 'Shooter' and 'Simulation'? Hint: not of the genres 'Role-Playing', 'Shooter' and 'Simulation' refers to genre_name NOT IN ('Role-Playing', 'Shooter', 'Simulation');",video_games,"SELECT COUNT(T2.id) FROM genre AS T1 INNER JOIN game AS T2 ON T1.id = T2.genre_id WHERE T1.genre_name NOT IN ('Role-Playing', 'Shooter', 'Simulation')","CREATE TABLE `genre` (
  id INTEGER,
  genre_name TEXT
);

",200,6.6091108322143555,250,['genre']
840,To which user group do most of the users who uses a vivo device belong? Hint: user group where most of the users belong refers to MAX(COUNT(group)); vivo device refers to phone_brand = 'vivo';,talkingdata,"SELECT T.`group` FROM ( SELECT T2.`group`, COUNT(`group`) AS num FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'vivo' GROUP BY T2.`group` ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",219,6.629343509674072,250,['phone_brand_device_model2']
841,State the documentary film titles with longest length. Hint: documentary film refers to name = 'documentary'; longest length refers to max(length),movie_3,SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T3.category_id = T2.category_id WHERE T3.name = 'documentary' ORDER BY T1.length DESC LIMIT 1,"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",193,6.596877574920654,250,"['film_text', 'film']"
842,"How many paragraphs are there in the scene whose description is ""A Sea-port in Cyprus. An open place near the quay.""?",shakespeare,SELECT SUM(T2.ParagraphNum) FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T1.Description = 'A Sea-port in Cyprus. An open place near the quay.',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",147,6.530925989151001,250,"['works', 'paragraphs']"
843,"What is the total value of cancelled orders? Hint: total value = SUM(MULTIPLY(quantityOrdered, priceEach)); cancelled orders refers to status = 'Cancelled';",car_retails,SELECT SUM(T1.quantityOrdered * T1.priceEach) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T2.status = 'Cancelled',"CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

",167,6.548937559127808,250,['orders']
844,"Define the bounding box of the object sample no. 7 on image no. 42. Hint: bounding box of the object refers to (X, Y, W, H); sample no.7 on image no.42 refers to IMG_ID = 42 and OBJ_SAMPLE_ID = 7",image_and_language,"SELECT X, Y, W, H FROM IMG_OBJ WHERE IMG_ID = 42 AND OBJ_SAMPLE_ID = 7","CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

",217,6.632383346557617,250,['img_obj']
845,Which sales areas are expected to have the highest yearly sales quota? Hint: highest yearly sales quota refers to Max(SalesQuota);,works_cycles,SELECT T2.Name FROM SalesPerson AS T1 INNER JOIN SalesTerritory AS T2 ON T1.TerritoryID = T2.TerritoryID GROUP BY T1.TerritoryID ORDER BY SUM(T1.SalesQuota) DESC LIMIT 1,"CREATE TABLE `salesterritory` (
  TerritoryID INTEGER,
  Name TEXT PRIMARY KEY,
  CountryRegionCode TEXT REFERENCES CountryRegion(CountryRegionCode),
  Group TEXT,
  SalesYTD REAL,
  SalesLastYear REAL,
  CostYTD REAL,
  CostLastYear REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salespersonquotahistory` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES SalesPerson(BusinessEntityID),
  QuotaDate DATETIME PRIMARY KEY,
  SalesQuota REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",456,7.211275100708008,250,"['salesterritory', 'salespersonquotahistory']"
846,Which city was the 1992 Summer Olympic held? Hint: city refers to city_name; 1992 Summer Olympic refers to games_name = '1992 Summer';,olympics,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1992 Summer',"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",190,6.575133800506592,250,"['games_city', 'city']"
847,How many users participated in the mental health survey for 2014? Hint: mental health survey for 2014 refers to SurveyID = 2014,mental_health_survey,SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2014',"CREATE TABLE `survey` (
  SurveyID INTEGER,
  Description TEXT
);

",142,6.527071952819824,250,['survey']
848,"What is the percentage of winning rate of improvement since Alain Vigneault became the coach of Vancouver Canucks in 2006 season? Hint: winning rate refers to DIVIDE (w, SUM(w, l)); Vancouver Canucks is name of team where tmID = 'VAN'
Winning rate refers to DIVIDE(wins in year = '2005/2006'(ADD(wins+loses); improvement refers to SUBTRACT(DIVIDE(wins in year = '2005'(ADD(wins+loses), DIVIDE(wins in year = '2006'(ADD(wins+loses))
",hockey,SELECT SUM(CASE WHEN T1.year = 2006 THEN CAST(T1.W AS REAL) * 100 / (T1.W + T1.L) ELSE 0 END) - ( SELECT CAST(W AS REAL) * 100 / (W + L) FROM Teams WHERE year = '2005' AND name = 'Vancouver Canucks' ) FROM Teams AS T1 INNER JOIN Coaches AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year INNER JOIN Master AS T3 ON T2.coachID = T3.coachID WHERE T1.name = 'Vancouver Canucks' AND T3.firstName = 'Alain' AND T3.lastName = 'Vigneault',"CREATE TABLE `awardscoaches` (
  coachID TEXT REFERENCES Coaches(coachID),
  award TEXT,
  year INTEGER,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",366,6.975438833236694,250,"['awardscoaches', 'teams']"
849,"What is the percentage of restaurants that paid a fine of 250 among all establishments? Hint: a fine of 250 refers to fine = 250; percentage = divide(sum(license_no where fine = 250), count(license_no)) * 100%",food_inspection_2,SELECT CAST(COUNT(CASE WHEN T3.fine = 250 THEN T1.license_no END) AS REAL) * 100 / COUNT(T1.license_no) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE T1.facility_type = 'Restaurant',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

",183,6.569029092788696,250,"['inspection', 'violation']"
850,"Calculate the percentage of sold blades in the total number of transactions. Hint: percentage = MULTIPLY(DIVIDE(SUM(Quantity WHERE Name = 'Blade'), SUM(Quantity)), 1.0); 'blades' refers to name of product;",sales,"SELECT CAST(SUM(IIF(T1.Name = 'Blade', T2.Quantity, 0)) AS REAL) * 100 / SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

",172,6.552597761154175,250,"['sales', 'products']"
851,"What is the difference in salary of the top 2 employees with the highest number of territories in charge? Hint: highest number of territories refers to max(TerritoryID); difference in salary = subtract(employeeA.Salary, employeeB.Salary)",retail_world,"SELECT MAX(Salary) - MIN(Salary) FROM ( SELECT T1.Salary FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.EmployeeID, T1.Salary ORDER BY COUNT(T2.TerritoryID) DESC LIMIT 2 ) T1","CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",194,6.597255706787109,250,['employees']
852,How many students attended universities were there in 2011? Hint: in 2011 refers to year = 2011;,university,SELECT SUM(num_students) FROM university_year WHERE year = 2011,"CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",161,6.540070056915283,250,['university_year']
853,"Among the products with an average lead time of 60, which vendor has the highest profit on net? Indicate the credit rating of such vendor. Hint: profit on net = SUBTRACT(LastReceiptCost, StandardPrice);",works_cycles,"SELECT T2.Name, T2.CreditRating FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.AverageLeadTime = 60 ORDER BY T1.LastReceiptCost - T1.StandardPrice DESC LIMIT 1","CREATE TABLE `productvendor` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Vendor(BusinessEntityID),
  AverageLeadTime INTEGER,
  StandardPrice REAL,
  LastReceiptCost REAL,
  LastReceiptDate DATETIME,
  MinOrderQty INTEGER,
  MaxOrderQty INTEGER,
  OnOrderQty INTEGER,
  UnitMeasureCode TEXT REFERENCES UnitMeasure(UnitMeasureCode),
  ModifiedDate DATETIME
);

CREATE TABLE `vendor` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  AccountNumber TEXT PRIMARY KEY,
  Name TEXT,
  CreditRating INTEGER,
  PreferredVendorStatus INTEGER,
  ActiveFlag INTEGER,
  PurchasingWebServiceURL TEXT,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productlistpricehistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ListPrice REAL,
  ModifiedDate DATETIME
);

",475,7.259556293487549,250,"['productvendor', 'vendor', 'product', 'productlistpricehistory']"
854,"Among respondents who participated in the survey in 2016, what percentage had a mental health disorder in the past? Hint: respondents and 'users' are synonyms; percentage = divide(count(SurveyID = 2016& QuestionID = 32 & AnswerText = 'Yes'), count(SurveyID = 2016& QuestionID = 32))*100%",mental_health_survey,SELECT CAST(SUM(CASE  WHEN T1.AnswerText LIKE 'Yes' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.SurveyID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.QuestionID = 32 AND T1.SurveyID = 2016,"CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",195,6.603482961654663,250,['answer']
855,"What is the percentage of rated movies were released in year 2021? Hint: percentage = DIVIDE(SUM(movie_release_year = 2021), COUNT(rating_id)) as percent; movies released in year 2021 refers to movie_release_year = 2021;",movie_platform,SELECT CAST(SUM(CASE WHEN T1.movie_release_year = 2021 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",188,6.57170295715332,250,['movies']
856,List down the languages of the countries that have population below 8000. Hint: population below 8000 refers to Population < 8000;,world,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Population < 8000,"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",147,6.527252912521362,250,"['countrylanguage', 'country']"
857,How many students enlisted in the navy? Hint: navy refers to organ = 'navy';,student_loan,SELECT COUNT(name) FROM enlist WHERE organ = 'navy',"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

",172,6.555491924285889,250,['enlist']
858,Please list all the models of the devices used by a female user. Hint: models of the devices refers to device_model; female refers to gender = 'F';,talkingdata,SELECT T1.device_model FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T1.device_id = T2.device_id WHERE T2.gender = 'F',"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",205,6.61411714553833,250,['phone_brand_device_model2']
859,Who is the director of the movie Pinocchio? Hint: Pinocchio is the name of the movie;,disney,SELECT director FROM director WHERE name = 'Pinocchio',"CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

",147,6.52438759803772,250,"['movies_total_gross', 'director']"
860,"Among the patients that died, what is the condition of the oldest patient? Hint: if deathdate is not null, it means this patient died; condition refers to DESCRIPTION from conditions; the oldest patient refers to MAX(SUBTRACT(strftime('%Y', deathdate), strftime('%Y', birthdate)));",synthea,"SELECT T1.DESCRIPTION FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T2.deathdate IS NOT NULL ORDER BY strftime('%Y', T2.deathdate) - strftime('%Y', T2.birthdate) DESC LIMIT 1","CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",217,6.631727695465088,250,"['conditions', 'patients']"
861,Which nation completed its external debt reporting in 1980 and had a Land under cereal production value of 3018500? Hint: completed its external debt reporting refers to ExternalDebtReportingStatus = 'Actual'; in 1980 refers to year = 1980; Land under cereal production value of 3018500 refers to value = 3018500,world_development_indicators,SELECT T2.CountryCode FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName LIKE 'Land under cereal production%' AND T1.Value = 3018500 AND T1.Year = 1980 AND T2.ExternalDebtReportingStatus = 'Actual',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",211,6.623002290725708,250,"['country', 'indicators']"
862,List out the nation of players who played for the 1997-1998 season . Hint: players refers to PlayerName; 1997-1998 season refers to SEASON = '1997-1998';,ice_hockey_draft,SELECT DISTINCT T2.nation FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '1997-1998',"CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",172,6.554378986358643,250,"['seasonstatus', 'playerinfo']"
863,"What is the average winning margin of all the matches SC Ganguly has played in? Hint: SC Ganguly refers to Player_Name = 'SC Ganguly'; the average winning margin = divide(sum(Win_Margin), count(Match_Id)) where Player_Name = 'SC Ganguly'",soccer_2016,SELECT CAST(SUM(T3.Win_Margin) AS REAL) / COUNT(*) FROM Player AS T1 INNER JOIN Player_Match AS T2 ON T1.Player_Id = T2.Player_Id INNER JOIN Match AS T3 ON T2.Match_Id = T3.Match_Id WHERE T1.Player_Name = 'SC Ganguly',"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `win_by` (
  Win_Id INTEGER,
  Win_Type TEXT
);

CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

",269,6.759711027145386,250,"['player', 'win_by', 'match']"
864,"Among the customers in Asia, how many customers are in debt? Hint: customers in Asia refer to n_name where r_name = 'ASIA'; customers in debt refer to c_acctbal < 0;",retails,SELECT COUNT(T1.n_name) FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.c_acctbal < 0 AND T3.r_name = 'ASIA',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

CREATE TABLE `region` (
  r_regionkey INTEGER,
  r_name TEXT,
  r_comment TEXT
);

",169,6.547958135604858,250,"['customer', 'nation', 'region']"
865,How much does the dish on page 2 of menu ID 12474 cost? Hint: page 2 refers to page_number = 2;,menu,SELECT T1.price FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T2.id = T1.menu_page_id WHERE T2.menu_id = 12474 AND T2.page_number = 2,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",143,6.5215842723846436,250,"['dish', 'menuitem']"
866,"How many times is the sodium content in Lasagne-Spinach Spirals to Beef and Spinach Pita Pockets? Hint: sodium is a name of an ingredient; calculation = DIVIDE(SUM(title = 'Lasagne-Spinach Spirals' THEN sodium), SUM(title = 'Beef and Spinach Pita Pockets' THEN sodium))",cookbook,SELECT CAST(SUM(CASE WHEN T1.title = 'Lasagne-Spinach Spirals' THEN T2.sodium ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T1.title = 'Beef and Spinach Pita Pockets' THEN T2.sodium ELSE 0 END) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id,"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",202,6.60567831993103,250,"['quantity', 'recipe', 'ingredient']"
867,"What is the height in centimeter of the tallest player born in Edmonton, Alberta, Canada? Hint: height in centimeter refers to height_in_cm; tallest player refers to MAX(height_in_cm); born in Edmonton, Alberta, Canada refers to birthplace = 'Edmonton, AB, CAN';",ice_hockey_draft,"SELECT T2.height_in_cm FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T1.birthplace = 'Edmonton, AB, CAN' ORDER BY T2.height_in_cm DESC LIMIT 1","CREATE TABLE `height_info` (
  height_id INTEGER,
  height_in_cm INTEGER,
  height_in_inch TEXT
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",188,6.5744428634643555,250,"['height_info', 'playerinfo']"
868,"Find the percentage of 5 stars rated business. Hint: percentage refers to DIVIDE(COUNT(stars = 5), COUNT(business_id)) * 100%",public_review_platform,SELECT CAST(SUM(CASE WHEN stars = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(stars) FROM Business,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

",199,6.615137100219727,250,['reviews']
869,How many active businesses are opened during late afternoon in the Phoenix city? List out the top 3 categories name for these businesses. Hint: opened during late afternoon refers to Business_Hours where opening_time ≥ '5PM'; active businesses refer to business_id where active = 'true';,public_review_platform,SELECT DISTINCT T4.category_name FROM Business_Hours AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T2.active = 'true' AND T2.city = 'Phoenix' AND T1.opening_time >= '5PM' LIMIT 3,"CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",224,6.644872426986694,250,"['business_hours', 'business', 'business_categories', 'categories']"
870,Please provide the IDs of any three AdventureWorks product subcategories.,works_cycles,SELECT DISTINCT ProductCategoryID FROM ProductSubcategory LIMIT 3,"CREATE TABLE `ProductSubcategory` (
  ProductSubcategoryID INTEGER,
  ProductCategoryID INTEGER REFERENCES ProductCategory(ProductCategoryID),
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",439,7.183792352676392,250,['ProductSubcategory']
871,"Among all the orders, which products sold for the most amount? Hint: the most amount refers to max(sum(Quantity))",retail_world,SELECT ProductID FROM `Order Details` GROUP BY ProductID ORDER BY SUM(Quantity) DESC LIMIT 1,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `orderdetails` (
  OrderDetailID INTEGER,
  OrderID INTEGER REFERENCES Orders(OrderID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",163,6.546466112136841,250,"['orders', 'orderdetails']"
872,What is Disney's highest grossing action movie? Hint: action movie refers to movie_title where genre = 'Action'; highest grossing movie refers to MAX(total_gross),disney,"SELECT movie_title FROM movies_total_gross WHERE genre = 'Action' ORDER BY CAST(REPLACE(trim(total_gross, '$'), ',', '') AS REAL) DESC LIMIT 1","CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

",161,6.542312383651733,250,['movies_total_gross']
873,What is the cost for the sports? Hint: cost refers to StandardCost;,works_cycles,SELECT T2.StandardCost FROM Product AS T1 INNER JOIN ProductCostHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE '%Sport%',"CREATE TABLE `SalesOrderHeader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",440,7.241333246231079,250,"['productcategory', 'productdescriptionculture']"
874,"Which part is ordered in a bigger amount in order no.1, ""burnished seashell gainsboro navajo chocolate"" or ""salmon white grey tan navy""? Hint: amount refers to sum(l_quantity); order no.1 refers to l_orderkey = 1; ""burnished seashell gainsboro navajo chocolate"" or ""salmon white grey tan navy"" refers to p_name IN ('salmon white grey tan navy', 'burnished seashell gainsboro navajo chocolate')",retails,"SELECT T.p_name FROM ( SELECT T2.p_name, SUM(T1.l_quantity) AS num FROM lineitem AS T1 INNER JOIN part AS T2 ON T1.l_partkey = T2.p_partkey WHERE T2.p_name IN ('salmon white grey tan navy', 'burnished seashell gainsboro navajo chocolate') GROUP BY T1.l_partkey ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

CREATE TABLE `part` (
  p_partkey INTEGER,
  p_type TEXT,
  p_size INTEGER,
  p_brand TEXT,
  p_name TEXT,
  p_container TEXT,
  p_mfgr TEXT,
  p_retailprice REAL,
  p_comment TEXT
);

",237,6.66770076751709,250,"['lineitem', 'part']"
875,"Among the cases dismissed by the grand jury disposition, what percentage of cases is where the subject is injured? Hint: dismissed by the grand jury disposition refers to grand_jury_disposition = 'No Bill'; the subject is injured refers to subject_statuses = 'injured'; percentage = divide(count(incidents where subject_statuses = 'injured'), count(incidents)) where grand_jury_disposition = 'No Bill' * 100%",shooting,SELECT CAST(SUM(subject_statuses = 'Injured') AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE grand_jury_disposition = 'No Bill',"CREATE TABLE `incidents` (
  case_number TEXT PRIMARY KEY,
  date DATE,
  location TEXT,
  subject_statuses TEXT,
  subject_weapon TEXT,
  subjects TEXT,
  subject_count INTEGER,
  officers TEXT
);

CREATE TABLE `subjects` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

",209,6.618117570877075,250,"['incidents', 'subjects']"
876,"Among the salable products from the mountain product line, how many of them have the most reviews? Hint: salable product refers to FinishedGoodsFlag = 1; mountain product line refers to ProductLine = 'M'",works_cycles,SELECT SUM(CASE WHEN T2.ProductLine = 'M' THEN 1 ELSE 0 END) FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.FinishedGoodsFlag = 1 GROUP BY T1.ProductID ORDER BY COUNT(T1.ProductReviewID) DESC LIMIT 1,"CREATE TABLE `SalesOrderHeader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",470,7.304478406906128,250,"['product', 'productdescription', 'productdescriptionculture', 'productcategory', 'productcategoryproductdescriptionculture']"
877,How many methods does solution 1 have? And please tell me if solution 1 needs to be compiled. Hint: method refers to Name; solution refers to Solution.Id; Solution.Id = 1; solution needs to be compiled refers to WasCompiled = 0;,codebase_comments,"SELECT COUNT(T2.SolutionId) , CASE WHEN T1.WasCompiled = 0 THEN 'Needs' ELSE 'NoNeeds' END needToCompile FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.SolutionId = 1","CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",173,6.551408767700195,250,"['solution', 'method']"
878,"Which brand has the lowest star rating with a ""Too spicy!"" review? Hint: lowest star rating refers to MIN(StarRating); ""Too spicy!"" review refers to Review = 'Too Spicy!';",beer_factory,SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T2.BrandID = T1.BrandID WHERE T2.StarRating = 1 AND T2.Review = 'Too Spicy!',"CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",175,6.555961608886719,250,"['rootbeerreview', 'rootbeerbrand']"
879,"Among the times Mary Smith had rented a movie, how many of them happened in June, 2005? Hint: in June 2005 refers to year(payment_date) = 2005 and month(payment_date) = 6",movie_3,"SELECT COUNT(T1.customer_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH' AND STRFTIME('%Y',T1.payment_date) = '2005' AND STRFTIME('%Y', T1.payment_date) = '6'","CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",222,6.635708570480347,250,"['payment', 'customer']"
880,How many sales orders did the salesperson David R. Campbell create? Hint: SP is an abbreviation for Sales Person; PersonType = 'SP';,works_cycles,SELECT COUNT(T2.TotalDue) FROM Person AS T1 INNER JOIN SalesOrderHeader AS T2 ON T1.ModifiedDate = T2.DueDate WHERE T1.FirstName = 'David' AND T1.MiddleName = 'R' AND T1.LastName = 'Campbell' AND T1.PersonType = 'SP',"CREATE TABLE `salesperson` (
  BusinessEntityID INTEGER REFERENCES Employee(BusinessEntityID),
  TerritoryID INTEGER REFERENCES SalesTerritory(TerritoryID),
  SalesQuota REAL,
  Bonus REAL,
  CommissionPct REAL,
  SalesYTD REAL,
  SalesLastYear REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",455,7.2172651290893555,250,"['salesperson', 'salesorderheader']"
881,"For season 9, episode 17 of the show Law and Order, how many roles have been included in the credit? Hint: Law and Order refers to series = 'Law and Order'; included in the credit refers to credited = 'true'",law_episode,SELECT COUNT(T2.role) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.series = 'Law and Order' AND T1.season = 9 AND T1.episode = 17 AND T2.credited = 'true',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",170,6.549442291259766,250,"['credit', 'episode']"
882,"In businesses with a category of ""DJs"", how many businesses are rated less than 5? Hint: category of ""DJs"" refers to category_name = 'DJs'; rated less than 5 refers to stars < 5; businesses refer to business_id;",public_review_platform,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T3.category_name = 'DJs' AND T1.stars < 5,"CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",220,6.639257431030273,250,"['business_categories', 'categories']"
883,How many movies registered on Mubi are directed by Hong Sang-soo? Hint: Hong Sang-soo is the name of director;,movie_platform,SELECT COUNT(movie_id) FROM movies WHERE director_name = 'Hong Sang-soo',"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",149,6.526275873184204,250,['movies']
884,How many films have a duration between 100 to 110 minutes? Hint: duration between 100 to 110 minutes refers to length between 100 and 110,movie_3,SELECT COUNT(film_id) FROM film WHERE length BETWEEN 100 AND 110,"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",209,6.618105411529541,250,['film']
885,"Among the app users who were not active when event no.2 happened, how many of them belong to the category Property Industry 1.0? Hint: not active refers to is_active = 0; event no. refers to event_id; event_id = 2;",talkingdata,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id INNER JOIN app_events AS T3 ON T2.app_id = T3.app_id WHERE T3.is_active = 0 AND T1.category = 'Property Industry 1.0' AND T3.event_id = 2,"CREATE TABLE `app_all` (
  app_id INTEGER
);

CREATE TABLE `app_labels` (
  app_id INTEGER REFERENCES app_all(app_id),
  label_id INTEGER REFERENCES label_categories(label_id)
);

CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",228,6.6504645347595215,250,"['app_all', 'app_labels', 'events', 'label_categories']"
886,"For all the Yelp businesses that allow customers bring their own beer, what percentage of them are in ""Phoenix""? Hint: bring their own beer refers to attribute_name = 'BYOB' AND attribute_value = 'TRUE'; Phoenix refers to city = 'Phoenix'; percentage = MULTIPLY(DIVIDE(SUM(city = 'Phoenix'), COUNT(business_id)), 1.0)",public_review_platform,"SELECT CAST(SUM(CASE WHEN T3.city LIKE 'Phoenix' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.business_id) AS ""percentage"" FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.attribute_name LIKE 'BYOB' AND T2.attribute_value LIKE 'TRUE'","CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",253,6.693427085876465,250,"['business_attributes', 'business']"
887,"Among the bakeries, what is total number of bakery located at University Avenue, Palo Alto? Hint: bakery refers to food_type = 'bakery'; University Avenue refers to street_name = 'university ave.'; Palo Alto refers to city = 'palo alto'",restaurant,SELECT COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.food_type = 'bakery' AND T2.city = 'palo alto' AND T1.street_name = 'university ave.',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",175,6.550379514694214,250,"['location', 'generalinfo']"
888,"How many postal points with unique post office types are there in Ohio? Hint: postal points refer to zip_code; unique post office types refer to type = 'Unique Post Office'; Ohio is the name of the state, in which name = 'Ohio';",address,SELECT COUNT(T2.zip_code) FROM state AS T1 INNER JOIN zip_data AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Ohio' AND T2.type = 'Unique Post Office',"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",188,6.574188470840454,250,"['state', 'zip_data']"
889,Provide the destinations of flight number 1596. Hint: destination refers to DEST; flight number refers to OP_CARRIER_FL_NUM; OP_CARRIER_FL_NUM = 1596;,airline,SELECT DEST FROM Airlines WHERE OP_CARRIER_FL_NUM = 1596,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",161,6.534858226776123,250,"['airlines', 'air carriers']"
890,Calculate the total quantity ordered for 18th Century Vintage Horse Carriage and the average price. Hint: 18th Century Vintage Horse Carriage is a product name; average price = AVG(priceEach);,car_retails,"SELECT SUM(T2.quantityOrdered) , SUM(T2.quantityOrdered * T2.priceEach) / SUM(T2.quantityOrdered) FROM products AS T1 INNER JOIN orderdetails AS T2 ON T1.productCode = T2.productCode WHERE T1.productName = '18th Century Vintage Horse Carriage'","CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

CREATE TABLE `productlines` (
  productLine TEXT PRIMARY KEY,
  textDescription TEXT,
  htmlDescription TEXT,
  image BLOB
);

",175,6.549526929855347,250,"['products', 'productlines']"
891,"Give the name of the striker in the match no. 419169, over no.3, ball no.2, inning no.2. Hint: name of the striker refers to Player_Name; match no. 419169 refers to Match_Id = 419169; over no.3 refers to Over_Id = 3; ball no.2 refers to Ball_Id = 2; inning no.2 refers to Innings_No = 2",soccer_2016,SELECT T2.Player_Name FROM Ball_by_Ball AS T1 INNER JOIN Player AS T2 ON T1.Striker = T2.Player_Id WHERE T1.Match_Id = 419169 AND T1.Over_Id = 3 AND T1.Ball_Id = 2 AND T1.Innings_No = 2,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `player_match` (
  Match_Id INTEGER PRIMARY KEY REFERENCES Match(Match_Id),
  Player_Id INTEGER PRIMARY KEY REFERENCES Player(Player_Id),
  Role_Id INTEGER PRIMARY KEY REFERENCES Rolee(Role_Id),
  Team_Id INTEGER REFERENCES Team(Team_Id)
);

CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

",311,6.838161468505859,250,"['player', 'player_match', 'match']"
892,Tell the attribute of the weeds in image no.2377988. Hint: attribute of the weeds refers to OBJ_CLASS = 'weeds'; image no.2377988 refers to IMG_ID = 2377988,image_and_language,SELECT T2.ATT_CLASS FROM IMG_OBJ_att AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID INNER JOIN IMG_OBJ AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN OBJ_CLASSES AS T4 ON T3.OBJ_CLASS_ID = T4.OBJ_CLASS_ID WHERE T4.OBJ_CLASS = 'weeds' AND T1.IMG_ID = 2377988,"CREATE TABLE `ATT_CLASSES` (
  ATT_CLASS_ID INTEGER,
  ATT_CLASS TEXT
);

CREATE TABLE `OBJ_CLASSES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

CREATE TABLE `IMG_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `img_obj_att` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID),
  ATT_CLASS_ID INTEGER PRIMARY KEY REFERENCES ATT_CLASSES(ATT_CLASS_ID),
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",208,6.613416910171509,250,"['ATT_CLASSES', 'OBJ_CLASSES', 'IMG_obj', 'img_obj_att']"
893,"Where does the person with the BusinessEntityID ""5555"" live? Hint: where the person live refers addresstype.Name = 'Home'",works_cycles,"SELECT T3.City, T3.AddressLine1 FROM BusinessEntityAddress AS T1 INNER JOIN AddressType AS T2 ON T1.AddressTypeID = T2.AddressTypeID INNER JOIN Address AS T3 ON T1.AddressID = T3.AddressID WHERE T1.BusinessEntityID = 5555 AND T2.Name = 'Home'","CREATE TABLE `address` (
  AddressID INTEGER,
  AddressLine1 TEXT PRIMARY KEY,
  AddressLine2 TEXT PRIMARY KEY,
  City TEXT PRIMARY KEY,
  StateProvinceID INTEGER PRIMARY KEY REFERENCES StateProvince(None),
  PostalCode TEXT PRIMARY KEY,
  SpatialLocation TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `addresstype` (
  AddressTypeID INTEGER,
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",458,7.21816873550415,250,"['address', 'addresstype']"
894,"What types of food are served at the 4 top-reviewed restaurants? Hint: top-reviewed refers to review = 4; type of food refers to food_type

",restaurant,SELECT food_type FROM generalinfo WHERE review = ( SELECT MAX(review) FROM generalinfo ) LIMIT 4,"CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

",142,6.516035795211792,250,"['generalinfo', 'location']"
895,Give the title and the characters name of the most recent work of Shakespeare. Hint: characters name refers to CharName; most recent work refers to max(Date),shakespeare,"SELECT T1.Title, T4.CharName FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id ORDER BY T1.Date DESC LIMIT 1","CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

",150,6.528131008148193,250,"['works', 'characters']"
896,How many in debt customers in the household market segment are from Russia? Hint: in debt customers refer to c_custkey where c_acctbal < 0; c_mktsegment = 'HOUSEHOLD'; Russian is the name of the nation which refers to n_name = 'RUSSIA';,retails,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal < 0 AND T1.c_mktsegment = 'HOUSEHOLD' AND T2.n_name = 'RUSSIA',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",192,6.574878692626953,250,"['customer', 'nation']"
897,"Among professors with the highest teachability, how many of their students have high salary? Hint: highest teachability refers to MAX(teachability); high salary refers to salary = 'high';",cs_semester,SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id WHERE T1.salary = 'high' ORDER BY T2.teachingability DESC LIMIT 1,"CREATE TABLE `prof` (
  prof_id INTEGER,
  gender TEXT,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  popularity INTEGER,
  teachingability INTEGER,
  graduate_from TEXT
);

CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

",153,6.530156373977661,250,"['prof', 'ra']"
898,"How many path does the github address ""https://github.com/jeffdik/tachy.git"" have? Hint: github address refers to Url; Url = 'https://github.com/jeffdik/tachy.git';",codebase_comments,SELECT COUNT(DISTINCT T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git',"CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",175,6.554968595504761,250,['repo']
899,List down the game platform IDs of games with a region ID of 1.,video_games,SELECT T.game_platform_id FROM region_sales AS T WHERE T.region_id = 1,"CREATE TABLE `region` (
  id INTEGER,
  region_name TEXT
);

CREATE TABLE `region_sales` (
  region_id INTEGER REFERENCES region(id),
  game_platform_id INTEGER REFERENCES game_platform(id),
  num_sales REAL
);

",145,6.519659996032715,250,"['region', 'region_sales']"
900,At what latitude is the Thomas Kemper brand beer consumed the most? Hint: Thomas Kemper refers to BrandName = 'Thomas Kemper';  latitude the beer is consumed the most refers to MAX(COUNT(Latitude));,beer_factory,SELECT T3.Latitude FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID INNER JOIN geolocation AS T3 ON T1.LocationID = T3.LocationID WHERE T2.BrandName = 'Thomas Kemper' GROUP BY T3.Latitude ORDER BY COUNT(T1.BrandID) DESC LIMIT 1,"CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `rootbeer` (
  RootBeerID INTEGER,
  BrandID INTEGER REFERENCES rootbeerbrand(BrandID),
  ContainerType TEXT,
  LocationID INTEGER REFERENCES location(LocationID) REFERENCES geolocation(LocationID),
  PurchaseDate DATE
);

CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",176,6.5559728145599365,250,"['rootbeerbrand', 'rootbeer', 'transaction']"
901,Tell the number of 4-year public schools in UT whose graduation rate exceeds the average for the state. Hint: 4-year refers to level = '4-year'; public refers to control = 'Public'; UT refers to state_abbr = 'UT'; graduation rate exceeds the average for the state refers to awards_per_value > awards_per_state_value;,college_completion,SELECT COUNT(DISTINCT T1.chronname) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T2.state = T1.state WHERE T2.state_abbr = 'UT' AND T1.level = '4-year' AND T1.control = 'Public' AND T1.awards_per_value > T1.awards_per_state_value,"CREATE TABLE `institution_details` (
  unitid INTEGER,
  chronname TEXT,
  city TEXT,
  state TEXT,
  level TEXT,
  control TEXT,
  basic TEXT,
  hbcu TEXT,
  flagship TEXT,
  long_x REAL,
  lat_y REAL,
  site TEXT,
  student_count INTEGER,
  awards_per_value REAL,
  awards_per_state_value REAL,
  awards_per_natl_value REAL,
  exp_award_value INTEGER,
  exp_award_state_value INTEGER,
  exp_award_natl_value INTEGER,
  exp_award_percentile INTEGER,
  ft_pct REAL,
  fte_value INTEGER,
  fte_percentile INTEGER,
  med_sat_value TEXT,
  med_sat_percentile TEXT,
  aid_value INTEGER,
  aid_percentile INTEGER,
  endow_value TEXT,
  endow_percentile TEXT,
  grad_100_value REAL,
  grad_100_percentile INTEGER,
  grad_150_value REAL,
  grad_150_percentile INTEGER,
  pell_value REAL,
  pell_percentile INTEGER,
  retain_value REAL,
  retain_percentile INTEGER,
  ft_fac_value REAL,
  ft_fac_percentile INTEGER,
  vsa_year TEXT,
  vsa_grad_after4_first TEXT,
  vsa_grad_elsewhere_after4_first TEXT,
  vsa_enroll_after4_first TEXT,
  vsa_enroll_elsewhere_after4_first TEXT,
  vsa_grad_after6_first TEXT,
  vsa_grad_elsewhere_after6_first TEXT,
  vsa_enroll_after6_first TEXT,
  vsa_enroll_elsewhere_after6_first TEXT,
  vsa_grad_after4_transfer TEXT,
  vsa_grad_elsewhere_after4_transfer TEXT,
  vsa_enroll_after4_transfer TEXT,
  vsa_enroll_elsewhere_after4_transfer TEXT,
  vsa_grad_after6_transfer TEXT,
  vsa_grad_elsewhere_after6_transfer TEXT,
  vsa_enroll_after6_transfer TEXT,
  vsa_enroll_elsewhere_after6_transfer TEXT,
  similar TEXT,
  state_sector_ct INTEGER,
  carnegie_ct INTEGER,
  counted_pct TEXT,
  nicknames TEXT,
  cohort_size INTEGER
);

CREATE TABLE `state_sector_grads` (
  stateid INTEGER REFERENCES state_sector_details(stateid),
  state TEXT REFERENCES institution_details(state),
  state_abbr TEXT,
  control TEXT,
  level TEXT,
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT,
  grad_cohort_ct INTEGER
);

",209,6.614097356796265,250,"['institution_details', 'state_sector_grads']"
902,What is the average weight of players who have height greater than 72 inches. Hint: average weight refers to AVG(weight); height greater than 72 inches refers to height>72,hockey,SELECT AVG(weight) FROM Master WHERE height > 72,"CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

",254,6.696040868759155,250,['goalies']
903,"Find the average ride time of the bikes that started at Steuart at Market station and ended at Embarcadero at Sansome station in July 2014. Hint: started at refers to start_station_name; start_station_name = 'Steuart at Market'; ended at refers to end_station_name; end_station_name = 'Embarcadero at Sansome'; rides in July 2004 refers to start_date = '7/1/2014 0:00'AND end_date = '7/31/2014 12:59';average ride time = DIVIDE(SUM(duration), COUNT(id))",bike_share_1,SELECT AVG(duration) FROM trip WHERE start_date = '7/1/2014%' AND end_date = '7/31/2014%' AND start_station_name = 'Steuart at Market' AND end_station_name = 'Embarcadero at Sansome',"CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",264,6.743746995925903,250,"['trip', 'station']"
904,"State the inspection pass rate of Pockets Restaurant. Hint: Pockets refers to dba_name = 'POCKETS'; Restaurant refers to facility_type = 'Restaurant'; pass refers to results = 'Pass'; the inspection pass rate = divide(sum(inspection_id where results = 'Pass'), count(license_no)) where dba_name = 'POCKETS' and facility_type = 'Restaurant'",food_inspection_2,SELECT CAST(COUNT(CASE WHEN T2.results = 'Pass' THEN T2.inspection_id ELSE NULL END) AS REAL) * 100 / COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'POCKETS' AND T1.facility_type = 'Restaurant',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",212,6.618403434753418,250,"['inspection', 'establishment']"
905,How many crimes described as 'The theft of a motor vehicle' by the FBI have taken place in the Lake View community? Hint: lake view community refers to community_area_name = 'Lake View'; 'The theft of a motor vehicle' is the description,chicago_crime,SELECT SUM(CASE WHEN T3.community_area_name = 'Lake View' THEN 1 ELSE 0 END) FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T2.fbi_code_no = T1.fbi_code_no INNER JOIN Community_Area AS T3 ON T3.community_area_no = T2.community_area_no WHERE T1.description = 'The theft of a motor vehicle.',"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `fbi_code` (
  fbi_code_no TEXT PRIMARY KEY,
  title TEXT,
  description TEXT,
  crime_against TEXT
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",185,6.562472343444824,250,"['crime', 'fbi_code', 'community_area']"
906,"in which year costela01 obtained the best balance of games won as a coach? Hint: ""costela01"" is the coachID; best balance of game won refers to Max(Divide(won, Sum(won, lost)))",professional_basketball,SELECT year FROM coaches WHERE coachID = 'costela01' ORDER BY CAST(won AS REAL) / (won + lost) DESC LIMIT 1,"CREATE TABLE `awards_coaches` (
  id INTEGER,
  year INTEGER REFERENCES coaches(year),
  coachID TEXT REFERENCES coaches(coachID),
  award TEXT,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES teams(year),
  tmID TEXT PRIMARY KEY REFERENCES teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  won INTEGER,
  lost INTEGER,
  post_wins INTEGER,
  post_losses INTEGER
);

",202,6.604813575744629,250,"['awards_coaches', 'coaches']"
907,What is the title of the paper published in 1995 and whose author included Thomas Wiegand? Hint: published in 1995 refers to Year = 1995; 'Thomas Wiegand' is the name of author,authors,SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Name = 'Thomas Wiegand' AND T2.Year = 1995,"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `paperauthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

",168,6.542258262634277,250,"['paper', 'paperauthor']"
908,"List the titles of the films starred by Elvis Marx. Hint: 'Elvis Marx' is a full name of a film; full name refers to first_name, last_name",movie_3,SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.length BETWEEN 110 AND 150 AND T1.first_name = 'Russell' AND T1.last_name = 'Close',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",205,6.60727071762085,250,"['actor', 'film_actor']"
909,"Among the active businesses in Arizona, how many businesses work after 12PM? Hint: active businesses in Arizona refer to business_id where state = 'Arizona' and active = 'true'; work after 12PM refer to opening_time > '12PM';",public_review_platform,SELECT COUNT(DISTINCT T2.business_id) FROM Business_Hours AS T1 INNER JOIN Business AS T2 ON T1.business_id = T2.business_id INNER JOIN Business_Categories AS T3 ON T2.business_id = T3.business_id INNER JOIN Categories AS T4 ON T3.category_id = T4.category_id WHERE T2.active = 'true' AND T2.state = 'AZ' AND T1.opening_time > '12PM',"CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",219,6.6255269050598145,250,"['business_hours', 'business']"
910,How many chainring bolts were sold under sales ID 551971? Hint: Chainring Bolts' is name of product;,sales,SELECT T1.Quantity FROM Sales AS T1 INNER JOIN Products AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Name = 'Chainring Bolts' AND T1.SalesID = 551971,"CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",144,6.515540361404419,250,"['products', 'sales']"
911,"Which student is more satisfied with the course Machine Learning Theory, Willie Rechert or Laughton Antonio? Hint: sat refers to student's satisfaction degree with the course; more satisfied refers to MAX(sat);",cs_semester,"SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE (T1.f_name = 'Laughton' OR T1.f_name = 'Willie') AND (T1.l_name = 'Antonio' OR T1.l_name = 'Rechert') AND T3.name = 'Machine Learning Theory' ORDER BY T2.sat DESC LIMIT 1","CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",158,6.52809476852417,250,"['course', 'registration', 'student']"
912,"Among author ID of under 1000, who published the paper in affiliation with Zurich, ETH, provide paper ID, year and keyword if any. Hint: author ID of under 100 refers to AuthorId < 100; 'Zurich, ETH' is the Affiliation",authors,"SELECT T2.Id, T2.Year, T2.Keyword FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.AuthorId < 1000 AND T1.Affiliation = 'Zurich, ETH'","CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

CREATE TABLE `paperauthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

",182,6.559956073760986,250,"['paper', 'author', 'paperauthor']"
913,How many students enlisted in the fire-department? Hint: enlisted in the fire-department refers to organ = 'fire_department';,student_loan,SELECT COUNT(name) FROM enlist WHERE organ = 'fire_department',"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

",185,6.560739517211914,250,['enlist']
914,How many times has Mary Smith rented a film?,movie_3,SELECT COUNT(T1.customer_id) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH',"CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",174,6.552249193191528,250,"['rental', 'customer']"
915,"Player from which team has the highest point per minute in NBA from 1991 to 2000? Hint: team refers to tmID; the highest point per minute refers to max(divide(points, minutes)); NBA refers to lgID = 'NBA'; from 1991 to 2000 refers to year BETWEEN 1991 AND 2000",professional_basketball,SELECT tmID FROM players_teams WHERE year BETWEEN 1991 AND 2000 ORDER BY CAST(points AS REAL) / minutes DESC LIMIT 1,"CREATE TABLE `players_teams` (
  id INTEGER,
  playerID TEXT REFERENCES players(None),
  year INTEGER REFERENCES teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES teams(tmID),
  lgID TEXT,
  GP INTEGER,
  GS INTEGER,
  minutes INTEGER,
  points INTEGER,
  oRebounds INTEGER,
  dRebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  PF INTEGER,
  fgAttempted INTEGER,
  fgMade INTEGER,
  ftAttempted INTEGER,
  ftMade INTEGER,
  threeAttempted INTEGER,
  threeMade INTEGER,
  PostGP INTEGER,
  PostGS INTEGER,
  PostMinutes INTEGER,
  PostPoints INTEGER,
  PostoRebounds INTEGER,
  PostdRebounds INTEGER,
  PostRebounds INTEGER,
  PostAssists INTEGER,
  PostSteals INTEGER,
  PostBlocks INTEGER,
  PostTurnovers INTEGER,
  PostPF INTEGER,
  PostfgAttempted INTEGER,
  PostfgMade INTEGER,
  PostftAttempted INTEGER,
  PostftMade INTEGER,
  PostthreeAttempted INTEGER,
  PostthreeMade INTEGER,
  note TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",242,6.672343969345093,250,"['players_teams', 'teams']"
916,"What is the average median female age of all the residential areas in the Arecibo county? Hint: ""ARECIBO"" is the county; average median female age = Divide (Sum(median_female_age), Count(country))",address,SELECT SUM(T1.female_median_age) / COUNT(T1.zip_code) FROM zip_data AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code WHERE T2.county = 'ARECIBO',"CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `country` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  county TEXT PRIMARY KEY,
  state TEXT REFERENCES state(abbreviation)
);

",186,6.563566446304321,250,"['area_code', 'country']"
917,Give the neighborhood name of West Englewood community. Hint: West Englewood community refers to community_area_name = 'West Englewood',chicago_crime,SELECT T1.neighborhood_name FROM Neighborhood AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no WHERE T2.community_area_name = 'West Englewood',"CREATE TABLE `neighborhood` (
  neighborhood_name TEXT PRIMARY KEY,
  community_area_no INTEGER REFERENCES Community_Area(community_area_no)
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",162,6.53569483757019,250,"['neighborhood', 'community_area']"
918,"Among the shipments done by Sue Newell, how many of them are for S K L Enterprises Inc? Hint: ""S K L Enterprises Inc"" is the cust_name",shipping,SELECT COUNT(*) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN driver AS T3 ON T3.driver_id = T2.driver_id WHERE T1.cust_name = 'S K L Enterprises Inc' AND T3.first_name = 'Sue' AND T3.last_name = 'Newell',"CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

CREATE TABLE `driver` (
  driver_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip_code INTEGER,
  phone TEXT
);

",150,6.521991968154907,250,"['customer', 'shipment', 'driver']"
919,"Among the days on which over 100 units of item no.5 were sold in store no.3, on which date was the temperature range the biggest? Hint: over 100 units refers to units > 100; item no. 5 refers to item_nbr = 5; store no.3 refers to store_nbr = 3; the temperature range was the biggest refers to Max(Subtract(tmax, tmin))",sales_in_weather,SELECT T2.`date` FROM relation AS T1 INNER JOIN sales_in_weather AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T1.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND T2.item_nbr = 5 AND T2.units > 100 ORDER BY tmax - tmin DESC LIMIT 1,"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `relation` (
  store_nbr INTEGER REFERENCES sales_in_weather(store_nbr),
  station_nbr INTEGER REFERENCES weather(station_nbr)
);

CREATE TABLE `sales_in_weather` (
  date DATE PRIMARY KEY,
  store_nbr INTEGER PRIMARY KEY,
  item_nbr INTEGER PRIMARY KEY,
  units INTEGER
);

",206,6.610692501068115,250,"['weather', 'relation', 'sales_in_weather']"
920,"Describe the number of postal points and the countries in West Virginia. Hint: postal points refer to zip_code; West Virginia is the name of the state, in which name = 'West Virginia';",address,"SELECT COUNT(DISTINCT T2.zip_code), COUNT(DISTINCT T2.county) FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'West Virginia'","CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",175,6.552918910980225,250,"['state', 'zip_data']"
921,"Which payment method is most comonly used by the schools in the state of Georgia for the payment of donations? Hint: Georgia refer to school_state = 'GA'
",donor,SELECT T1.payment_method FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_state = 'GA' GROUP BY T2.school_state ORDER BY COUNT(T1.payment_method) DESC LIMIT 1,"CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

",150,6.527686595916748,250,['donations']
922,How many app IDs were included under science fiction category?,talkingdata,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id WHERE T1.category = 'science fiction',"CREATE TABLE `app_labels` (
  app_id INTEGER REFERENCES app_all(app_id),
  label_id INTEGER REFERENCES label_categories(label_id)
);

",182,6.565622568130493,250,['app_labels']
923,Provide the name of competitors from Greece. Hint: name refers to full_name; Greece refers to region_name = 'Greece';,olympics,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Greece',"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `noc_region` (
  id INTEGER,
  noc TEXT,
  region_name TEXT
);

",178,6.561676025390625,250,"['person_region', 'noc_region']"
924,What is the average education level of customers from the place with the highest average income per month? Hint: place with the highest average income per month refers to GEOID where MAX(INCOME_K); average education level refers to AVG(EDUCATIONNUM);,software_company,SELECT AVG(T1.EDUCATIONNUM) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T2.INCOME_K DESC LIMIT 1,"CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",175,6.555937051773071,250,"['demog', 'customers']"
925,"How many units of item no.5 were sold in store no.3 on the day in 2012 when the max temperature was the highest? Hint: item no.5 refers to item_nbr = 5; store no. 3 refers to store_nbr = 3; when the max temperature was highest refers to Max(tmax); in 2012 refers to SUBSTR(date, 1, 4) = '2012'",sales_in_weather,"SELECT T1.units FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr INNER JOIN weather AS T3 ON T2.station_nbr = T3.station_nbr WHERE T2.store_nbr = 3 AND SUBSTR(T1.`date`, 1, 4) = '2012' AND T1.item_nbr = 5 ORDER BY tmax DESC LIMIT 1","CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `relation` (
  store_nbr INTEGER REFERENCES sales_in_weather(store_nbr),
  station_nbr INTEGER REFERENCES weather(station_nbr)
);

CREATE TABLE `sales_in_weather` (
  date DATE PRIMARY KEY,
  store_nbr INTEGER PRIMARY KEY,
  item_nbr INTEGER PRIMARY KEY,
  units INTEGER
);

",210,6.615625858306885,250,"['weather', 'relation', 'sales_in_weather']"
926,Mention the name of author for paper id 5 and state the keyword of this page.,authors,"SELECT T1.Name, T3.Keyword FROM Author AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.AuthorId INNER JOIN Paper AS T3 ON T2.PaperId = T3.Id WHERE T2.PaperId = 5","CREATE TABLE `paperAuthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",133,6.508883714675903,250,"['paperAuthor', 'paper']"
927,"What portion of the nations in Latin America and the Caribbean had more than 50% of their land used for agriculture in 1961? Hint: portion = divide(count(CountryName where Year = '1961' and Value>50), count(CountryName))*100%; nations in Latin America and the Caribbean refers to region = 'Latin America & Caribbean';  more than 50% of their land used for agriculture refers to value where indicatorname = 'Agricultural land (% of land area)'>50; in 1961 refers to Year = '1961'",world_development_indicators,SELECT CAST(SUM(CASE WHEN T1.Value > 50 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.CountryCode) FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Year = 1961 AND T2.Region = 'Latin America & Caribbean' AND indicatorname = 'Agricultural land (% of land area)',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",257,6.736586809158325,250,"['country', 'countrynotes', 'indicators']"
928,"List all product only MOQ of 1,000 and with standard cost more than 17. Hint: MOQ refers to minimum order quantity; MOQ of 1 refers to MinOrderQty = 1; standard cost more than 48 refers to StandardCost > 48;",works_cycles,SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Vendor AS T3 ON T1.BusinessEntityID = T3.BusinessEntityID WHERE T1.MaxOrderQty = 1000 AND T2.StandardCost > 17,"CREATE TABLE `productcosthistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  StandardCost REAL,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",486,7.283083438873291,250,"['productcosthistory', 'product']"
929,"What is the title of the films in which Cuba Allen acted? Hint: 'Cuba Allen' is a full name of an actor; full name refers to first_name, last_name",movie_3,SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'Cuba' AND T1.last_name = 'Allen',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",203,6.608409404754639,250,"['actor', 'film_actor', 'film']"
930,What product have the highest unit price and how many quantity have been being sold? Hint: product refers to ProductID; highest unit price refers to Max(UnitPrice),retail_world,"SELECT T1.ProductName, T2.Quantity FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID ORDER BY T1.UnitPrice DESC LIMIT 1","CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `orderdetails` (
  OrderDetailID INTEGER,
  OrderID INTEGER REFERENCES Orders(OrderID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",170,6.549386739730835,250,"['products', 'orderdetails']"
931,"How many businesses are there in Scottsdale city under the category of ""Beauty & Spas""? Hint: category refers to category_name;",public_review_platform,SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.city LIKE 'Scottsdale' AND T1.category_name LIKE 'Beauty & Spas',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",191,6.5709710121154785,250,"['business', 'business_categories', 'categories']"
932,"Among the countries with note on the series code SM.POP.TOTL, how many of them are in the low-income group? Hint: countries refer to Countrycode; low-income group refers to incomegroup = 'Low income'; with notes refers to description IS NOT NULL; series code SM.POP.TOTL refers to Seriescode = 'SM.POP.TOTL'",world_development_indicators,SELECT COUNT(T1.Countrycode) FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Seriescode = 'SM.POP.TOTL' AND T1.IncomeGroup = 'Low income',"CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",205,6.611552000045776,250,"['countrynotes', 'country']"
933,Which customer made the order No. 10160? Give the contact name.,car_retails,"SELECT t2.contactFirstName, t2.contactLastName FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.orderNumber = '10160'","CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",143,6.519071817398071,250,"['orders', 'customers']"
934,List the names of all the publishers who published one game only. Hint: name of publisher refers to publisher_name; published one game only refers to count(publisher_id) = 1,video_games,"SELECT T.publisher_name FROM ( SELECT T2.publisher_name, COUNT(DISTINCT T1.game_id) FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id GROUP BY T2.publisher_name HAVING COUNT(DISTINCT T1.game_id) = 1 ) t","CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

CREATE TABLE `publisher` (
  id INTEGER,
  publisher_name TEXT
);

",169,6.548910617828369,250,"['game_publisher', 'publisher']"
935,What are the languages of the first two published books? Hint: first two published book refers to Min(publication_date); language refers to language_name,books,SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id ORDER BY T1.publication_date ASC LIMIT 2,"CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `book_language` (
  language_id INTEGER,
  language_code TEXT,
  language_name TEXT
);

",199,6.602891206741333,250,"['book', 'book_language']"
936,How many eateries applied in 2012? Hint: eateries applied in 2012 refer to business_id where application_date between '2012-01-01' and '2012-12-31';,food_inspection,"SELECT COUNT(business_id) FROM businesses WHERE STRFTIME('%Y', application_date) = '2012'","CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

",169,6.548525094985962,250,['businesses']
937,"How many users gave ""Pavee Lackeen: The Traveller Girl"" movie a rating score of 4? Hint: FALSE;",movie_platform,SELECT COUNT(T2.user_id) FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_title = 'Pavee Lackeen: The Traveller Girl' AND T2.rating_score = 4,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",148,6.525639772415161,250,"['movies', 'ratings']"
938,"Among the history works written by Shakespeare, how many works whose 1st acts have no more than 2 scenes? Hint: history refers to GenreType = 'History' ; 1st acts  refers to Act = 1; no more than 2 scenes refers to count(Scene) < 2",shakespeare,SELECT COUNT(DISTINCT T2.work_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T2.Act = 1 AND T2.Scene < 2 AND T1.GenreType = 'History',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",180,6.561956167221069,250,"['works', 'chapters']"
939,"In 1950, how many players whose teams have the losing rate less than 20%? Hint: in 1950 refers to year = 1950; losing rate less than 20% refers to divide(lost, add(won, lost)) < 0.2",professional_basketball,SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE CAST(T3.lost AS REAL) * 100 / (T3.lost + T3.won) < 20,"CREATE TABLE `players_teams` (
  id INTEGER,
  playerID TEXT REFERENCES players(None),
  year INTEGER REFERENCES teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES teams(tmID),
  lgID TEXT,
  GP INTEGER,
  GS INTEGER,
  minutes INTEGER,
  points INTEGER,
  oRebounds INTEGER,
  dRebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  PF INTEGER,
  fgAttempted INTEGER,
  fgMade INTEGER,
  ftAttempted INTEGER,
  ftMade INTEGER,
  threeAttempted INTEGER,
  threeMade INTEGER,
  PostGP INTEGER,
  PostGS INTEGER,
  PostMinutes INTEGER,
  PostPoints INTEGER,
  PostoRebounds INTEGER,
  PostdRebounds INTEGER,
  PostRebounds INTEGER,
  PostAssists INTEGER,
  PostSteals INTEGER,
  PostBlocks INTEGER,
  PostTurnovers INTEGER,
  PostPF INTEGER,
  PostfgAttempted INTEGER,
  PostfgMade INTEGER,
  PostftAttempted INTEGER,
  PostftMade INTEGER,
  PostthreeAttempted INTEGER,
  PostthreeMade INTEGER,
  note TEXT
);

CREATE TABLE `awards_players` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

",214,6.624415397644043,250,"['players_teams', 'awards_players']"
940,How many episodes have not won any Law & Order series awards? Hint: have not won any award refers to Result = 'Nominee',law_episode,SELECT COUNT(award_id) FROM Award WHERE Result = 'Nominee',"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  series TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  person_id TEXT REFERENCES Person(person_id),
  role TEXT,
  result TEXT
);

",148,6.522517204284668,250,['award']
941,"List down the ISBN of the books purchased by the customer with an email of fsier3e@ihg.com. Hint: ""fsier3e@ihg.com"" is the email of customer; ISBN refers to isbn13",books,SELECT T1.isbn13 FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T4.email = 'fsier3e@ihg.com',"CREATE TABLE `order_line` (
  line_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  book_id INTEGER REFERENCES book(None),
  price REAL
);

CREATE TABLE `cust_order` (
  order_id INTEGER,
  order_date DATETIME,
  customer_id INTEGER REFERENCES customer(None),
  shipping_method_id INTEGER REFERENCES shipping_method(None),
  dest_address_id INTEGER REFERENCES address(None)
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  email TEXT
);

",218,6.632564306259155,250,"['order_line', 'cust_order', 'customer']"
942,List the movie that has been rated most by 25 years old users.,movielens,SELECT T2.movieid FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T1.age = 25 GROUP BY T2.movieid ORDER BY COUNT(T1.userid) DESC LIMIT 1,"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `u2base` (
  userid INTEGER PRIMARY KEY REFERENCES users(None),
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  rating TEXT
);

",144,6.517162561416626,250,"['movies', 'u2base']"
943,"Who is the voice actor of the character ""Binkie Muddlefoot""? Hint: FALSE;",disney,SELECT `voice-actor` FROM `voice-actors` WHERE character = 'Binkie Muddlefoot',"CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

CREATE TABLE `characters` (
  movie_title TEXT PRIMARY KEY,
  release_date TEXT,
  hero TEXT REFERENCES voice-actors(character),
  villian TEXT,
  song TEXT
);

",143,6.520276308059692,250,"['voice-actors', 'characters']"
944,"What is the monthly average number of products shipped via Federal Shipping for the year 1996? Hint: monthly average number of products refers to DIVIDE(SUM(OrderID), 12); shipped via Federal Shipping refers to CompanyName = 'Federal Shipping'; for the year 1996 refers to year(ShippedDate) = 1996",retail_world,SELECT CAST(SUM(T1.ShipVia) AS REAL) / 12 FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T2.CompanyName = 'Federal Shipping' AND T1.ShippedDate LIKE '1996%',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",216,6.627331018447876,250,"['orders', 'shippers']"
945,What is the organization level for Human Resources Manager? Hint: Human Resources Manager is a job title,works_cycles,SELECT OrganizationLevel FROM Employee WHERE JobTitle = 'Human Resources Manager',"CREATE TABLE `jobcandidate` (
  JobCandidateID INTEGER,
  BusinessEntityID INTEGER REFERENCES Employee(None),
  Resume TEXT,
  ModifiedDate DATETIME
);

",443,7.1846818923950195,250,['jobcandidate']
946,"Among the players who died in Massachussets, how many of them have won an award? Hint: died in Massachussets refers to deathState = 'Massachussets'",hockey,SELECT COUNT(DISTINCT T1.playerID) FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID WHERE T1.deathState = 'MA',"CREATE TABLE `awardsplayers` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",249,6.689770936965942,250,"['awardsplayers', 'teams']"
947,List the first names of employees with trading quantity for more than 500. Hint: trading quantity for more than 500 refers to Quantity > 500;,sales,SELECT DISTINCT T1.FirstName FROM Employees AS T1 INNER JOIN Sales AS T2 ON T1.EmployeeID = T2.SalesPersonID WHERE T2.Quantity > 500,"CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `employees` (
  EmployeeID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",149,6.522606611251831,250,"['sales', 'employees']"
948,"What is the category of the inspection of the establishment named ""J & J FOOD""? Hint: the establishment named ""J & J FOOD"" refers to dba_name = 'J & J FOOD'",food_inspection_2,SELECT DISTINCT T4.category FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id INNER JOIN inspection_point AS T4 ON T3.point_id = T4.point_id WHERE T1.dba_name = 'J & J FOOD',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",162,6.539379835128784,250,"['inspection', 'establishment']"
949,"Please list the title of the pages on which the word ""grec"" occurred for over 20 times. Hint: occurred for over 20 times refers to occurrences > 20;",language_corpus,SELECT T3.title FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid INNER JOIN pages AS T3 ON T2.pid = T3.pid WHERE T1.word = 'grec' AND T2.occurrences > 20,"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",167,6.545866250991821,250,"['words', 'pages', 'pages_words']"
950,"List down the brand names of root beer that gained a 5-star rating from a customer's review in 2013. Calculate the unit profit available to wholesalers for each brand. Hint: 5-star rating refers to StarRating = 5; in 2013 refers to ReviewDate LIKE '2013%'; unit profit available to wholesalers = SUBTRACT(CurrentRetailPrice, WholesaleCost);",beer_factory,"SELECT T1.BrandName, T1.CurrentRetailPrice - T1.WholesaleCost AS result FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5 AND T2.ReviewDate BETWEEN '2013-01-01' AND '2013-12-31'","CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

",227,6.648881196975708,250,"['rootbeerbrand', 'rootbeerreview']"
951,What is the net worth of the actor starred in Misery who has a height ranging from 60 to 70 inches tall? Hint: Misery refers to Title = 'Misery'; height ranging from 60 to 70 inches refers to Height (Inches) BETWEEN 60 and 70,movie,SELECT T3.NetWorth FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Misery' AND T3.`Height (Inches)` BETWEEN 60 AND 70 AND T3.Gender = 'Male',"CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",180,6.561392307281494,250,"['actor', 'characters']"
952,How many of Gary Trousdale's movies are adventure movies? Hint: Gary Trousdale refers director = 'Gary Trousdale'; the adventure movie refers to genre = 'Adventure';,disney,SELECT COUNT(T.name) FROM ( SELECT T1.name FROM director AS T1 INNER JOIN movies_total_gross AS T2 ON T1.name = T2.movie_title WHERE T1.director = 'Gary Trousdale' AND T2.genre = 'Adventure' GROUP BY T1.name ) T,"CREATE TABLE `characters` (
  movie_title TEXT PRIMARY KEY,
  release_date TEXT,
  hero TEXT REFERENCES voice-actors(character),
  villian TEXT,
  song TEXT
);

CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

",167,6.543575286865234,250,"['characters', 'director']"
953,How many location IDs have actual resource hours of 2? Hint: actual resource hours of 2 refers to ActualResourceHrs = 2,works_cycles,SELECT COUNT(LocationID) FROM WorkOrderRouting WHERE ActualResourceHrs = 2,"CREATE TABLE `location` (
  LocationID INTEGER,
  Name TEXT PRIMARY KEY,
  CostRate REAL,
  Availability REAL,
  ModifiedDate DATETIME
);

",454,7.20534873008728,250,['location']
954,"Among all the customers in Brazil, how many of them have an account balance of less than 1000? Hint: customers refer to c_custkey; Brazil is the name of the nation which refers to n_name = 'BRAZIL'; account balance of less than 1000 refers to c_acctbal < 1000;",retails,SELECT COUNT(T1.c_custkey) FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'BRAZIL' AND T1.c_acctbal < 1000,"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",202,6.606001138687134,250,"['customer', 'nation']"
955,Please list the titles of all the films that the customer RUTH MARTINEZ has rented.,movie_3,SELECT T4.title FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id WHERE T1.first_name = 'RUTH' AND T1.last_name = 'MARTINEZ',"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `inventory` (
  inventory_id INTEGER,
  film_id INTEGER REFERENCES film(None),
  store_id INTEGER REFERENCES store(None),
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",184,6.568036317825317,250,"['film', 'inventory', 'customer', 'rental']"
956,How many transactions were made to purchase a bottle of beer using American Express? Hint: bottle of beer refers to ContainerType = 'Bottle'; American Express refers to CreditCardType = 'American Express';,beer_factory,SELECT COUNT(T1.RootBeerID) FROM rootbeer AS T1 INNER JOIN `transaction` AS T2 ON T1.RootBeerID = T2.RootBeerID WHERE T1.ContainerType = 'Bottle' AND T2.CreditCardType = 'American Express',"CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

CREATE TABLE `rootbeer` (
  RootBeerID INTEGER,
  BrandID INTEGER REFERENCES rootbeerbrand(BrandID),
  ContainerType TEXT,
  LocationID INTEGER REFERENCES location(LocationID) REFERENCES geolocation(LocationID),
  PurchaseDate DATE
);

",170,6.549107789993286,250,"['transaction', 'rootbeer']"
957,"What is the average rating of Apps falling under the racing genre and what is the percentage ratio of positive sentiment reviews? Hint: average rating = AVG(Rating); percentage = MULTIPLY(DIVIDE((SUM(Sentiment = 'Positive')), (COUNT(*)), 100));",app_store,"SELECT AVG(T1.Rating), CAST(COUNT(CASE WHEN T2.Sentiment = 'Positive' THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T2.Sentiment) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres = 'Racing'","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",172,6.549357175827026,250,"['playstore', 'user_reviews']"
958,How many athlete from China participate in the 2016 Summer Olympics? Hint: athletes from China refer to person_id where region_name = 'China'; the 2016 Summer Olympics refer to games_name = '2016 Summer';,olympics,SELECT COUNT(T3.id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id INNER JOIN person_region AS T4 ON T3.id = T4.person_id INNER JOIN noc_region AS T5 ON T4.region_id = T5.id WHERE T1.games_name = '2016 Summer' AND T5.region_name = 'China',"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `noc_region` (
  id INTEGER,
  noc TEXT,
  region_name TEXT
);

",207,6.611472845077515,250,"['person_region', 'games', 'noc_region']"
959,"List all living goalies who have greater than 50% wins among all games played. State their last name and first name. Hint: wins refers to W; all games played refers to GP;greater than 50% wins among all games played refers to DIVIDE(SUM(W),GP)*100>50",hockey,"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T1.deathYear IS NOT NULL GROUP BY T1.playerID HAVING CAST(SUM(T2.Min) AS REAL) / SUM(T2.GP) > 0.5","CREATE TABLE `abbrev` (
  Type TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Fullname TEXT
);

",285,6.799976587295532,250,"['goalies', 'goaliessc', 'goaliesshootout', 'scoring', 'scoringsc', 'scoringshooutout', 'scoringsup']"
960,"Indicate the name of the most versatile players of the Delhi Daredevils. Hint: if a player has multiple roles in a match, it means this player is versatile; name refers to Player_Name; most versatile player refers to MAX(COUNT(Role_id)); Delhi Daredevils refers to Team_Name = 'Delhi Daredevils'",soccer_2016,SELECT T3.Player_Name FROM Player_Match AS T1 INNER JOIN Team AS T2 ON T1.Team_Id = T2.Team_Id INNER JOIN Player AS T3 ON T1.Player_Id = T3.Player_Id WHERE T2.Team_Name = 'Delhi Daredevils' GROUP BY T3.Player_Name ORDER BY COUNT(T1.Role_Id) DESC LIMIT 1,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",277,6.773269176483154,250,"['player', 'team']"
961,What is the average number of actors acted in comedy movies? Hint: comedy is the name of a category; average number of actors refers to AVG(actor_id),movie_3,SELECT AVG(T1.actor_id) FROM film_actor AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id INNER JOIN actor AS T4 ON T4.actor_id = T1.actor_id WHERE T3.name = 'comedy',"CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",199,6.603705406188965,250,"['film_category', 'category']"
962,What kind of condition did Keven Kuhn have from 2016/9/24 to 2016/10/10? Describe the condition. Hint: kind of condition refers to DESCRIPTION from conditions; from 2016/9/24 to 2016/10/10 refers to START = '2016-09-24' and STOP = '2016-10-10';,synthea,SELECT T2.description FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Keven' AND T1.last = 'Kuhn' AND T2.start = '2016-09-24' AND T2.stop = '2016-10-10',"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

",256,6.700006484985352,250,['conditions']
963,"Of all the teams coached by the winner of the 1994 NBA Coach of the Year award, which team has lost the most times playing at home? Hint: of 1994 refers to year = 1994; 'NBA Coach of the Year' is the award; lost the most time at home refers to Max(homeLost)",professional_basketball,SELECT T3.tmID FROM awards_coaches AS T1 INNER JOIN coaches AS T2 ON T1.coachID = T2.coachID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE T1.year = 1994 AND T1.award = 'NBA Coach of the Year' GROUP BY T3.tmID ORDER BY SUM(T3.homeLost) DESC LIMIT 1,"CREATE TABLE `awards_coaches` (
  id INTEGER,
  year INTEGER REFERENCES coaches(year),
  coachID TEXT REFERENCES coaches(coachID),
  award TEXT,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES teams(year),
  tmID TEXT PRIMARY KEY REFERENCES teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  won INTEGER,
  lost INTEGER,
  post_wins INTEGER,
  post_losses INTEGER
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",229,6.658597230911255,250,"['awards_coaches', 'coaches', 'teams']"
964,"What is the full address of the most popular restaurant among the diners? Hint: full address refers to street_num, street_name, city; the most popular refers to max(review)",restaurant,"SELECT T2.street_name, T2.street_num, T2.city FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant ORDER BY T1.review DESC LIMIT 1","CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",146,6.524022102355957,250,"['location', 'generalinfo']"
965,How many users installed the app but are not active? Hint: installed refers to is_installed = 1; not active refers to is_active = 0;,talkingdata,SELECT COUNT(app_id) FROM app_events WHERE is_installed = 1 AND is_active = 0,"CREATE TABLE `app_all` (
  app_id INTEGER
);

",203,6.608324289321899,250,['app_all']
966,"What dates were the Don't Lie To Your Life Coach podcast reviews created? Hint: ""Don't Lie To Your Life Coach"" refers to title of podcast; date refers to created_at",music_platform_2,SELECT created_at FROM reviews WHERE podcast_id = ( SELECT podcast_id FROM podcasts WHERE title = 'Don''t Lie To Your Life Coach' ),"CREATE TABLE `reviews` (
  podcast_id TEXT REFERENCES podcasts(None),
  title TEXT,
  content TEXT,
  rating INTEGER,
  author_id TEXT,
  created_at TEXT
);

CREATE TABLE `podcasts` (
  podcast_id TEXT PRIMARY KEY,
  itunes_id INTEGER,
  slug TEXT,
  itunes_url TEXT,
  title TEXT
);

",154,6.528640031814575,250,"['reviews', 'podcasts']"
967,List any five of user ID who became elite user in 2006. Hint: year_id = '2006';,public_review_platform,SELECT user_id FROM Elite WHERE year_id = 2006 LIMIT 5,"CREATE TABLE `elite` (
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  year_id INTEGER PRIMARY KEY REFERENCES Years(None)
);

CREATE TABLE `years` (
  year_id INTEGER,
  actual_year INTEGER
);

",191,6.574382543563843,250,"['elite', 'years']"
968,"Among the current legislators who have served for more than 6 terms, how many of them were born after 1960? Hint: served for more than 6 terms refers to COUNT(bioguide > 6); born after 1960 refers to birthday_bio > = '1960-01-01'",legislator,SELECT COUNT(CID) FROM ( SELECT T1.bioguide_id AS CID FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.birthday_bio >= '1960-01-01' GROUP BY T2.bioguide HAVING COUNT(T2.bioguide) > 6 ),"CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",192,6.573399305343628,250,"['current', 'historical']"
969,"Among research postgraduate students, give the name of the course with the student satisfaction value of 1. Hint: research postgraduate students refers to type = 'RPG'; name of the course refers to name; satisfaction refers to sat; sat = 1;",cs_semester,SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.sat = 1 AND T1.type = 'RPG',"CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

",165,6.544908761978149,250,"['student', 'ra', 'course', 'registration']"
970,"List all the bad alias for zip codes in Puerto Rico. Hint: ""Puerto Rico"" refers to state = 'PR'",address,SELECT T1.bad_alias FROM avoid AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.state = 'PR',"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `alias` (
  zip_code INTEGER REFERENCES zip_data(zip_code),
  alias TEXT
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",161,6.5394065380096436,250,"['state', 'alias', 'zip_data']"
971,Name the taverns that failed the inspection in January 2010. Hint: tavern refers to facility_type = 'Tavern'; failed the inspection refers to results = 'Fail'; in January 2010 refers to inspection_date like '2010-01%',food_inspection_2,"SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN violation AS T3 ON T2.inspection_id = T3.inspection_id WHERE strftime('%Y-%m', T2.inspection_date) = '2010-01' AND T2.results = 'Fail' AND T1.facility_type = 'TAVERN'","CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",183,6.56085729598999,250,"['inspection', 'establishment']"
972,"List down all the tweet text posted from Australia. Hint: ""Australia"" is the Country",social_media,SELECT T1.text FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Australia',"CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

CREATE TABLE `location` (
  LocationID INTEGER,
  Country TEXT,
  State TEXT,
  StateCode TEXT,
  City TEXT
);

",124,6.468169212341309,250,"['twitter', 'location']"
973,"Among the title with single digit word count, list down 5 revision page ID of these titles. Hint: single digit word count refers to words < 10",language_corpus,SELECT revision FROM pages WHERE words < 10 LIMIT 5,"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",158,6.541171073913574,250,['pages']
974,"What is the language of the method ''PixieTests.SqlConnectionLayerTests.TestSqlCreateGuidColumn""? Hint: language refers to Lang；",codebase_comments,SELECT Lang FROM Method WHERE Name = 'PixieTests.SqlConnectionLayerTests.TestSqlCreateGuidColumn',"CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",148,6.530671119689941,250,['method']
975,Please list the titles of any three action films. Hint: action is a name of category,movie_3,SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Action' LIMIT 3,"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",182,6.562677383422852,250,"['film_text', 'film_category', 'category']"
976,What brand of beer has been the worst rated most times? Hint: brand of beer refers to BrandName; worst rated most times refers to MAX(COUNT(StarRating = 1));,beer_factory,SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T2.BrandID = T1.BrandID WHERE T2.StarRating = 1 GROUP BY T1.BrandName ORDER BY COUNT(T1.BrandName) DESC LIMIT 1,"CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",165,6.553060293197632,250,"['rootbeerreview', 'rootbeerbrand']"
977,Who is the heaviest athlete from Russia? Hint: the heaviest athlete refers to full_name where MAX(weight); from Russia refers to region_name = 'Russia';,olympics,SELECT T3.full_name FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Russia' ORDER BY T3.weight DESC LIMIT 1,"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

CREATE TABLE `noc_region` (
  id INTEGER,
  noc TEXT,
  region_name TEXT
);

",187,6.575479745864868,250,"['person_region', 'person', 'noc_region']"
978,"Calculate the percentage of the nominees who were born in USA. Hint: nominees refers to result = 'Nominee'; born in USA refers to birth_country = 'USA'; percentage = divide(sum(result = 'Nominee' and birth_country = 'USA'), count(Person.name)) * 100%",simpson_episodes,SELECT CAST(SUM(CASE WHEN T1.birth_country = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Person AS T1 INNER JOIN Award AS T2 ON T1.name = T2.person WHERE T2.result = 'Nominee';,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",202,6.610614538192749,250,"['award', 'person']"
979,"What percentage of deaths were caused by rifles? Hint: rifle refers to subject_weapon = 'rifles'; death refers to subject_statuses = 'Deceased'; percentage = divide(count(incidents where subject_weapon = 'rifles'), count(incidents)) where subject_statuses = 'Deceased' * 100%",shooting,SELECT CAST(SUM(subject_statuses = 'Deceased') AS REAL) * 100 / COUNT(case_number) FROM incidents WHERE subject_weapon = 'Rifle',"CREATE TABLE `incidents` (
  case_number TEXT PRIMARY KEY,
  date DATE,
  location TEXT,
  subject_statuses TEXT,
  subject_weapon TEXT,
  subjects TEXT,
  subject_count INTEGER,
  officers TEXT
);

CREATE TABLE `subjects` (
  case_number TEXT REFERENCES incidents(case_number),
  race TEXT,
  gender TEXT,
  last_name TEXT,
  first_name TEXT,
  full_name TEXT
);

",189,6.571876525878906,250,"['incidents', 'subjects']"
980,"Among the flights with air carrier ""Southwest Airlines Co.: WN"", provide the tail number of flights with an actual elapsed time lower than the 80% of the average actual elapsed time of listed flights. Hint: Southwest Airlines Co.: WN refers to Description = 'Southwest Airlines Co.: WN'; tail number refers to TAIL_NUM; actual elapsed time lower than the 80% of the average actual elapsed time refers to ACTUAL_ELAPSED_TIME < (MULTIPLY AVG(ACTUAL_ELAPSED_TIME), 0.8);",airline,SELECT T2.TAIL_NUM FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T1.Description = 'Southwest Airlines Co.: WN' AND T2.ACTUAL_ELAPSED_TIME < ( SELECT AVG(ACTUAL_ELAPSED_TIME) * 0.8 FROM Airlines ),"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",241,6.679945230484009,250,"['airlines', 'air carriers']"
981,"How is the Credit Rating for company whose rowguid is ""33671A4E-DF2B-4879-807B-E3F930DD5C0C""? Hint: CreditRating = 1 means 'Superior'; CreditRating = 2 means 'Excellent'; CreditRating = 3 means 'Above average'; CreditRating = 4 means 'Superior'; CreditRating = 5 means 'Below average'",works_cycles,SELECT T1.CreditRating FROM Vendor AS T1 INNER JOIN BusinessEntity AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.rowguid = '33671A4E-DF2B-4879-807B-E3F930DD5C0C',"CREATE TABLE `SalesOrderHeader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",526,7.4895102977752686,250,"['creditRating', 'person']"
982,"How many businesses operating in the ""Accessories"" category have received a ""wonderful experience"" review from users? Hint: Accessories category refers to category_name = 'Accessories'; wonderful experience review refers to stars > 3;",public_review_platform,SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.stars > 3 AND T1.category_name LIKE 'Accessories',"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",209,6.616605758666992,250,"['reviews', 'business_categories', 'categories']"
983,What is the total cost for all the orders placed on 5/29/2013? Hint: total cost = SUM(TotalDue); OrderDate = '2013-05-29';,works_cycles,SELECT SUM(TotalDue) FROM PurchaseOrderHeader WHERE OrderDate LIKE '2013-05-29%',"CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",471,7.246818780899048,250,['salesorderheader']
984,"Calculate the difference between the number of customers and the number of subscribers who did the trip in June 2013. Hint: customer refers to subscription_type = 'Customer'; subscribers refers to subscription_type = 'Subscriber'; difference = SUBTRACT(SUM(subscription_type = 'Subscriber' t), SUM(subscription_type = 'Customer')); trip in June 2013 refers to start_date BETWEEN '6/1/2013 0:00'AND '6/31/2013 12:59';",bike_share_1,"SELECT SUM(IIF(subscription_type = 'Subscriber', 1, 0)) - SUM(IIF(subscription_type = 'Customer', 1, 0)) FROM trip WHERE start_date LIKE '6/%/2013%'","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `status` (
  station_id INTEGER,
  bikes_available INTEGER,
  docks_available INTEGER,
  time TEXT
);

",242,6.6788060665130615,250,"['trip', 'status']"
985,"In between the episode 5 and10 of season 2, how many of them are credited for casting? Hint: between the episode 5 and 10 of season 20 refers to episode_id IN('S20-E5', 'S20-E6', 'S20-E7', 'S20-E8', 'S20-E9', 'S20-E10'); credited refers to credited = 'true'; for casting refers to role = 'casting'",simpson_episodes,"SELECT COUNT(credited) FROM Credit WHERE episode_id IN ( 'S20-E5',  'S20-E6',  'S20-E7',  'S20-E8',  'S20-E9',  'S20-E10' ) AND credited = 'true' AND role = 'casting';","CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

",239,6.674542427062988,250,['credit']
986,"What is the percentage of female OPPO users against the male OPPO users? Hint: percentage = DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE phone_brand = 'OPPO' AND gender = 'F'), 100), COUNT(device_id)), '%') AS 'the percentage of female OPPO users'; DIVIDE(MULTIPLY(CONCAT(COUNT(device_id WHERE phone_brand = 'OPPO' AND gender = 'M'), 100), COUNT(device_id)), '%') AS 'the percentage of male OPPO users';",talkingdata,"SELECT SUM(IIF(T2.gender = 'F', 1, 0)) * 100 / COUNT(T2.device_id) AS perFemale , SUM(IIF(T2.gender = 'M', 1, 0)) * 100 / COUNT(T2.device_id) AS perMale FROM phone_brand_device_model2 AS T1 INNER JOIN gender_age AS T2 ON T2.device_id = T1.device_id WHERE T1.phone_brand = 'OPPO'","CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

CREATE TABLE `app_all` (
  app_id INTEGER
);

",301,6.820765972137451,250,"['phone_brand_device_model2', 'app_all']"
987,List owner's name of businesses with a 100 score. Hint: owner's name of businesses refers to owner_name;,food_inspection,SELECT DISTINCT T2.owner_name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100,"CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

",138,6.517786502838135,250,['businesses']
988,"Sum up the number of business with ""ambience_romantic"" attribute. Hint: ""ambience_romantic"" attribute refers to attribute_name = 'ambience_romantic' AND attribute_value = 'true'",public_review_platform,SELECT COUNT(T2.business_id) FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name = 'ambience_romantic' AND T2.attribute_value = 'true',"CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

",208,6.619966268539429,250,['business_attributes']
989,How many shipments in 2017 were done by Sue Newell? Hint: in 2017 refers to Cast(ship_date AS DATE) = 2017,shipping,"SELECT COUNT(*) FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE STRFTIME('%Y', T1.ship_date) = '2017' AND T2.first_name = 'Sue' AND T2.last_name = 'Newell'","CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",153,6.5331737995147705,250,"['customer', 'shipment']"
990,How many states located in the Midwest region?,regional_sales,SELECT COUNT(DISTINCT T) FROM ( SELECT CASE  WHEN Region = 'Midwest' THEN StateCode ELSE NULL END AS T FROM Regions ) WHERE T IS NOT NULL,"CREATE TABLE `regions` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

",132,6.511139392852783,250,"['regions', 'store locations']"
991,"Which vendor gives the best profit on net for product ID 342? Hint: profit on net = subtract(LastReceiptCost, StandardPrice); best profit on net refers to max(subtract(LastReceiptCost, StandardPrice))",works_cycles,SELECT T1.Name FROM Vendor AS T1 INNER JOIN ProductVendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.ProductID = 342 ORDER BY T2.LastReceiptCost - T2.StandardPrice DESC LIMIT 1,"CREATE TABLE `productvendor` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Vendor(BusinessEntityID),
  AverageLeadTime INTEGER,
  StandardPrice REAL,
  LastReceiptCost REAL,
  LastReceiptDate DATETIME,
  MinOrderQty INTEGER,
  MaxOrderQty INTEGER,
  OnOrderQty INTEGER,
  UnitMeasureCode TEXT REFERENCES UnitMeasure(UnitMeasureCode),
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",479,7.268661975860596,250,"['productvendor', 'product']"
992,Which country have conducted population census from 2010 until 2012 and have completed vital registration? Hint: from 2010 until 2012 refers to LatestPopulationCensus between '2010' and '2012'; have completed vital registration refers to VitalRegistrationComplete = 'Yes'; CountryName = ShortName + LongName,world_development_indicators,"SELECT ShortName, LongName FROM Country WHERE LatestPopulationCensus >= 2010 AND LatestPopulationCensus < 2013 AND VitalRegistrationComplete = 'Yes'","CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",202,6.609630584716797,250,"['countrynotes', 'country']"
993,"Tally the full names of actors in the film ""Alabama Devil."" Hint: full name refers to first_name, last_name; ""Alabama Devil"" refers to title = 'ALABAMA DEVIL'",movie_3,"SELECT T2.first_name, T2.last_name FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T3.title = 'ALABAMA DEVIL'","CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",213,6.625474214553833,250,"['film_text', 'actor', 'film_actor']"
994,"In ""Florence. Without the walls. A tucket afar off"", what is the id of the character that was mentioned in ""His name, I pray you.""? Hint: ""Florence. Without the walls. A tucket afar off"" refers to chapters.Description = 'Florence. Without the walls. A tucket afar off.'; ""His name, I pray you."" refers to PlainText = 'His name, I pray you.'",shakespeare,"SELECT T1.character_id FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id WHERE T1.PlainText = 'His name, I pray you.' AND T2.Description = 'Florence. Without the walls. A tucket afar off.'","CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",217,6.630170583724976,250,"['characters', 'paragraphs']"
995,"How many inspections done by Lisa Tillman ended up with the result of ""Out of Business""? Hint: the result of ""Out of Business"" refers to results = 'Out of Business'",food_inspection_2,SELECT COUNT(T1.inspection_id) FROM inspection AS T1 INNER JOIN employee AS T2 ON T1.employee_id = T2.employee_id WHERE T2.first_name = 'Lisa' AND T2.last_name = 'Tillman' AND T1.results = 'Out of Business',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",159,6.538014650344849,250,"['inspection', 'employee']"
996,What is the local name of Ukraine that they are also known for? Hint: Ukraine is a name of country;,world,SELECT LocalName FROM Country WHERE Name = 'Ukraine',"CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",136,6.522000074386597,250,['country']
997,"How many online orders were shipped during the month of June 2018? Hint: online orders refers to Sales Channel = 'Online'; shipped during the month of June 2018 refers to SUBSTR(ShipDate, 1, 1) = '6' AND SUBSTR(ShipDate,-2) = '18'",regional_sales,"SELECT SUM(IIF(ShipDate LIKE '6/%/18' AND `Sales Channel` = 'Online', 1, 0)) FROM `Sales Orders`","CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",199,6.605889081954956,250,['sales orders']
998,Please give all the list prices of the product LL Fork. Hint: Hex Nut 5 is name of a product,works_cycles,SELECT T2.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'LL Fork',"CREATE TABLE `productlistpricehistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ListPrice REAL,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",449,7.196497917175293,250,"['productlistpricehistory', 'product']"
999,"How many levels are there left for Diego W Roel to reach if he/she could go to the max level for his/her position? Hint: max level for his position refers to max_lvl; job level refers to job_lvl; level left to reach the max = SUBTRACT(max_lvl, job_lvl)",book_publishing_company,SELECT T2.max_lvl - T1.job_lvl FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.fname = 'Diego' AND T1.minit = 'W' AND T1.lname = 'Roel',"CREATE TABLE `employee` (
  emp_id TEXT PRIMARY KEY,
  fname TEXT,
  minit TEXT,
  lname TEXT,
  job_id INTEGER REFERENCES jobs(job_id),
  job_lvl INTEGER,
  pub_id TEXT REFERENCES publishers(pub_id),
  hire_date DATETIME
);

",215,6.626606464385986,250,['employee']
1000,List the height and net worth of actors starred in Three Men and a Little Lady. Hint: Three Men and a Little Lady refers to Title = 'Three Men and a Little Lady',movie,"SELECT T3.`Height (Inches)`, T3.NetWorth FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Three Men and a Little Lady'","CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

",144,6.5200347900390625,250,"['characters', 'actor']"
1001,Provide the countries and the zip codes in the Virgin Islands. Hint: the Virgin Islands refer to state where name = 'Virgin Islands';,address,"SELECT T2.county, T2.zip_code FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Virgin Islands'","CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",162,6.541871070861816,250,"['state', 'zip_data']"
1002,Where was the order No. 10383 shipped to? Show me the address. Hint: Address comprises addressLine1 and addressLine2;,car_retails,"SELECT t2.addressLine1, t2.addressLine2 FROM orders AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.orderNumber = '10383'","CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `offices` (
  officeCode TEXT PRIMARY KEY,
  city TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  state TEXT,
  country TEXT,
  postalCode TEXT,
  territory TEXT
);

",158,6.53630256652832,250,"['orders', 'offices']"
1003,What is the postal code of the street address of the account that is latest updated? Hint: account latest updated refers to year(ModifiedDate) = 2022 and month(ModifiedDate) = 10,works_cycles,SELECT PostalCode FROM Address ORDER BY ModifiedDate DESC LIMIT 1,"CREATE TABLE `BusinessEntityAddress` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES BusinessEntity(BusinessEntityID),
  AddressID INTEGER PRIMARY KEY REFERENCES Address(AddressID),
  AddressTypeID INTEGER PRIMARY KEY REFERENCES AddressType(AddressTypeID),
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `Address` (
  AddressID INTEGER,
  AddressLine1 TEXT PRIMARY KEY,
  AddressLine2 TEXT PRIMARY KEY,
  City TEXT PRIMARY KEY,
  StateProvinceID INTEGER PRIMARY KEY REFERENCES StateProvince(None),
  PostalCode TEXT PRIMARY KEY,
  SpatialLocation TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",470,7.247751235961914,250,"['BusinessEntityAddress', 'Address']"
1004,Which professor advised Faina Mallinar to become a research assistant? Please give his or her full name. Hint: research assistant refers to the student who serves for research where the abbreviation is RA; full name refers to f_name and l_name;,cs_semester,"SELECT T1.first_name, T1.last_name FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T3.f_name = 'Faina' AND T3.l_name = 'Mallinar'","CREATE TABLE `prof` (
  prof_id INTEGER,
  gender TEXT,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  popularity INTEGER,
  teachingability INTEGER,
  graduate_from TEXT
);

CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",166,6.547244310379028,250,"['prof', 'ra', 'student']"
1005,How many employees came into the Quality Assurance Group in the year 2007? Hint: Quality Assurance Group is a group name of department; came in 2007 refers to year(StartDate) = 2007;,works_cycles,"SELECT COUNT(T1.BusinessEntityID) FROM EmployeeDepartmentHistory AS T1 INNER JOIN Department AS T2 ON T1.DepartmentID = T2.DepartmentID WHERE T2.GroupName = 'Quality Assurance' AND STRFTIME('%Y', T1.StartDate) = '2007'","CREATE TABLE `EmployeeDepartmentHistory` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Employee(None),
  DepartmentID INTEGER PRIMARY KEY REFERENCES Department(None),
  ShiftID INTEGER PRIMARY KEY REFERENCES Shift(None),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ModifiedDate DATETIME
);

CREATE TABLE `Department` (
  DepartmentID INTEGER,
  Name TEXT PRIMARY KEY,
  GroupName TEXT,
  ModifiedDate DATETIME
);

",476,7.258514642715454,250,"['EmployeeDepartmentHistory', 'Department']"
1006,Calculate the total quantity of purchased product that has been prepared by employee number 257 and is in pending shipment status. Hint: employee number 257 refers to EmployeeID = 257; pending shipment status refers to Status = 3,works_cycles,SELECT SUM(T2.OrderQty) FROM PurchaseOrderHeader AS T1 INNER JOIN PurchaseOrderDetail AS T2 ON T1.PurchaseOrderID = T2.PurchaseOrderID WHERE T1.Status = 1,"CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",478,7.265401601791382,250,['salesorderheader']
1007,"Among all the current legislators whose religion is Roman Catholic, what is the percentage of the ones without an instagram account? Hint: religion is Roman Catholic refers to religion_bio = 'Roman Catholic'; calculation = MULTIPLY(DIVIDE(COUNT(instagram is null), COUNT(bioguide_id)), 1.0)",legislator,SELECT CAST(SUM(CASE WHEN T1.instagram IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T2.religion_bio = 'Roman Catholic',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",192,6.577044248580933,250,"['historical', 'historical-terms', 'social-media']"
1008,"Among all the films starring PENELOPE GUINESS, what is the title of the one with the highest rental price per day? Hint: highest rental price per day refers to Max(Divide(rental_rate, rental_duration))",movie_3,SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS' ORDER BY T3.rental_rate / T3.rental_duration DESC LIMIT 1,"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",218,6.634589433670044,250,"['actor', 'film_actor', 'film', 'rental']"
1009,"How many furniture products had been shipped by standard class in the East superstore? Hint: furniture products refers to Category = 'Furniture'; shipped by standard class refers to ""Ship Mode"" = 'Standard Class'",superstore,SELECT COUNT(T2.Category) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T1.`Ship Mode` = 'Standard Class',"CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

CREATE TABLE `east_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",172,6.552932500839233,250,"['product', 'east_superstore']"
1010,Please list the names of the products that get over 10 reviews and a salable. Hint: salable product refers to FinishedGoodsFlag = 1; over 10 reviews refers to count(comments)>10,works_cycles,SELECT T2.NAME FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.FinishedGoodsFlag = 1 GROUP BY T2.NAME ORDER BY COUNT(T1.comments) > 10,"CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productreview` (
  ProductReviewID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  ReviewerName TEXT,
  ReviewDate DATETIME,
  EmailAddress TEXT,
  Rating INTEGER,
  Comments TEXT,
  ModifiedDate DATETIME
);

",472,7.2535600662231445,250,"['product', 'productreview']"
1011,What is the total pages of Wikipedia in Catalan language? Hint: total pages refers to sum(pages); Catalan language refers to lang = 'ca',language_corpus,SELECT pages FROM langs WHERE lang = 'ca',"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",158,6.539038181304932,250,['pages']
1012,"List the names of the customers from India. Hint: ""India"" is the country; name refers to first_name, last_name",movie_3,"SELECT T4.first_name, T4.last_name FROM country AS T1 INNER JOIN city AS T2 ON T1.country_id = T2.country_id INNER JOIN address AS T3 ON T2.city_id = T3.city_id INNER JOIN customer AS T4 ON T3.address_id = T4.address_id WHERE T1.country = 'India'","CREATE TABLE `country` (
  country_id INTEGER,
  country TEXT,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",193,6.597240209579468,250,"['country', 'customer']"
1013,Please list the assumed name of all the facilities inspected by Joshua Rosa. Hint: assumed name refers to dba_name,food_inspection_2,SELECT DISTINCT T3.dba_name FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Joshua' AND T1.last_name = 'Rosa',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",144,6.521857976913452,250,"['inspection', 'establishment', 'employee']"
1014,Write the shipping company name with the telephone number of (503) 555-9931. Hint: telephone number of (503) 555-9931 refers to Phone = '(503) 555-9931',retail_world,SELECT CompanyName FROM Shippers WHERE Phone = '(503) 555-9931',"CREATE TABLE `shippers` (
  ShipperID INTEGER,
  ShipperName TEXT,
  Phone TEXT
);

",200,6.605711936950684,250,['shippers']
1015,List out sale rep that has sold 1969 Harley Davidson Ultimate Chopper. List out their names and quantity sold throughout the year. Hint: 1969 Harley Davidson Ultimate Chopper refers to the name of the product; sale rep refers to employee; 2003 refers to year(orderDate) = 2003; quantity sold refers to quantityOrdered; their names refer to the name of customers; ,car_retails,"SELECT t5.firstName, t5.lastName, SUM(t2.quantityOrdered) FROM products AS t1 INNER JOIN orderdetails AS t2 ON t1.productCode = t2.productCode INNER JOIN orders AS t3 ON t2.orderNumber = t3.orderNumber INNER JOIN customers AS t4 ON t3.customerNumber = t4.customerNumber INNER JOIN employees AS t5 ON t4.salesRepEmployeeNumber = t5.employeeNumber WHERE t1.productName = '1969 Harley Davidson Ultimate Chopper' GROUP BY t5.lastName, t5.firstName","CREATE TABLE `employees` (
  employeeNumber INTEGER,
  lastName TEXT,
  firstName TEXT,
  extension TEXT,
  email TEXT,
  officeCode TEXT REFERENCES offices(officeCode),
  reportsTo INTEGER REFERENCES employees(employeeNumber),
  jobTitle TEXT
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

CREATE TABLE `orderdetails` (
  orderNumber INTEGER PRIMARY KEY REFERENCES orders(None),
  productCode TEXT PRIMARY KEY REFERENCES products(None),
  quantityOrdered INTEGER,
  priceEach REAL,
  orderLineNumber INTEGER
);

",223,6.644965648651123,250,"['employees', 'customers', 'orders', 'products', 'orderdetails']"
1016,"Among the courses that are basic or medium undergraduate courses, how many of them are taught by a faculty member? Hint: courses that are basic or medium undergraduate courses refers to courseLevel = 'Level_300'; faculty member refers to hasPosition ! = 0",computer_student,SELECT COUNT(*) FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id INNER JOIN person AS T3 ON T2.p_id = T3.p_id WHERE T3.professor = 1 AND T1.courseLevel = 'Level_300',"CREATE TABLE `course` (
  course_id INTEGER,
  courseLevel TEXT
);

CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

",166,6.5788586139678955,250,"['course', 'taughtby']"
1017,"What is the percentage of act number 5 in Titus Andronicus? Hint: act number 5 refers to Act = 5; Titus Andronicus refers to Title = 'Titus Andronicus'; percentage = divide(sum(Act = 5), count(Act)) as percentage",shakespeare,"SELECT CAST(SUM(IIF(T2.act = 5, 1, 0)) AS REAL) * 100 / COUNT(T2.act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Titus Andronicus'","CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",178,6.5671563148498535,250,"['works', 'chapters']"
1018,Please list the names of the characters in the movie Look Who's Talking. Hint: movie Look Who's Talking refers to title = 'Look Who's Talking',movie,SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'Look Who''s Talking',"CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

",144,6.526554584503174,250,"['characters', 'movie']"
1019,"Among all the current legislators born after the year 1960, how many of them are not google entities? Hint: born after the year 1960 refers to strftime('%Y', birthday_bio) > '1960'; not google entities refers to google_entity_id_id is null;",legislator,"SELECT COUNT(*) FROM current WHERE strftime('%Y', birthday_bio) > '1960' AND google_entity_id_id IS NULL","CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",190,6.577170133590698,250,['current']
1020,How many persons participated in the Sapporo Olympics? Hint: the Sapporo Olympics refer to games_id where city_name = 'Sapporo';,olympics,SELECT COUNT(T1.person_id) FROM games_competitor AS T1 INNER JOIN games_city AS T2 ON T1.games_id = T2.games_id INNER JOIN city AS T3 ON T2.city_id = T3.id WHERE T3.city_name = 'Sapporo',"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

",183,6.567812919616699,250,"['games_city', 'city', 'games']"
1021,"Provide the email, address, city, and country of the customer Lillie Kim. Hint: 'Lillie Kim' is the full name of a customer; full name refers to first_name, last_name",movie_3,"SELECT T1.email, T2.address, T3.city, T4.country FROM customer AS T1 INNER JOIN address AS T2 ON T1.address_id = T2.address_id INNER JOIN city AS T3 ON T2.city_id = T3.city_id INNER JOIN country AS T4 ON T3.country_id = T4.country_id WHERE T1.first_name = 'Lillie' AND T1.last_name = 'Kim'","CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `address` (
  address_id INTEGER,
  address TEXT,
  address2 TEXT,
  district TEXT,
  city_id INTEGER REFERENCES city(None),
  postal_code TEXT,
  phone TEXT,
  last_update DATETIME
);

CREATE TABLE `city` (
  city_id INTEGER,
  city TEXT,
  country_id INTEGER REFERENCES country(None),
  last_update DATETIME
);

CREATE TABLE `country` (
  country_id INTEGER,
  country TEXT,
  last_update DATETIME
);

",210,6.630316972732544,250,"['customer', 'address', 'city', 'country']"
1022,Please list the directions in which the trains with at least one empty-loaded car run. Hint: at least one empty-loaded car run refers to load_num = 0,trains,SELECT T2.direction FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.load_num = 0,"CREATE TABLE `cars` (
  id INTEGER,
  train_id INTEGER REFERENCES trains(id),
  position INTEGER,
  shape TEXT,
  len TEXT,
  sides TEXT,
  roof TEXT,
  wheels INTEGER,
  load_shape TEXT,
  load_num INTEGER
);

CREATE TABLE `trains` (
  id INTEGER,
  direction TEXT
);

",138,6.5250866413116455,250,"['cars', 'trains']"
1023,What is the NOC code of the region of the competitors weighted 77 kg? Hint: NOC code refers to noc; competitors weighted 77 kg refer to person_id where weight = 77;,olympics,SELECT T1.noc FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.weight = 77,"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `noc_region` (
  id INTEGER,
  noc TEXT,
  region_name TEXT
);

",193,6.60015606880188,250,"['person_region', 'noc_region']"
1024,How many restaurants in the city of Richmond serve Mediterranean food? Hint: Mediterranean food refers to food_type =   'mediterranean',restaurant,SELECT COUNT(id_restaurant) FROM generalinfo WHERE food_type = 'mediterranean' AND city = 'richmond',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",136,6.513678789138794,250,"['location', 'generalinfo']"
1025,Which country has the widest range of religious practices?,mondial_geo,SELECT T1.Name FROM country AS T1 INNER JOIN religion AS T2 ON T1.Code = T2.Country GROUP BY T1.Name ORDER BY COUNT(DISTINCT T2.Name) DESC LIMIT 1,"CREATE TABLE `religion` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Name TEXT PRIMARY KEY,
  Percentage REAL
);

CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",257,6.734688758850098,250,"['religion', 'country']"
1026,List the name and phone number of customers in India who have an above-average account balance. Hint: name of customer refers to c_name; phone number of customer refers to c_phone; customers in India who have an above-average account balance refer to n_name = 'INDIA' and c_acctbal > AVG(c_acctbal);,retails,"SELECT T1.c_name, T1.c_phone FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T1.c_acctbal > ( SELECT AVG(c_acctbal) FROM customer ) ORDER BY T1.c_name","CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",203,6.614258289337158,250,"['customer', 'nation']"
1027,Write the titles of horror films with a vote average of more than 7. Hint: horror films refers to genre_name = 'Horror'; vote average of more than 7 refers to vote_average > 7,movies_4,SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Horror' AND vote_average > 7,"CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

",224,6.639013767242432,250,"['movie', 'movie_genres', 'genre']"
1028,"In which city is there a greater number of schools that have received donations of less than 10 dollars? Hint: received donations of less than 10 dollars refers to dollar_amount = 'under_10'; city refers to school_city

",donor,SELECT T2.school_city FROM donations AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.dollar_amount = 'under_10' GROUP BY T2.school_city ORDER BY COUNT(T2.schoolid) DESC LIMIT 1,"CREATE TABLE `resources` (
  resourceid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  vendorid INTEGER,
  vendor_name TEXT,
  project_resource_type TEXT,
  item_name TEXT,
  item_number TEXT,
  item_unit_price REAL,
  item_quantity INTEGER
);

",167,6.557389497756958,250,"['donations', 'schools']"
1029,What is the name of the game in which the oldest Olympian has ever participated? Hint: the oldest Olympian refers to id where MAX(age); name of the game refers to games_name;,olympics,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id ORDER BY T2.age LIMIT 1,"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",189,6.578934669494629,250,"['games', 'games_competitor']"
1030,"Among all goals scored by Calgary Hitmen in the 2007-2008 season, identify the percentage scored by Ian Schultz. Hint: goals scored refers to G; Calgary Hitmen refers to TEAM = 'Calgary Hitmen'; percentage = MULTIPLY(DIVIDE(SUM(G WHERE PlayerName = 'Ian Schultz'), SUM(G)), 100); 2007-2008 season refers to SEASON = '2007-2008';",ice_hockey_draft,SELECT CAST(SUM(CASE WHEN T2.PlayerName = 'Ian Schultz' THEN T1.G ELSE 0 END) AS REAL) * 100 / SUM(T1.G) FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.SEASON = '2007-2008' AND T1.TEAM = 'Calgary Hitmen',"CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",236,6.672078609466553,250,"['seasonstatus', 'playerinfo']"
1031,"List the author's and publisher's name of the book published on July 10, 1997. Hint: author's name refers to author_name; publisher's name refers to publisher_name; book published on July 10, 1997 refers to publication_date LIKE '1997-07-10'",books,"SELECT T3.author_name, T4.publisher_name FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id INNER JOIN publisher AS T4 ON T4.publisher_id = T1.publisher_id WHERE T1.publication_date = '1997-07-10'","CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `author` (
  author_id INTEGER,
  author_name TEXT
);

CREATE TABLE `book_author` (
  book_id INTEGER PRIMARY KEY REFERENCES book(book_id),
  author_id INTEGER PRIMARY KEY REFERENCES author(author_id)
);

CREATE TABLE `publisher` (
  publisher_id INTEGER,
  publisher_name TEXT
);

",247,6.692837476730347,250,"['book', 'author', 'book_author', 'publisher']"
1032,When is Devcoin most valuable in the market? Hint: when refers to date; most valuable refers to max(market_cap),coinmarketcap,SELECT T2.date FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Devcoin' ORDER BY T2.market_cap DESC LIMIT 1,"CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",130,6.505682468414307,250,"['historical', 'coins']"
1033,Name the Chief Executive Officer and when he/she was hired. Hint: Chief Financial Offer is a job description which refers to job_desc,book_publishing_company,"SELECT T1.fname, T1.lname, T1.hire_date FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T2.job_desc = 'Chief Financial Officier'","CREATE TABLE `employee` (
  emp_id TEXT PRIMARY KEY,
  fname TEXT,
  minit TEXT,
  lname TEXT,
  job_id INTEGER REFERENCES jobs(job_id),
  job_lvl INTEGER,
  pub_id TEXT REFERENCES publishers(pub_id),
  hire_date DATETIME
);

CREATE TABLE `jobs` (
  job_id INTEGER,
  job_desc TEXT,
  min_lvl INTEGER,
  max_lvl INTEGER
);

",170,6.547948360443115,250,"['employee', 'jobs']"
1034,"Calculate the percentage of high-level undergraduate course. Hint: high-level undergraduate course refers to courseLevel = 'Level_400'; percentage = divide(count(course.course_id) when courseLevel = 'Level_400', count(course.course_id)) * 100%",computer_student,SELECT CAST(SUM(CASE  WHEN courseLevel = 'Level_400' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS per FROM course,"CREATE TABLE `course` (
  course_id INTEGER,
  courseLevel TEXT
);

",180,6.557892084121704,250,['course']
1035,How many current legislators have both accounts on both VoteView.com and maplight.org? Hint: have both accounts on both VoteView.com and maplight.org refers to icpsr_id is not null AND maplight_id is not null;,legislator,SELECT COUNT(*) FROM current WHERE icpsr_id IS NOT NULL AND maplight_id IS NOT NULL,"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",175,6.555374622344971,250,"['historical', 'historical-terms', 'social-media']"
1036,What are the issues of the complains of male clients and products from age 25 and below? Hint: male refers to sex = 'Male'; age 25 and below refers to age < 25,retail_complains,SELECT DISTINCT T2.Issue FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.sex = 'Male' AND T1.age < 25,"CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",162,6.536426782608032,250,"['events', 'client']"
1037,"Among the customers whose first name is Cameron, who bought the product in the most quantity? Hint: most quantity refers to MAX(Quantity); who refers to FirstName, LastName;",sales,"SELECT T1.FirstName, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.FirstName = 'Cameron' ORDER BY T2.Quantity DESC LIMIT 1","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",151,6.5285117626190186,250,"['sales', 'products', 'customers']"
1038,Write down the notes of employee with the highest salary. Hint: highest salary refers to Max(Salary),retail_world,SELECT Notes FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees ),"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",158,6.5338685512542725,250,['employees']
1039,"Name the dishes that cost 180,000. Hint: cost 180,000 refers to price = 180000;",menu,SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.price = 180000,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

",146,6.522631883621216,250,['dish']
1040,"List all of the restaurant addresses from an unknown region. Hint: restaurant address refers to street_num, street_name; unknown region refers to region = 'unknown'",restaurant,SELECT T2.street_name FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city WHERE T1.region = 'unknown',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `geographic` (
  city TEXT PRIMARY KEY,
  county TEXT,
  region TEXT
);

",140,6.524548053741455,250,"['location', 'geographic']"
1041,"Among the products manufactured by manufacturer 5 that have a retail price of no more than 1,000, how many products were shipped via rail? Hint: manufacturer 5 refers to p_mfgr = 'Manufacturer#5'; retail price of no more than 1,000 refers to p_retailprice < 1000; shipped via rail refers to shipmode = 'RAIL';",retails,SELECT COUNT(T1.ps_partkey) FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T3.p_mfgr = 'Manufacturer#5' AND T3.p_retailprice < 1000 AND T2.l_shipmode = 'RAIL',"CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

",212,6.627999782562256,250,"['partsupp', 'supplier']"
1042,What is the total number of word cited under that class labelled 'AI'?,citeseer,SELECT COUNT(DISTINCT T2.word_cited_id) FROM paper AS T1 INNER JOIN content AS T2 ON T1.paper_id = T2.paper_id WHERE T1.class_label = 'AI',"CREATE TABLE `content` (
  paper_id TEXT PRIMARY KEY REFERENCES paper(paper_id),
  word_cited_id TEXT PRIMARY KEY
);

CREATE TABLE `paper` (
  paper_id TEXT PRIMARY KEY,
  class_label TEXT
);

",121,6.4659857749938965,250,"['content', 'paper']"
1043,"Which current legislator has served for more terms, Sherrod Brown or Maria Cantwell? Hint: if sum(official_full_name = 'Maria Cantwell') > sum(official_full_name = 'Sherrod Brown') then Maria Cantwell has served for more term than Sherrod Brown; if sum(official_full_name = 'Sherrod Brown') > sum(official_full_name = 'Maria Cantwell'), then Sherrod Brown has served for more terms than Maria Cantwell;",legislator,SELECT CASE WHEN SUM(CASE WHEN T1.official_full_name = 'Maria Cantwell' THEN 1 ELSE 0 END) > SUM(CASE WHEN T1.official_full_name = 'Sherrod Brown' THEN 1 ELSE 0 END) THEN 'Maria Cantwell' ELSE 'Sherrod Brown' END FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide,"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",230,6.65775728225708,250,"['historical', 'historical-terms']"
1044,"What percentage of streets named 11th Street are in Alameda County? Hint: street named 11th Street refers to street_name = '11th st'; percentage = divide(count(street_name = '11th st' and County = 'alameda county'), count(street_name where County = 'alameda county')) * 100%",restaurant,"SELECT CAST(SUM(IIF(T1.street_name = '11th st', 1, 0)) AS REAL) * 100 / COUNT(T1.id_restaurant) FROM location AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.County = 'alameda county'","CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `geographic` (
  city TEXT PRIMARY KEY,
  county TEXT,
  region TEXT
);

",189,6.57177472114563,250,"['location', 'geographic']"
1045,What is the location of business number 1? Hint: Location refers to AddressLine1; business number refers to the BusinessEntityID where BusinessEntityID = 1,works_cycles,SELECT T1.AddressLine1 FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 USING (AddressID) WHERE T2.BusinessEntityID = 1,"CREATE TABLE `businessentity` (
  BusinessEntityID INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `address` (
  AddressID INTEGER,
  AddressLine1 TEXT PRIMARY KEY,
  AddressLine2 TEXT PRIMARY KEY,
  City TEXT PRIMARY KEY,
  StateProvinceID INTEGER PRIMARY KEY REFERENCES StateProvince(None),
  PostalCode TEXT PRIMARY KEY,
  SpatialLocation TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",457,7.219095230102539,250,"['businessentity', 'address']"
1046,Which commander has had to deal with more cases of criminal sexual abuse? Hint: more cases of criminal sexual abuse refers to Max(Count(secondary_description = 'CRIMINAL SEXUAL ABUSE')),chicago_crime,SELECT T3.commander FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no WHERE T1.secondary_description = 'CRIMINAL SEXUAL ABUSE' GROUP BY T3.commander ORDER BY COUNT(T1.secondary_description) DESC LIMIT 1,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `fbi_code` (
  fbi_code_no TEXT PRIMARY KEY,
  title TEXT,
  description TEXT,
  crime_against TEXT
);

",175,6.5560302734375,250,"['crime', 'fbi_code']"
1047,How many playoffs did Per Mars participate in? Hint: playoffs refers to GAMETYPE = 'Playoffs';,ice_hockey_draft,SELECT SUM(T2.GP) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T1.PlayerName = 'Per Mars' AND T2.GAMETYPE = 'Playoffs',"CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

",139,6.51548171043396,250,['seasonstatus']
1048,"What is the percentage more for the rental payment for store No.2 than store No.1? Hint: store no. 1 refers to store_id = 1; store no.2 refers to store_id = 2; rental payment refers to amount; percent more = Divide (Subtract(amount where store_id = 2, amount where store_id = 1), amount where store_id = 1) *100",movie_3,"SELECT CAST((SUM(IIF(T2.store_id = 2, T1.amount, 0)) - SUM(IIF(T2.store_id = 1, T1.amount, 0))) AS REAL) * 100 / SUM(IIF(T2.store_id = 1, T1.amount, 0)) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id INNER JOIN store AS T3 ON T2.store_id = T3.store_id","CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",255,6.698835372924805,250,"['payment', 'rental']"
1049,"How many dishes are there on the menu ""Zentral Theater Terrace""? Hint: Zentral Theater Terrace is a name of menu;",menu,SELECT COUNT(*) FROM Menu WHERE name = 'Zentral Theater Terrace',"CREATE TABLE `menupage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",142,6.516374588012695,250,"['menupage', 'menu', 'menuitem']"
1050,"Among all the citation, what is the percentage of paper ID under the Agents classification? Hint: classification refers to class_label; class_label = 'Agents'; percentage = (divide(count(paper_id where class_label = 'Agents')), (count(paper_id)))*100;",citeseer,SELECT CAST(COUNT(CASE WHEN class_label = 'Agents' THEN paper_id ELSE NULL END) AS REAL) * 100 / COUNT(paper_id) FROM paper,"CREATE TABLE `paper` (
  paper_id TEXT PRIMARY KEY,
  class_label TEXT
);

",174,6.550605773925781,250,['paper']
1051,Tell the number of fights landed earlier on Miami Airport on 2018/8/12. Hint: landed on refers to DEST; landed earlier refers to ARR_DELAY < 0; Miami Airport refers to DEST = 'MIA'; on 2018/8/12 refers to FL_DATE = '2018/8/12';,airline,SELECT COUNT(*) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.DEST WHERE T2.FL_DATE = '2018/8/12' AND T2.DEST = 'MIA' AND T2.ARR_DELAY < 0,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",191,6.565612316131592,250,['airlines']
1052,Describe the course level and list of person IDs who taught course ID of 147. Hint: person IDs refers to taughtBy.p_id; course ID of 147 refers to course.course_id = 147,computer_student,"SELECT T1.courseLevel, T1.course_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T2.p_id = 141","CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

CREATE TABLE `course` (
  course_id INTEGER,
  courseLevel TEXT
);

",164,6.5384252071380615,250,"['taughtby', 'course']"
1053,"What is the average value of Adolescent fertility rate in the country whose Alpha2Code is 1A? Hint: average value = AVG(Value) where IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'",world_development_indicators,"SELECT CAST(SUM(T2.Value) AS REAL) * 100 / COUNT(T2.Year) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)'","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",186,6.565962791442871,250,"['country', 'indicators']"
1054,"For the goalkeeper that became a coach than a Hall of Famer, who played for BOS in 1972? Hint: BOS refers to tmID = 'BOS'; year = 1972; became a coach than a Hall of Famer means coachID is not NULL and hofID is NULL;",hockey,"SELECT T2.firstName, T2.lastName , IIF(T1.tmID = 'BOS', 'YES', 'NO') FROM Goalies AS T1 INNER JOIN Master AS T2 ON T1.playerID = T2.playerID WHERE T1.year = 1972 AND T1.tmID = 'BOS' AND T2.coachID IS NOT NULL AND T2.hofID IS NULL","CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  notes TEXT,
  g INTEGER,
  w INTEGER,
  l INTEGER,
  t INTEGER,
  postg TEXT,
  postw TEXT,
  postl TEXT,
  postt TEXT
);

CREATE TABLE `hof` (
  year INTEGER,
  hofID TEXT PRIMARY KEY,
  name TEXT,
  category TEXT
);

",283,6.784223556518555,250,"['goalies', 'coaches', 'hof']"
1055,How many sweet bottled root beers that do not contain cane sugar were purchased in 2015 through the selling company located in Sac State American River Courtyard? Hint: sweet refers to Honey = 'TRUE'; bottled refers to ContainerType = 'Bottle'; do not contain cane sugar refers to CaneSugar = 'FALSE'; in 2015 refers to PurchaseDate < = '2015-12-31'; Sac State American River Courtyard refers to LocationName = 'Sac State American River Courtyard';,beer_factory,SELECT COUNT(T1.BrandID) FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID INNER JOIN location AS T3 ON T1.LocationID = T3.LocationID WHERE T3.LocationName = 'Sac State American River Courtyard' AND T1.PurchaseDate LIKE '2015%' AND T2.Honey = 'TRUE' AND T2.CaneSugar = 'FALSE' AND T1.ContainerType = 'Bottle',"CREATE TABLE `rootbeer` (
  RootBeerID INTEGER,
  BrandID INTEGER REFERENCES rootbeerbrand(BrandID),
  ContainerType TEXT,
  LocationID INTEGER REFERENCES location(LocationID) REFERENCES geolocation(LocationID),
  PurchaseDate DATE
);

CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",253,6.699156999588013,250,"['rootbeer', 'rootbeerbrand', 'transaction']"
1056,How many players with the first name Joe were drafted in 1970? Hint: drafted in 1970 refers to draftYear = 1970,professional_basketball,SELECT COUNT(DISTINCT playerID) FROM draft WHERE firstName = 'Joe' AND draftYear = 1970,"CREATE TABLE `draft` (
  id INTEGER,
  draftYear INTEGER REFERENCES teams(year),
  draftRound INTEGER,
  draftSelection INTEGER,
  draftOverall INTEGER,
  tmID TEXT REFERENCES teams(tmID),
  firstName TEXT,
  lastName TEXT,
  suffixName TEXT,
  playerID TEXT,
  draftFrom TEXT,
  lgID TEXT
);

",186,6.567546606063843,250,['draft']
1057,What role was Julia Roberts nominated for? Hint: nominated refers to result = 'Nominee',law_episode,SELECT T2.role FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.Result = 'Nominee' AND T1.name = 'Julia Roberts',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

",142,6.516334772109985,250,['credit']
1058,"Calculate the difference between the 2020 population and the 2010 population for the districts represented by Griffin Tim. Hint: difference = Subtract (population_2020, population_2010)",address,SELECT T1.population_2020 - T1.population_2010 FROM zip_data AS T1 INNER JOIN zip_congress AS T2 ON T1.zip_code = T2.zip_code INNER JOIN congress AS T3 ON T2.district = T3.cognress_rep_id WHERE T3.first_name = 'Griffin' AND T3.last_name = 'Tim',"CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `congress` (
  cognress_rep_id TEXT PRIMARY KEY,
  first_name TEXT,
  last_name TEXT,
  CID TEXT,
  party TEXT,
  state TEXT,
  abbreviation TEXT REFERENCES state(abbreviation),
  House TEXT,
  District INTEGER,
  land_area REAL
);

",184,6.565783739089966,250,"['area_code', 'congress']"
1059,"What is the cost and the product number of product with the id ""888""? Hint: cost refers to StandardCost;",works_cycles,"SELECT T2.StandardCost, T2.ProductNumber FROM ProductCostHistory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductID = 888","CREATE TABLE `productcosthistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  StandardCost REAL,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",450,7.201191663742065,250,"['productcosthistory', 'product']"
1060,"How many of the first 60,000 customers from the place with the highest average income per month have sent a true response to the incentive mailing sent by the marketing department? Hint: place with the highest average income per month refers to GEOID where MAX(INCOME_K); RESPONSE = 'true';",software_company,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T2.RESPONSE = 'true' ORDER BY T3.INCOME_K DESC LIMIT 1,"CREATE TABLE `mailings1_2` (
  REFID INTEGER REFERENCES Customers(None),
  REF_DATE DATETIME,
  RESPONSE TEXT
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",191,6.57245945930481,250,"['mailings1_2', 'customers']"
1061,"For the professors who advise more than 2 students, which professor has a higher teaching ability? Give the full name. Hint: professor advising more than 2 students refers to COUNT(student_id) > 2; higher teachability refers to MAX(teachingability); full name refers to f_name and l_name;",cs_semester,"SELECT T.first_name, T.last_name FROM ( SELECT T2.first_name, T2.last_name, T2.teachingability FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id GROUP BY T1.prof_id HAVING COUNT(student_id) > 2 ) T ORDER BY T.teachingability DESC LIMIT 1","CREATE TABLE `prof` (
  prof_id INTEGER,
  gender TEXT,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  popularity INTEGER,
  teachingability INTEGER,
  graduate_from TEXT
);

CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

",183,6.564868211746216,250,"['prof', 'ra']"
1062,"What is the total sales of furniture products in the east superstore in the year 2016.
 Hint: furniture products refers to Category = 'Furnitures'; in the year 2016 refers to ""Order Date"" BETWEEN '2016-01-01' AND '2016-12-31'",superstore,"SELECT SUM(T1.Sales) FROM east_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE STRFTIME('%Y', T1.`Order Date`) = '2016' AND T2.Category = 'Furniture'","CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

",207,6.616147518157959,250,"['central_superstore', 'product']"
1063,"In 2016, which city has the highest number of establishments with the highest health and safety hazards? Hint: the highest health and safety hazards refer to risk_category = 'High Risk'; year(date) = 2016; establishments has the same meaning as businesses;",food_inspection,"SELECT T2.city FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE STRFTIME('%Y', T1.`date`) = '2016' AND T1.risk_category = 'High Risk' GROUP BY T2.city ORDER BY COUNT(T2.city) DESC LIMIT 1","CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

CREATE TABLE `inspections` (
  business_id INTEGER REFERENCES businesses(business_id),
  score INTEGER,
  date DATE,
  type TEXT
);

",173,6.5523681640625,250,"['businesses', 'inspections']"
1064,What is the agricultural land area in sq. km of Italy in 1968? Hint: agricultural land area in sq. km refers value where indicatorname = 'Agricultural land (sq. km)'; Italy refers to countryname = 'Italy'; in 1968 refers to year = '1968',world_development_indicators,SELECT Value FROM Indicators WHERE IndicatorName = 'Agricultural land (sq. km)' AND Year = 1968 AND CountryName = 'Italy',"CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",190,6.573657512664795,250,"['indicators', 'country']"
1065,What is the total number of sales across all regions? Hint: total number of sales = sum(num_sales),video_games,SELECT SUM(T.num_sales) * 100000 FROM region_sales t,"CREATE TABLE `region_sales` (
  region_id INTEGER REFERENCES region(id),
  game_platform_id INTEGER REFERENCES game_platform(id),
  num_sales REAL
);

",154,6.5296266078948975,250,['region_sales']
1066,Give the religion of the legislator with RSS url of http://www.corker.senate.gov/public/index.cfm/rss/feed. Hint: religion refers to religion_bio;,legislator,SELECT T1.religion_bio FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.rss_url = 'http://www.corker.senate.gov/public/index.cfm/rss/feed' GROUP BY T1.religion_bio,"CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",165,6.544449090957642,250,"['historical', 'historical-terms', 'religion_bio']"
1067,What is the ratio of author with affiliation and without affiliation? Hint: with affiliation refers to Affiliation is not Null; without affiliation refers to Affiliation IS NULL; Ration = Count(Id(Affiliation is NOT NULL)) : Count (Id (Affiliation IS NULL)),authors,SELECT CAST(SUM(CASE WHEN Affiliation IS NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM Author,"CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",177,6.55587911605835,250,['author']
1068,"How many stars did most of the voters give in star score for the episode Lost Verizon? Hint: ""Lost Verizon"" is the title of episode; most voters refers to Max(votes)",simpson_episodes,SELECT T2.stars FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Lost Verizon' ORDER BY T2.votes DESC LIMIT 1;,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",166,6.543548822402954,250,"['episode', 'vote']"
1069,"Provide the number of students enrolled in the ""Statistical Learning"" course.",cs_semester,SELECT COUNT(T2.student_id) FROM course AS T1 INNER JOIN registration AS T2 ON T1.course_id = T2.course_id WHERE T1.name = 'Statistical learning',"CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

",130,6.502740859985352,250,"['course', 'registration']"
1070,How many mothers have taken immunization during prenatal visit? Hint: expecting mothers can be attributed to encounters.REASONDESCRIPTION = 'Normal pregnancy';,synthea,SELECT COUNT(DISTINCT T2.PATIENT) FROM encounters AS T1 INNER JOIN immunizations AS T2 ON T1.PATIENT = T2.PATIENT WHERE T1.REASONDESCRIPTION = 'Normal pregnancy' AND T1.DATE = T2.DATE,"CREATE TABLE `immunizations` (
  DATE DATE PRIMARY KEY,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT
);

CREATE TABLE `encounters` (
  ID TEXT PRIMARY KEY,
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  CODE INTEGER,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",181,6.557932615280151,250,"['immunizations', 'encounters']"
1071,How many businesses with the category named Stadiums & Arenas are rated highest? Hint: rated highest refers to MAX(stars); category_name = 'Stadiums & Arenas';,public_review_platform,SELECT COUNT(T1.business_id) FROM Business_Categories AS T1 INNER JOIN Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T1.business_id = T3.business_id WHERE T2.category_name = 'Stadiums & Arenas' AND T3.stars = ( SELECT MAX(stars) FROM Business ),"CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",203,6.606698513031006,250,"['business_categories', 'categories']"
1072,"What is the average quantity of each order for the book ""Life Without Fear""? Hint: qty is abbreviation for quantity; average quantity order = AVG(qty)",book_publishing_company,SELECT CAST(SUM(T2.qty) AS REAL) / COUNT(T1.title_id) FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id WHERE T1.title = 'Life Without Fear',"CREATE TABLE `sales` (
  stor_id TEXT PRIMARY KEY REFERENCES stores(stor_id),
  ord_num TEXT PRIMARY KEY,
  ord_date DATETIME,
  qty INTEGER,
  payterms TEXT,
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id)
);

CREATE TABLE `titles` (
  title_id TEXT PRIMARY KEY,
  title TEXT,
  type TEXT,
  pub_id TEXT REFERENCES publishers(pub_id),
  price REAL,
  advance REAL,
  royalty INTEGER,
  ytd_sales INTEGER,
  notes TEXT,
  pubdate DATETIME
);

",178,6.5572733879089355,250,"['sales', 'titles']"
1073,What is the average number of casts of movies that are from the USA? Hint: USA is a country,movielens,SELECT AVG(T2.cast_num) FROM movies AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid WHERE T1.country = 'USA',"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `u2base` (
  userid INTEGER PRIMARY KEY REFERENCES users(None),
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  rating TEXT
);

",151,6.526580810546875,250,"['movies', 'u2base']"
1074,"Give the number of users who took the ""mental health survey for 2018"". Hint: mental health survey for 2018 refers to SurveyID = 2018",mental_health_survey,SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2018',"CREATE TABLE `survey` (
  SurveyID INTEGER,
  Description TEXT
);

",146,6.5213212966918945,250,['survey']
1075,Provide the country with republic government which has the highest population growth?,mondial_geo,SELECT T2.Country FROM population AS T1 INNER JOIN politics AS T2 ON T1.Country = T2.Country WHERE T2.Government = 'republic' ORDER BY T1.Population_Growth DESC LIMIT 1,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `population` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population_Growth REAL,
  Infant_Mortality REAL
);

",260,6.740866422653198,250,"['country', 'population']"
1076,How many territories are owned by Anne Dodsworth?,retail_world,SELECT COUNT(T2.TerritoryID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.FirstName = 'Anne' AND T1.LastName = 'Dodsworth',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",148,6.521834135055542,250,['customers']
1077,What is the twitter name of the legislator whose birthday was on 5/27/1946? Hint: birthday on 5/27/1946 refers to birthday_bio = '1946-05-27',legislator,SELECT T2.twitter FROM current AS T1 INNER JOIN `social-media` AS T2 ON T2.bioguide = T1.bioguide_id WHERE T1.birthday_bio = '1946-05-27',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",176,6.5562684535980225,250,"['historical', 'historical-terms']"
1078,"Among the legislators who started a term on 2nd December 1793, how many of them were males? Hint: started a term on 2nd December 1793 refers to start = '1793-12-02'; male refers to gender_bio = 'M'",legislator,SELECT COUNT(T1.bioguide_id) FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.gender_bio = 'M' AND T2.start = '1793-12-02',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",186,6.567748069763184,250,"['historical', 'historical-terms']"
1079,"How many arrests have been made due to forcible entry burglary that took place in a day care center? Hint: ""BURGLARY"" is the primary_description; 'FORCIBLE ENTRY' is the secondary_description; 'DAY CARE CENTER' is the location_description; arrests have been made refers to arrest = 'TRUE'",chicago_crime,SELECT SUM(CASE WHEN T2.arrest = 'TRUE' THEN 1 ELSE 0 END) FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T2.location_description = 'DAY CARE CENTER' AND T1.secondary_description = 'FORCIBLE ENTRY' AND T1.primary_description = 'BURGLARY',"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `iucr` (
  iucr_no TEXT PRIMARY KEY,
  primary_description TEXT,
  secondary_description TEXT,
  index_code TEXT
);

",210,6.61620831489563,250,"['crime', 'iucr']"
1080,What is the criteria name of the university ID 32 in 2015? Hint: in 2015 refers to year = 2015,university,SELECT T1.criteria_name FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T2.university_id = 32 AND T2.year = 2015,"CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

CREATE TABLE `ranking_criteria` (
  id INTEGER,
  ranking_system_id INTEGER REFERENCES ranking_system(id),
  criteria_name TEXT
);

",165,6.541838884353638,250,"['university_ranking_year', 'ranking_criteria']"
1081,"What is the average SAT value for incoming students in all of the schools located in the state with the lowest state appropriations to higher education in fiscal year 2011 per resident? Hint: average = DIVIDE(SUM(med_sat_value), SUM(chronname)); SAT value for incoming students refers to med_sat_value; lowest state appropriations to higher education in fiscal year 2011 per resident refers to MIN(state_appr_value);",college_completion,SELECT AVG(t1.med_sat_value) FROM institution_details AS T1 INNER JOIN state_sector_details AS T2 ON t1.state = t2.state ORDER BY t2.state_appr_value LIMIT 1,"CREATE TABLE `state_sector_details` (
  stateid INTEGER PRIMARY KEY,
  state TEXT REFERENCES institution_details(state),
  state_post TEXT,
  level TEXT PRIMARY KEY,
  control TEXT PRIMARY KEY,
  schools_count INTEGER,
  counted_pct TEXT,
  awards_per_state_value TEXT,
  awards_per_natl_value REAL,
  exp_award_state_value TEXT,
  exp_award_natl_value INTEGER,
  state_appr_value TEXT,
  state_appr_rank TEXT,
  grad_rate_rank TEXT,
  awards_per_rank TEXT
);

CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",229,6.653413772583008,250,"['state_sector_details', 'institution_grads']"
1082,How many different neighborhoods are there in Roseland community? Hint: Roseland community refers to community_area_name = 'Roseland',chicago_crime,SELECT SUM(CASE WHEN T1.community_area_name = 'Roseland' THEN 1 ELSE 0 END) FROM Community_Area AS T1 INNER JOIN Neighborhood AS T2 ON T1.community_area_no = T2.community_area_no,"CREATE TABLE `neighborhood` (
  neighborhood_name TEXT PRIMARY KEY,
  community_area_no INTEGER REFERENCES Community_Area(community_area_no)
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",160,6.534229755401611,250,"['neighborhood', 'community_area']"
1083,List down names of teams that have played as second team against Pune Warriors. Hint: names of teams refers to Team_Name; second team refers to Team_2; Pune Warriors refers to Team_Name = 'Pune Warriors',soccer_2016,SELECT T2.Team_Name FROM Match AS T1 INNER JOIN Team AS T2 ON T2.Team_Id = T1.Team_2 WHERE T1.Team_1 = ( SELECT Team_Id FROM Team WHERE Team_Name = 'Pune Warriors' ) GROUP BY T2.Team_Name,"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",254,6.69619345664978,250,"['match', 'team']"
1084,How many movies did Wolfgang Reitherman direct? Hint: Wolfgang Reitherman refers director = 'Wolfgang Reitherman';,disney,SELECT COUNT(name) FROM director WHERE director = 'Wolfgang Reitherman',"CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

",154,6.529221057891846,250,['director']
1085,"Calculate the average rate of renting the film that Lucille Tracy got starred. Hint: average rate = divide(sum(rental_rate), count(film_id))",movie_3,SELECT AVG(T3.rental_rate) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'LUCILLE' AND T1.last_name = 'TRACY',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",204,6.61078667640686,250,"['actor', 'film_actor', 'rental']"
1086,"What are the products by the company ""Bigfoot Breweries""? Hint: Bigfoot Breweries is the name of the company; products refer to ProductName;",retail_world,SELECT T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Bigfoot Breweries',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",168,6.540697336196899,250,"['products', 'suppliers']"
1087,"List the research assistants' full names, capabilities and GPAs who were under the supervision of Merwyn Conkay. Hint: research assistant refers to the student who serves for research where the abbreviation is RA; full names = f_name, l_name;",cs_semester,"SELECT T3.f_name, T3.l_name, T2.capability, T3.gpa FROM prof AS T1 INNER JOIN RA AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T2.student_id = T3.student_id WHERE T1.first_name = 'Merwyn' AND T1.last_name = 'Conkay'","CREATE TABLE `prof` (
  prof_id INTEGER,
  gender TEXT,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  popularity INTEGER,
  teachingability INTEGER,
  graduate_from TEXT
);

CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",170,6.546541452407837,250,"['prof', 'ra', 'student']"
1088,"For all movies where users left a critic, find the movie name, user, rating and critics comments from the user. Hint: movies where users left a critic refers to critic IS NOT NULL; critic comments refers to critic;",movie_platform,"SELECT T2.movie_title, T1.user_id, T1.rating_score, T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.critic IS NOT NULL","CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",163,6.542190313339233,250,"['ratings', 'movies']"
1089,Please indicate which labels have the city located in Santa Cruz. Hint: Santa Cruz refers to county = 'Santa Cruz county',restaurant,SELECT T1.label FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'Santa Cruz county',"CREATE TABLE `geographic` (
  city TEXT PRIMARY KEY,
  county TEXT,
  region TEXT
);

",132,6.50445294380188,250,['geographic']
1090,List all the cities where Zachery Hicks transported goods. Hint: city refers to city_name,shipping,SELECT DISTINCT T3.city_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id INNER JOIN city AS T3 ON T1.city_id = T3.city_id WHERE T2.first_name = 'Zachery' AND T2.last_name = 'Hicks',"CREATE TABLE `city` (
  city_id INTEGER,
  city_name TEXT,
  state TEXT,
  population INTEGER,
  area REAL
);

CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

",134,6.50810980796814,250,"['city', 'customer']"
1091,How many movies starring Morgan Freeman are suggested by parental guidance? Hint: 'suggested by parental guidance' refers to mpaa_rating = 'PG',movie,SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Morgan Freeman' AND T1.`MPAA Rating` = 'PG',"CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",142,6.5148186683654785,250,"['movie', 'actor', 'characters']"
1092,What is the title of the first crime movie ever released? Hint: first crime movie ever released refers to min(release_date) and genre_name = 'Crime',movies_4,SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Crime' ORDER BY T1.release_date LIMIT 1,"CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

",215,6.624762535095215,250,"['movie', 'movie_genres', 'genre']"
1093,"In children's movies, which was rented the most? Hint: children is the name of the category; rented the most refers to MAX(COUNT(title))",movie_3,"SELECT T.title FROM ( SELECT T4.title, COUNT(T4.title) AS num FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id INNER JOIN inventory AS T3 ON T2.inventory_id = T3.inventory_id INNER JOIN film AS T4 ON T3.film_id = T4.film_id INNER JOIN film_category AS T5 ON T4.film_id = T5.film_id INNER JOIN category AS T6 ON T5.category_id = T6.category_id WHERE T6.name = 'Children' GROUP BY T4.title ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",199,6.599300146102905,250,"['film', 'film_category', 'category']"
1094,"What is the credit of the course named ""Computer Vision""?",cs_semester,SELECT credit FROM course WHERE name = 'Computer Vision',"CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

",126,6.4712560176849365,250,['course']
1095,"Among all recipes containing cheese, what is the percentage of recipes with calories greater than 200? Hint: cheese is a category; calories greater than 200 refers to calories > 200; calculation = MULTIPLY(DIVIDE(COUNT(calories > 200 THEN recipe_id), COUNT(recipe_id)), 100)",cookbook,SELECT CAST(SUM(CASE WHEN T4.calories > 200 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id INNER JOIN Nutrition AS T4 ON T4.recipe_id = T1.recipe_id WHERE T3.category = 'cheese',"CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",193,6.5926361083984375,250,"['recipe', 'quantity', 'ingredient']"
1096,"How many users rated the movie ""The Magnificent Ambersons"" gave a rating score of no more than 2? List all the URL to the rating on Mubi. Hint: The Magnificent Ambersons refers to movie_title; rating score of no more than 2 refers to rating_score<2; URL to rating refers to rating_url",movie_platform,"SELECT COUNT(T2.user_id), T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T1.movie_title = 'The Magnificent Ambersons' AND T2.rating_score <= 2","CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",196,6.600245714187622,250,"['movies', 'ratings']"
1097,Please list all the predicted relation classes of object sample no.14 in image no.1. Hint: predicted relation classes refers to PRED_CLASS; object sample no.14 in image no.1 refers to OBJ1_SAMPLE_ID = 14 AND OBJ2_SAMPLE_ID = 14 and IMG_ID = 1,image_and_language,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.OBJ1_SAMPLE_ID = 14 AND T2.OBJ2_SAMPLE_ID = 14,"CREATE TABLE `pred_classes` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",225,6.638078451156616,250,"['pred_classes', 'img_rel']"
1098,"Among the payments made by Mary Smith, how many of them are over 4.99? Hint: over 4.99 refers to amount > 4.99",movie_3,SELECT COUNT(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'MARY' AND T2.last_name = 'SMITH' AND T1.amount > 4.99,"CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",200,6.602140188217163,250,"['payment', 'customer']"
1099,"Provide the customers' names who ordered the Fantasmas. Hint: ""Fantasmas"" is the title of the book; customer names refers to first_name, last_name",books,"SELECT T4.first_name, T4.last_name FROM book AS T1 INNER JOIN order_line AS T2 ON T1.book_id = T2.book_id INNER JOIN cust_order AS T3 ON T3.order_id = T2.order_id INNER JOIN customer AS T4 ON T4.customer_id = T3.customer_id WHERE T1.title = 'Fantasmas'","CREATE TABLE `order_line` (
  line_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  book_id INTEGER REFERENCES book(None),
  price REAL
);

CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  email TEXT
);

",206,6.610013008117676,250,"['order_line', 'book', 'customer']"
1100,"List the student's email with grade of B in a course with difficulty greater than the 80% of average difficulty of all courses. Hint: difficulty refers to diff; course with difficulty greater than the 80% of average difficulty refers to diff > MULTIPLY(AVG(diff), 80%);",cs_semester,SELECT T2.email FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T1.course_id = T3.course_id WHERE T1.grade = 'B' GROUP BY T3.diff HAVING T3.diff > AVG(T3.diff) * 0.8,"CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

CREATE TABLE `RA` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

",181,6.5615339279174805,250,"['course', 'registration', 'RA']"
1101,Which procedures and medications were received by the patient with the third-degree burn? Hint: procedures refer to DESCRIPTION from procedures; medications refers to DESCRIPTION from medications; third-degree burn refers to conditions where DESCRIPTION = 'Third degree burn';,synthea,"SELECT DISTINCT T1.DESCRIPTION, T3.DESCRIPTION FROM procedures AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT INNER JOIN medications AS T3 ON T2.patient = T3.PATIENT WHERE T2.DESCRIPTION = 'Third degree burn'","CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

CREATE TABLE `procedures` (
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

CREATE TABLE `medications` (
  START DATE PRIMARY KEY,
  STOP DATE,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",203,6.6051952838897705,250,"['conditions', 'procedures', 'medications']"
1102,Which division had the most draft matches in the 2008 season? Hint: the most draft matches refer to MAX(COUNT(Div)) where FTR = 'D';,european_football_1,SELECT Div FROM matchs WHERE season = 2008 AND FTR = 'D' GROUP BY Div ORDER BY COUNT(FTR) DESC LIMIT 1,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",140,6.519817590713501,250,"['matchs', 'divisions']"
1103,"Please list the titles of all the films under the category of ""Horror"" and has a rental rate of $2.99. Hint: ""Horror"" is the name of category; rental rate of $2.99 refers to rental_rate = 2.99",movie_3,SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Horror' AND T1.rental_rate = 2.99,"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",222,6.635404586791992,250,"['film_text', 'film', 'category']"
1104,What is the most common condition among the patients who received influenza seasonal injectable preservative free immunization? Hint: the most common condition refers to MAX(DESCRIPTION) from conditions; patients who received influenza seasonal injectable preservative free immunization refer to PATIENT where DESCRIPTION = 'Influenza seasonal injectable preservative free' from immunizations;,synthea,SELECT T2.DESCRIPTION FROM immunizations AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.DESCRIPTION = 'Influenza  seasonal  injectable  preservative free' GROUP BY T2.DESCRIPTION ORDER BY COUNT(T2.DESCRIPTION) DESC LIMIT 1,"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

CREATE TABLE `immunizations` (
  DATE DATE PRIMARY KEY,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT
);

",236,6.661784410476685,250,"['conditions', 'immunizations']"
1105,How many films did actor Daryl Wahlberg appear in?,movie_3,SELECT COUNT(T1.film_id) FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id WHERE T2.first_name = 'DARYL' AND T2.last_name = 'WAHLBERG',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",178,6.553224802017212,250,"['actor', 'film_actor']"
1106,What is the name of the character played by Tom Cruise in the movie Born on the Fourth of July? Hint: played by Tom Cruise refers to name = 'Tom Cruise'; movie Born on the Fourth of July refers to title = 'Born on the Fourth of July',movie,SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise' AND T1.Title = 'Born on the Fourth of July',"CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

",169,6.53973913192749,250,"['characters', 'movie']"
1107,Provide the ID and ISO code of Belgium. Hint: ID refers to country_id; ISO code refers to country_iso_code; Belgium refers to country_name = 'Belgium',movies_4,"SELECT COUNTry_id, COUNTry_iso_code FROM COUNTry WHERE COUNTry_name = 'Belgium'","CREATE TABLE `country` (
  country_id INTEGER,
  country_iso_code TEXT,
  country_name TEXT
);

",222,6.633069276809692,250,['country']
1108,"What is the average number of terms served for a current legislator that's famous or impact? Hint: average = DIVIDE(COUNT(bioguide), COUNT(bioguide_id)); legislator that's famous or impact refers to wikipedia_id is not null;",legislator,SELECT CAST(COUNT(T2.bioguide) AS REAL) / COUNT(DISTINCT T1.bioguide_id) FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.wikipedia_id IS NOT NULL,"CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",178,6.560865879058838,250,"['historical-terms', 'historical', 'social-media']"
1109,How many questions in 2014's survey had more than 200 answers? Hint: 2014 refer to SurveyID; COUNT(QuestionID) where COUNT(AnswerText) > 200,mental_health_survey,SELECT COUNT(QuestionID) FROM Answer WHERE SurveyID LIKE 2014 GROUP BY QuestionID ORDER BY COUNT(QuestionID) > 200 LIMIT 1,"CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",155,6.536780834197998,250,['answer']
1110,"Find the average number of absences for each student. Hint: average refers to DIVIDE(SUM(month), COUNT(name))",student_loan,SELECT AVG(month) FROM longest_absense_from_school,"CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",179,6.561599016189575,250,['longest_absense_from_school']
1111,"Give me the reason, name of the drug, and duration of medication under encounter ID 23c293ec-dbae-4a22-896e-f12cf3c8bac3. Tell me if the patient is still alive. Hint: reason refers to medications.REASONDESCRIPTION; name of the drug refers to medications.DESCRIPTION; duration of medication = SUBTRACT(julianday(medications.STOP, julianday(medications.START))); ecounter ID refers to encounters.ID; encounters.ID = '23c293ec-dbae-4a22-896e-f12cf3c8bac3'; if patients.deathdate is null then the patient is alive; if patients.deathdate is not null then the patient is not alive;",synthea,"SELECT T2.REASONDESCRIPTION, T2.DESCRIPTION , strftime('%J', T2.STOP) - strftime('%J', T2.START) AS days , CASE WHEN T1.deathdate IS NULL THEN 'alive' ELSE 'dead' END FROM patients AS T1 INNER JOIN medications AS T2 ON T1.patient = T2.PATIENT WHERE T2.ENCOUNTER = '23c293ec-dbae-4a22-896e-f12cf3c8bac3'","CREATE TABLE `medications` (
  START DATE PRIMARY KEY,
  STOP DATE,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

CREATE TABLE `encounters` (
  ID TEXT PRIMARY KEY,
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  CODE INTEGER,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",341,6.921571969985962,250,"['medications', 'encounters', 'patients']"
1112,State the number of female legislators in the list. Hint: female refers to gender_bio = 'F',legislator,SELECT COUNT(*) FROM current WHERE gender_bio = 'F',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",142,6.52034330368042,250,"['historical', 'historical-terms']"
1113,"What were the total orders of Medsep Group from 2018 to 2020? Hint: Medsep Group is the name of the customer; total orders refer to COUNT(OrderNumber); from 2018 to 2020 refers to SUBSTR(OrderDate, -2) IN ('18', '19', '20');",regional_sales,"SELECT SUM(CASE WHEN SUBSTR(T1.OrderDate, -2) IN ('18', '19', '20') AND T2.`Customer Names` = 'Medsep Group' THEN 1 ELSE 0 END) FROM `Sales Orders` AS T1 INNER JOIN Customers AS T2 ON T2.CustomerID = T1._CustomerID","CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  Customer Names TEXT
);

",203,6.615922927856445,250,"['sales orders', 'customers']"
1114,What is the name of the customer of ship ID 1147? Hint: name of customer refers to cust_name,shipping,SELECT T2.cust_name FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T1.ship_id = '1147',"CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

",138,6.518220901489258,250,"['shipment', 'customer']"
1115,"What is the unsaturated fat content in the recipe ""Raspberry Chiffon Pie""? Hint: Raspberry Chiffon Pie refers to title; unsaturated fat refers to SUBTRACT(total_fat, sat_fat)",cookbook,SELECT T2.total_fat - T2.sat_fat FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie',"CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `nutrition` (
  recipe_id INTEGER REFERENCES Recipe(recipe_id),
  protein REAL,
  carbo REAL,
  alcohol REAL,
  total_fat REAL,
  sat_fat REAL,
  cholestrl REAL,
  sodium REAL,
  iron REAL,
  vitamin_c REAL,
  vitamin_a REAL,
  fiber REAL,
  pcnt_cal_carb REAL,
  pcnt_cal_fat REAL,
  pcnt_cal_prot REAL,
  calories REAL
);

",166,6.5411481857299805,250,"['recipe', 'nutrition']"
1116,"For the Honkai Impact 3rd App, what is the highest sentiment polarity score and what genre does it belong to? Hint: highest sentiment polarity score refers to MAX(Sentiment_Polarity);",app_store,"SELECT MAX(T2.Sentiment_Polarity), T1.Genres FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = 'Honkai Impact 3rd' AND T2.Sentiment_Polarity > 0.5 GROUP BY T1.Genres","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",150,6.522164344787598,250,"['playstore', 'user_reviews']"
1117,List the official full names and genders of legislators who have Collins as their last name. Hint: genders refers to gender_bio; Collins is a last_name,legislator,"SELECT official_full_name, gender_bio FROM current WHERE last_name = 'Collins'","CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",154,6.527234315872192,250,"['historical', 'historical-terms', 'social-media']"
1118,Which department has a worker who just recently started working? Hint: recently started working refers to latest StartDate;,works_cycles,SELECT T1.Name FROM Department AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.DepartmentID = T2.DepartmentID ORDER BY T2.StartDate DESC LIMIT 1,"CREATE TABLE `EmployeeDepartmentHistory` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Employee(None),
  DepartmentID INTEGER PRIMARY KEY REFERENCES Department(None),
  ShiftID INTEGER PRIMARY KEY REFERENCES Shift(None),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ModifiedDate DATETIME
);

CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",446,7.192348003387451,250,"['EmployeeDepartmentHistory', 'employee']"
1119,"Provide the number of users who took part in the ""mental health survey for 2016"". Hint: mental health survey for 2016 refers to SurveyID = 2016",mental_health_survey,SELECT COUNT(DISTINCT T1.UserID) FROM Answer AS T1 INNER JOIN Survey AS T2 ON T1.SurveyID = T2.SurveyID WHERE T2.Description = 'mental health survey for 2016',"CREATE TABLE `survey` (
  SurveyID INTEGER,
  Description TEXT
);

",149,6.52080512046814,250,['survey']
1120,"What is the character and work ID of the text ""Fear not thou, man, thou shalt lose nothing here.""? Hint: character refers to chapter_id; text ""Fear not thou, man, thou shalt lose nothing here.""  refers to PlainText = 'Fear not thou, man, thou shalt lose nothing here.'",shakespeare,"SELECT T2.character_id, T1.work_id FROM chapters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.chapter_id WHERE T2.PlainText = 'Fear not thou, man, thou shalt lose nothing here.'","CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",190,6.5697021484375,250,['paragraphs']
1121,"How many orders were from Hanna Moos company in 1999? Hint: ""Hanna Moos"" is the CompanyName; in 1999 refer to YEAR (OrderDate) = 1999",retail_world,"SELECT COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1999' AND T1.CompanyName = 'Hanna Moos'","CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",186,6.5664660930633545,250,"['orders', 'customers']"
1122,Which player ID are left winger and weight more than 200? Hint: left winger refers to pos = 'L'; weight>200,hockey,SELECT DISTINCT playerID FROM Master WHERE pos LIKE '%L%' AND weight > 200 AND playerID IS NOT NULL AND pos = 'L',"CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

",246,6.689200401306152,250,['goalies']
1123,Which establishment has the highest number of inspections done? Give the name of the establishment and calculate for its average score per inspection. Hint: establishment refers to business_id; the highest number of inspections refers to MAX(COUNT(business_id)); avg(score);,food_inspection,"SELECT T2.name, AVG(T1.score) FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id GROUP BY T2.name ORDER BY COUNT(T2.business_id) DESC LIMIT 1","CREATE TABLE `inspections` (
  business_id INTEGER REFERENCES businesses(business_id),
  score INTEGER,
  date DATE,
  type TEXT
);

",167,6.5455827713012695,250,['inspections']
1124,"List down the business ID and attribute value of the attribute name of ""payment_types_visa"".",public_review_platform,"SELECT T2.business_id, T2.attribute_value FROM Attributes AS T1 INNER JOIN Business_Attributes AS T2 ON T1.attribute_id = T2.attribute_id WHERE T1.attribute_name = 'payment_types_visa'","CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

",182,6.559062957763672,250,['business_attributes']
1125,"What is the delivery time and the clerk of order number 6? Hint: delivery time = subtract(l_receiptdate, l_commitdate); clerk refers to o_clerk; order number 6 refers to o_orderkey = 6",retails,"SELECT JULIANDAY(T2.l_receiptdate) - JULIANDAY(T2.l_commitdate), T1.o_clerk FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderkey = 6","CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

",178,6.561417102813721,250,"['lineitem', 'orders']"
1126,What is the category of the business with short review length and highest review stars within business ID from 7 to 14? Hint: category of the business refers to category_name; short review length refers to review_length = 'Short'; the highest star rating refers to MAX(stars); business ID from 7 to 14 refers to business_id BETWEEN 7 AND 14,public_review_platform,SELECT DISTINCT T3.category_name FROM Reviews AS T1 INNER JOIN Business_Categories AS T2 ON T1.business_id = T2.business_id INNER JOIN Categories AS T3 ON T2.category_id = T3.category_id WHERE T2.business_id >= 7 AND T2.business_id < 15 AND T1.review_length = 'Short' AND T1.review_stars = ( SELECT MAX(review_stars) FROM Reviews ),"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",246,6.6845972537994385,250,"['business', 'business_categories', 'categories']"
1127,"Based on business in Phoenix, calculate the percentage of business with low funny votes. Hint: in Chandelier refers to city = 'Chandelier'; percentage = divide(count(business_id where review_votes_funny = 'Low'), count(business_id)); business with low funny votes refers to review_votes_funny = 'Low'",public_review_platform,SELECT CAST(SUM(CASE WHEN T2.review_votes_funny = 'Low' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city = 'Phoenix',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",239,6.671818256378174,250,['business']
1128,Which Production Technician has the highest pay rate? Hint: highest pay rate refers to MAX(Rate);,works_cycles,SELECT T1.BusinessEntityID FROM Employee AS T1 INNER JOIN EmployeePayHistory AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.JobTitle LIKE 'Production Technician%' ORDER BY T2.Rate DESC LIMIT 1,"CREATE TABLE `SalesOrderHeader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",446,7.251484394073486,250,"['employee', 'employee pay history']"
1129,List the closing time and day of week of active businesses in Scottsdale with stars greater than the 60% of average age of star rating. Hint: active business refers to active = 'true';  'Scottsdale' is the name of city; stars greater than the 60% of average age of star rating refers to stars  > avg(stars) * 60%,public_review_platform,"SELECT T2.closing_time, T3.day_of_week FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Scottsdale' AND T1.active LIKE 'TRUE' AND T1.stars > 0.6 * ( SELECT AVG(T1.stars) FROM Business AS T1 INNER JOIN Business_Hours AS T2 ON T1.business_id = T2.business_id INNER JOIN Days AS T3 ON T2.day_id = T3.day_id WHERE T1.city LIKE 'Scottsdale' AND T1.active LIKE 'TRUE' )","CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `days` (
  day_id INTEGER,
  day_of_week TEXT
);

CREATE TABLE `business_Hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

",246,6.680366516113281,250,"['business', 'days', 'business_Hours']"
1130,"Give the number of planes that took off from Los Angeles International airport on 2018/8/27. Hint: took off from refers to ORIGIN; Los Angeles International airport refers to Description = 'Los Angeles, CA: Los Angeles International'; on 2018/8/27 refers to FL_DATE = '2018/8/27';",airline,"SELECT SUM(CASE WHEN T2.FL_DATE = '2018/8/27' THEN 1 ELSE 0 END) AS count FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T1.Description = 'Los Angeles, CA: Los Angeles International'","CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",191,6.5667173862457275,250,['airlines']
1131,List the name of the cars with model year 1975. Hint: name of the car refers to car_name; model year 1975 refers to model_year = 1975,cars,SELECT T1.car_name FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T2.model_year = 1975,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",151,6.524238348007202,250,"['data', 'production']"
1132,Please list the indicator names belonging to Education: Inputs topic in 2000. Hint: Year = 'YR2000';,world_development_indicators,SELECT DISTINCT T2.IndicatorName FROM Footnotes AS T1 INNER JOIN Series AS T2 ON T1.Seriescode = T2.SeriesCode WHERE T1.Year = 'YR2000' AND T2.Topic = 'Education: Inputs',"CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",149,6.522073984146118,250,['indicators']
1133,"How many of the shipments bound for New York City were shipped to Harry's Hot Rod Auto and Truck Accessories? Hint: ""New York"" is the city_name; 'Harry's Hot Rod Auto & Truck Accessories' is the cust_name",shipping,SELECT COUNT(*) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id WHERE T3.city_name = 'New York' AND T1.cust_name = 'Harry''s Hot Rod Auto & Truck Accessories',"CREATE TABLE `city` (
  city_id INTEGER,
  city_name TEXT,
  state TEXT,
  population INTEGER,
  area REAL
);

CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",169,6.541824579238892,250,"['city', 'customer', 'shipment']"
1134,"Among the cities with alias Ponce, what is the percentage of cities with a country level FIPS code of less than 20? Hint: DIVIDE(COUNT(county_fips < 20), COUNT(county_fips)) as percentage where alias = 'Ponce';",address,SELECT CAST(COUNT(CASE WHEN T2.county_fips < 20 THEN T2.zip_code ELSE NULL END) AS REAL) * 100 / COUNT(T2.zip_code) FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.alias = 'Ponce',"CREATE TABLE `country` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  county TEXT PRIMARY KEY,
  state TEXT REFERENCES state(abbreviation)
);

CREATE TABLE `alias` (
  zip_code INTEGER REFERENCES zip_data(zip_code),
  alias TEXT
);

",194,6.593769311904907,250,"['country', 'alias']"
1135,"What is the percentage of star score 5 that was collected by title ""Sex, Pies and Idiot Scrapes""? Hint: percentage = DIVIDE(SUM(stars = 5), COUNT(stars)) as percentage",simpson_episodes,"SELECT CAST(SUM(CASE WHEN T2.stars = 5 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Sex, Pies and Idiot Scrapes';","CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",175,6.555853366851807,250,['vote']
1136,List all the cities that belong to United Arab Emirates. Hint: United Arab Emirates refers to country = 'United Arab Emirates',movie_3,SELECT T1.city FROM city AS T1 INNER JOIN country AS T2 ON T2.country_id = T1.country_id WHERE country = 'United Arab Emirates',"CREATE TABLE `city` (
  city_id INTEGER,
  city TEXT,
  country_id INTEGER REFERENCES country(None),
  last_update DATETIME
);

CREATE TABLE `country` (
  country_id INTEGER,
  country TEXT,
  last_update DATETIME
);

",195,6.5973498821258545,250,"['city', 'country']"
1137,What is the average coldest temperature for the zip code of 94301 and what stations are within the zip code? Include the latitude and longitude as well. Hint: coldest temperature refers to min_temperature_f; average coldest temperature refers = AVG(min_temperature_f); stations refers to name; latitude refers to lat; longitude refers to long;,bike_share_1,"SELECT AVG(T3.min_temperature_f), T1.long, T1.lat FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name INNER JOIN weather AS T3 ON T3.zip_code = T2.zip_code WHERE T3.zip_code = 94301","CREATE TABLE `weather` (
  date TEXT,
  max_temperature_f INTEGER,
  mean_temperature_f INTEGER,
  min_temperature_f INTEGER,
  max_dew_point_f INTEGER,
  mean_dew_point_f INTEGER,
  min_dew_point_f INTEGER,
  max_humidity INTEGER,
  mean_humidity INTEGER,
  min_humidity INTEGER,
  max_sea_level_pressure_inches REAL,
  mean_sea_level_pressure_inches REAL,
  min_sea_level_pressure_inches REAL,
  max_visibility_miles INTEGER,
  mean_visibility_miles INTEGER,
  min_visibility_miles INTEGER,
  max_wind_Speed_mph INTEGER,
  mean_wind_speed_mph INTEGER,
  max_gust_speed_mph INTEGER,
  precipitation_inches TEXT,
  cloud_cover INTEGER,
  events TEXT,
  wind_dir_degrees INTEGER,
  zip_code TEXT
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",191,6.569720983505249,250,"['weather', 'station']"
1138,"How many urgent orders were shipped the next day? Hint: the order is urgent if o_orderpriority = '1-URGENT'; shipped the next day refers to SUBTRACT(l_shipdate, o_orderdate) = 1;",retails,SELECT COUNT(T2.o_orderkey) FROM lineitem AS T1 INNER JOIN orders AS T2 ON T2.o_orderkey = T1.l_orderkey WHERE JULIANDAY(T1.l_shipdate) - JULIANDAY(T2.o_orderdate) = 1 AND T2.o_orderpriority = '1-URGENT',"CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",180,6.5589635372161865,250,"['orders', 'lineitem']"
1139,How many customers gave a product the best possible rating? Please list their names. Hint: customers' name refers to ReviewerName; best possible ratings means the highest rating = 5,works_cycles,SELECT ReviewerName FROM ProductReview WHERE Rating = 5,"CREATE TABLE `productreview` (
  ProductReviewID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  ReviewerName TEXT,
  ReviewDate DATETIME,
  EmailAddress TEXT,
  Rating INTEGER,
  Comments TEXT,
  ModifiedDate DATETIME
);

CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",460,7.21785044670105,250,"['productreview', 'person']"
1140,What are the names of Robert King's territories? Hint: Robert King is a full name of an employee where LastName = 'King' AND FirstName = 'Robert'; names of territories refer to TerritoryDescription;,retail_world,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.LastName = 'King' AND T1.FirstName = 'Robert',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",183,6.566097259521484,250,['employees']
1141,List the company names of customers from the city with the most customers. Hint: most customers refers to max(count(Relationship)),retail_world,SELECT CompanyName FROM `Customer and Suppliers by City` WHERE CITY = ( SELECT City FROM `Customer and Suppliers by City` GROUP BY City ORDER BY COUNT(Relationship) DESC LIMIT 1 ),"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",164,6.53628396987915,250,['customers']
1142,State the region id of Japan. Hint: region id refers to region.id; Japan refers to region_name = 'Japan',video_games,SELECT T.id FROM region AS T WHERE T.region_name = 'Japan',"CREATE TABLE `region` (
  id INTEGER,
  region_name TEXT
);

",158,6.531618356704712,250,['region']
1143,"Who is the villain of the movie ""Beauty and the Beast""? Hint: Beauty and the Beast refers to movie_title = 'Beauty and the Beast';",disney,SELECT villian FROM characters WHERE movie_title = 'Beauty and the Beast',"CREATE TABLE `characters` (
  movie_title TEXT PRIMARY KEY,
  release_date TEXT,
  hero TEXT REFERENCES voice-actors(character),
  villian TEXT,
  song TEXT
);

CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

",159,6.531141042709351,250,"['characters', 'movies_total_gross']"
1144,"Calculate the total net profit of the store located in highest median income city. Hint: net profit can be computed as SUBTRACT(Unit Price, Unit Cost); highest median income city refers to City Name where MAX(Median Income);",regional_sales,"SELECT SUM(REPLACE(T1.`Unit Price`, ',', '') - REPLACE(T1.`Unit Cost`, ',', '')) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID ORDER BY T2.`Median Income` DESC LIMIT 1","CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",174,6.551943063735962,250,"['store locations', 'sales orders']"
1145,How many representatives are there in the state with the highest monthly benefit payments for retired workers? Hint: state with highest monthly benefits payment for retired workers refers to Max(monthly_benefits_retired_workers),address,SELECT COUNT(T3.cognress_rep_id) FROM zip_data AS T1 INNER JOIN state AS T2 ON T1.state = T2.abbreviation INNER JOIN congress AS T3 ON T2.abbreviation = T3.abbreviation ORDER BY T1.monthly_benefits_retired_workers DESC LIMIT 1,"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `congress` (
  cognress_rep_id TEXT PRIMARY KEY,
  first_name TEXT,
  last_name TEXT,
  CID TEXT,
  party TEXT,
  state TEXT,
  abbreviation TEXT REFERENCES state(abbreviation),
  House TEXT,
  District INTEGER,
  land_area REAL
);

",178,6.550861120223999,250,"['state', 'congress']"
1146,"Which nation has the smallest population, and where is its capital located?",mondial_geo,"SELECT Name, Capital FROM country ORDER BY Population ASC LIMIT 1","CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

",260,6.741060256958008,250,"['country', 'city']"
1147,"What is business number 1580's net profit? Hint: business number 1580 refers to BusinessEntityID = 1580; Net profit = SUBTRACT(LastReceiptCost,StandardPrice)",works_cycles,SELECT LastReceiptCost - StandardPrice FROM ProductVendor WHERE BusinessEntityID = 1580,"CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",475,7.256080150604248,250,['salesorderheader']
1148,What is the capital city of the Philippines? Hint: capital city refers to Capital; Philippines is a name of country;,world,SELECT T1.Capital FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Philipiines',"CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",137,6.522048234939575,250,"['city', 'country']"
1149,List any five female students' names who enlisted for the air force. Hint: female students refers to enlist.name who are NOT in male.name; air force refers to organ = 'air_force';,student_loan,SELECT T1.name FROM enlist AS T1 LEFT JOIN male AS T2 ON T2.name = T1.name WHERE T2.name IS NULL AND T1.organ = 'air_force' LIMIT 5,"CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",194,6.601192235946655,250,"['enlist', 'male']"
1150,Describe the care plans of patient Major D'Amore's plan of care.,synthea,SELECT DISTINCT T2.DESCRIPTION FROM patients AS T1 INNER JOIN careplans AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Major' AND T1.last = 'D''Amore',"CREATE TABLE `careplans` (
  ID TEXT,
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE REAL,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",163,6.5375964641571045,250,['careplans']
1151,"How many ""5"" star reviews does the Yelp business No. ""10682"" get? Hint: 5 star reviews refers to review_stars = 5; business No. refers to business_id;",public_review_platform,SELECT COUNT(review_length) FROM Reviews WHERE business_id = 10682 AND review_stars = 5,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

",209,6.61353063583374,250,['reviews']
1152,List street names in San Francisco city.,restaurant,SELECT street_name FROM location WHERE city = 'San Francisco',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

",113,6.458791255950928,250,['location']
1153,"In 2019, how many users in the United States have a family history of mental illness? Hint: 2019 refer to SurveyID; Users in the United States refers to AnswerText = 'United States' where questionid = 3; have a family history of mental illness refers to AnswerText = 'Yes' where questionid = 6",mental_health_survey,SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN ( SELECT T2.questionid FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID = 2019 AND T2.questionid = 6 AND T1.AnswerText LIKE 'Yes' ) AS T2 ON T1.QuestionID = T2.questionid WHERE T1.SurveyID = 2019 AND T2.questionid = 3 AND T1.AnswerText LIKE 'United States',"CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",182,6.562698841094971,250,['answer']
1154,How many universities scored 40 in teaching criteria? Hint: scored 40 refers to score = 40; in teaching refers to criteria_name = 'Teaching',university,SELECT COUNT(*) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T2.score = 40 AND T1.criteria_name = 'Teaching' AND T2.score = 40,"CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

CREATE TABLE `ranking_criteria` (
  id INTEGER,
  ranking_system_id INTEGER REFERENCES ranking_system(id),
  criteria_name TEXT
);

",166,6.543678045272827,250,"['university_ranking_year', 'ranking_criteria']"
1155,What is the description of the airline code 19049?,airline,SELECT Description FROM `Air Carriers` WHERE Code = 19049,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",123,6.468003511428833,250,['airlines']
1156,How many restaurants have more than 4 star reviews? Hint: more than 4 star review refers to review > 4,restaurant,SELECT COUNT(id_restaurant) AS cnt FROM generalinfo WHERE review > 4,"CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",130,6.506747007369995,250,['generalinfo']
1157,"Among the male customers, how many of them come from a place with over 30,000 inhabitants? Hint: SEX = 'Male', over 30,000 inhabitants refer to NHABITANTS_K > 30; place refers to GEOID;",software_company,SELECT COUNT(T1.GEOID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.SEX = 'Male' AND T2.INHABITANTS_K > 30,"CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",182,6.568214416503906,250,"['demog', 'customers']"
1158,What is the average width and height of the objects in image ID 47? List their object classes as well. Hint: The bounding box's W and H abbreviations stand for the object's width and height in which average width and height refer to AVG(W) and AVG(H) respectively; image ID 47 refers to IMG_ID = 47; object classes refer to OBJ_CLASS;,image_and_language,"SELECT T2.OBJ_CLASS, AVG(T1.W), AVG(T1.H) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 47 GROUP BY T2.OBJ_CLASS","CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `obj_classES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",238,6.676866769790649,250,"['img_obj', 'obj_classES']"
1159,How many Australian customers who have credit line under 220000? Hint: Australian is a nationality of country = 'Australia'; credit line refers to creditLimit; creditLimit < 220000;,car_retails,SELECT COUNT(creditLimit) FROM customers WHERE creditLimit < 220000 AND country = 'Australia',"CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",174,6.556941986083984,250,['customers']
1160,Who is the author of the publication named 'Real-Time Automata'? Hint: 'Real-Time Automata' is the title of paper; publication refers to title;,authors,SELECT T2.Name FROM Paper AS T1 INNER JOIN PaperAuthor AS T2 ON T1.Id = T2.PaperId WHERE T1.Title = 'Real-Time Automata',"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `paperauthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

",151,6.532127380371094,250,"['paper', 'paperauthor']"
1161,"What is the average salary of the employees who takes charge of the sales of over 4 territories? Hint: average salary = DIVIDE(SUM(Salary), COUNT(EmployeeID)); employees who takes charge of over 4 territories refers to EmployeeID WHERE COUNT(TerritoryID) > 4;",retail_world,SELECT AVG(T1.Salary) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID GROUP BY T1.EmployeeID HAVING COUNT(T2.TerritoryID) > 4,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",205,6.611392974853516,250,['employees']
1162,"Provide the contact person name, title and supplied products by ""Escargots Nouveaux"" company. Hint: ""Escargots Nouveaux"" company refers to CompanyName = 'Escargots Nouveaux';",retail_world,"SELECT T2.ContactName, T2.ContactTitle, T1.ProductName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Escargots Nouveaux'","CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",182,6.5678017139434814,250,"['products', 'suppliers']"
1163,Which position has the highest amount of poor performing employees? Hint: poor performing employees refers to performance = 'Poor'; the highest amount of employees refers to MAX(positiontitle),human_resources,SELECT T2.positiontitle FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.performance = 'Poor' GROUP BY T2.positiontitle ORDER BY COUNT(T2.positiontitle) DESC LIMIT 1,"CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

CREATE TABLE `employee` (
  ssn TEXT PRIMARY KEY,
  lastname TEXT,
  firstname TEXT,
  hiredate TEXT,
  salary TEXT,
  gender TEXT,
  performance TEXT,
  positionID INTEGER REFERENCES position(positionID),
  locationID INTEGER REFERENCES location(locationID)
);

",141,6.519477367401123,250,"['position', 'employee']"
1164,What is the title of Catalan language wikipedia page with revision page id '16203226'? Hint: revision page id '16203226' refers to revision = 16203226,language_corpus,SELECT title FROM pages WHERE revision = 16203226,"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",179,6.5595152378082275,250,['pages']
1165,How many inspections did All Style Buffet Restaurant have? Hint: All Style Buffet refers to dba_name = 'All Style Buffet'; Restaurant refers to facility_type = 'Restaurant',food_inspection_2,SELECT COUNT(T2.inspection_id) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.facility_type = 'Restaurant' AND T1.dba_name = 'All Style Buffet',"CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

",162,6.54947304725647,250,"['establishment', 'inspection']"
1166,"Who are the coaches for team with winning rate of 80% and above? Hint: winning rate of 80% and above refers to Divide (won, Sum(won, lost)) > 0.8; coaches refers to coachID",professional_basketball,"SELECT coachID FROM coaches GROUP BY tmID, coachID, won, lost HAVING CAST(won AS REAL) * 100 / (won + lost) > 80","CREATE TABLE `awards_coaches` (
  id INTEGER,
  year INTEGER REFERENCES coaches(year),
  coachID TEXT REFERENCES coaches(coachID),
  award TEXT,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES teams(year),
  tmID TEXT PRIMARY KEY REFERENCES teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  won INTEGER,
  lost INTEGER,
  post_wins INTEGER,
  post_losses INTEGER
);

",202,6.614104270935059,250,"['awards_coaches', 'coaches']"
1167,How many images have objects with the attributes of polka dot? Hint: attributes of polka dot refer to ATT_CLASS = 'polka dot'; images refer to IMG_ID;,image_and_language,SELECT COUNT(T2.OBJ_SAMPLE_ID) FROM ATT_CLASSES AS T1 INNER JOIN IMG_OBJ_ATT AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.ATT_CLASS = 'polka dot',"CREATE TABLE `IMG_REL` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",186,6.576940298080444,250,"['img_obj_att', 'att_class']"
1168,What are the top 3 categories with the most app users? Hint: most app users refers to MAX(COUNT(app_id));,talkingdata,"SELECT T.category FROM ( SELECT T2.category, COUNT(T1.app_id) AS num FROM app_labels AS T1 INNER JOIN label_categories AS T2 ON T1.label_id = T2.label_id GROUP BY T2.category ) AS T ORDER BY T.num DESC LIMIT 3","CREATE TABLE `app_labels` (
  app_id INTEGER REFERENCES app_all(app_id),
  label_id INTEGER REFERENCES label_categories(label_id)
);

CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",199,6.608977317810059,250,"['app_labels', 'label_categories']"
1169,Which country had the highest value of indicator belongs to Private Sector & Trade: Exports topic? Please list the country name and indicator name. Hint: country refers to CountryName;,world_development_indicators,"SELECT T1.CountryName, T1.IndicatorName FROM Indicators AS T1 INNER JOIN Series AS T2 ON T1.IndicatorName = T2.IndicatorName WHERE T2.Topic = 'Private Sector & Trade: Exports' ORDER BY T1.Value DESC LIMIT 1","CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",155,6.53848934173584,250,"['indicators', 'country']"
1170,What is the current status of the order with the highest shipping cost? Hint: shipping cost and Freight are synonyms; highest shipping cost refers to MAX(Freight);,works_cycles,SELECT Status FROM SalesOrderHeader ORDER BY Freight DESC LIMIT 1,"CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",461,7.227186918258667,250,['salesorderheader']
1171,Please list the names of the top 3 most expensive cars. Hint: name of the car refers to car_name; the most expensive refers to max(price),cars,SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 3,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",141,6.52164363861084,250,"['data', 'price']"
1172,"What is the area code of Phillips county in Montana? Hint: ""PHILLIPS"" is the county; 'Montana' is the name of state",address,SELECT DISTINCT T1.area_code FROM area_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code INNER JOIN state AS T3 ON T2.state = T3.abbreviation WHERE T2.county = 'PHILLIPS' AND T3.name = 'Montana',"CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

",165,6.545773029327393,250,"['area_code', 'state']"
1173,Please give the order number and product name of the order which has the lowest unit price. Hint: the lowest unit price refers to MIN(Unit Price);,regional_sales,"SELECT T1.OrderNumber, T2.`Product Name` FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID WHERE REPLACE(T1.`Unit Price`, ',', '') = ( SELECT REPLACE(T1.`Unit Price`, ',', '') FROM `Sales Orders` AS T1 INNER JOIN Products AS T2 ON T2.ProductID = T1._ProductID ORDER BY REPLACE(T1.`Unit Price`, ',', '') LIMIT 1 )","CREATE TABLE `products` (
  ProductID INTEGER,
  Product Name TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",154,6.532139778137207,250,"['products', 'sales orders']"
1174,Give the YouTube ID of the channel 'RepWassermanSchultz.' Hint: RepWassermanSchultz refers to youtube,legislator,SELECT youtube_id FROM `social-media` WHERE youtube = 'RepWassermanSchultz',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",147,6.523377180099487,250,"['historical', 'historical-terms', 'social-media']"
1175,"Among all the teams that made the playoffs in the 2007-2008 season, identify the percentage that played over 20 games. Hint: playoffs refers to GAMETYPE = 'Playoffs'; percentage = MULTIPLY(DIVIDE(SUM(GP > 20), COUNT(ELITEID)), 100); played over 20 games refers to GP > 20; 2007-2008 season refers to SEASON = '2007-2008';",ice_hockey_draft,SELECT CAST(COUNT(CASE WHEN GP > 20 THEN TEAM ELSE NULL END) AS REAL) * 100 / COUNT(TEAM) FROM SeasonStatus WHERE SEASON = '2007-2008' AND GAMETYPE = 'Playoffs',"CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",234,6.664311170578003,250,"['seasonstatus', 'playerinfo']"
1176,"What is the average height of the male Olympic competitors from Finland? Hint: DIVIDE(SUM(height), COUNT(id)) where region_name = 'Finland' and gender = 'M';",olympics,SELECT AVG(T3.height) FROM noc_region AS T1 INNER JOIN person_region AS T2 ON T1.id = T2.region_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T1.region_name = 'Finland' AND T3.gender = 'M',"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

",192,6.574832916259766,250,"['person_region', 'person']"
1177,How many users participated in the Survey No.2016? Hint: Survey No.2016 refers to SurveyID = 2016,mental_health_survey,SELECT COUNT(DISTINCT UserID) FROM Answer WHERE SurveyID LIKE 2016,"CREATE TABLE `survey` (
  SurveyID INTEGER,
  Description TEXT
);

",138,6.5164594650268555,250,['survey']
1178,"Write down the number of running business with each review count in Cave Creek city. Hint: number of running business refers to COUNT(business_id) where active = 'true'; each review count includes review_count = 'High', review_count = 'Medium', review_count = 'Low';",public_review_platform,"SELECT SUM(CASE WHEN review_count = 'High' THEN 1 ELSE 0 END) AS high , SUM(CASE WHEN review_count = 'Medium' THEN 1 ELSE 0 END) AS Medium , SUM(CASE WHEN review_count = 'Low' THEN 1 ELSE 0 END) AS low FROM Business WHERE city = 'Cave Creek' AND active = 'true'","CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",224,6.639288902282715,250,['business']
1179,"How many flights on the 1st of August 2018 were coming from Allentown, Pennsylvania? Hint: 1st of August 2018 refers to FL_DATE = '2018/8/1'; coming from Allentown, Pennsylvania refers to ORIGIN = 'ABE';",airline,SELECT COUNT(*) FROM Airlines WHERE FL_DATE = '2018/8/1' AND ORIGIN = 'ABE',"CREATE TABLE `airports` (
  Code TEXT PRIMARY KEY,
  Description TEXT
);

CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",177,6.558067321777344,250,"['airports', 'airlines']"
1180,What is the total sick leave hours of employees who do not wish to receive any e-mail promotion? Hint: Employees who do not wish to receive any e-mail promotions are marked as EmailPromotion = 0,works_cycles,SELECT SUM(T1.SickLeaveHours) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.EmailPromotion = 0,"CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",469,7.244995355606079,250,['employee']
1181,"List by order number the 3 items with the lowest price after applying the discount. Hint: order number refers to l_orderkey; the lowest price after applying the discount refers to MIN(MULTIPLY(l_extendedprice), SUBTRACT(1, l_discount));",retails,SELECT l_orderkey FROM lineitem ORDER BY l_extendedprice * (1 - l_discount) LIMIT 3,"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",186,6.564162254333496,250,['lineitem']
1182,What is the average donation amount to a project created by a teacher working in a school in Brooklyn? Hint: school in Brooklyn refers to school_city = 'Brooklyn'; Average = AVG(donation_total);,donor,SELECT SUM(T2.donation_total) / COUNT(donationid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.school_city = 'Brooklyn',"CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",163,6.543210029602051,250,"['donations', 'projects']"
1183,"Provide the genre of a movie title with a tagline of ""A long time ago in a galaxy far, far away…"". Hint: genre refers to genre_name; tagline of ""A long time ago in a galaxy far, far away…"" refers to tagline = 'A long time ago in a galaxy far, far away…'",movies_4,"SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T3.genre_id = T2.genre_id WHERE T1.tagline = 'A long time ago in a galaxy far, far away...'","CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

",251,6.696996450424194,250,"['movie', 'genre', 'movie_genres']"
1184,Give the alias of the cities with an Asian population of 7. Hint: Asian population of 7 refers to asian_population = 7;,address,SELECT T1.alias FROM alias AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.asian_population = 7,"CREATE TABLE `alias` (
  zip_code INTEGER REFERENCES zip_data(zip_code),
  alias TEXT
);

CREATE TABLE `country` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  county TEXT PRIMARY KEY,
  state TEXT REFERENCES state(abbreviation)
);

",163,6.540307998657227,250,"['alias', 'country']"
1185,"What is the percentage of the actors that showed up in the credit list of movie ""Dawn of the Planet of the Apes"" that were born after ""1970/1/1""? Hint: movie ""Dawn of the Planet of the Apes"" refers to Title = 'Dawn of the Planet of the Apes'; born after ""1970/1/1"" refers to Date of Birth > '1970/1/1'; percentage = divide(count(ActorID where Date of Birth > '1970/1/1'), count(ActorID))*100%",movie,SELECT CAST(SUM(CASE WHEN T3.`Date of Birth` > '1970-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.`Date of Birth`) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Dawn of the Planet of the Apes',"CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

",242,6.679981470108032,250,"['movie', 'actor']"
1186,What is the summary of the episode in which Emily Blunt is featured in?,simpson_episodes,SELECT T1.summary FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.person = 'Emily Blunt';,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",139,6.516483306884766,250,"['credit', 'episode', 'person']"
1187,"What was the contact name for the check ""NR157385""? Hint: Contact name refers to customerName;",car_retails,"SELECT t2.contactFirstName, t2.contactLastName FROM payments AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t1.checkNumber = 'NR157385'","CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",151,6.530460596084595,250,"['orders', 'customers']"
1188,Who are the top 5 professors who teaches the highest number of professional or master/undergraduate courses? Hint: professors refers to course.p_id; highest number of professional or master/undergraduate courses refers to max(count(course.course_id)) where courseLevel = 'Level_500',computer_student,SELECT T2.p_id FROM course AS T1 INNER JOIN taughtBy AS T2 ON T1.course_id = T2.course_id WHERE T1.courseLevel = 'Level_500' GROUP BY T2.p_id ORDER BY COUNT(T2.p_id) DESC LIMIT 5,"CREATE TABLE `course` (
  course_id INTEGER,
  courseLevel TEXT
);

CREATE TABLE `taughtby` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  p_id INTEGER PRIMARY KEY REFERENCES person(p_id)
);

",178,6.5610387325286865,250,"['course', 'taughtby']"
1189,What is the capital city of the country that has the percentage of Armenian speakers over 90%? Hint: Percentage of country > 90% refers to percentage > 90; America is one of country names,mondial_geo,SELECT T1.Capital FROM country AS T1 INNER JOIN language AS T2 ON T1.Code = T2.Country WHERE T2.Name = 'Armenian' AND T2.Percentage > 90,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `ethnicGroup` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Name TEXT PRIMARY KEY,
  Percentage REAL
);

",294,6.805280923843384,250,"['country', 'ethnicGroup']"
1190,"What is the average price of the orders made by a customer in Germany? Hint: DIVIDE(SUM(o_totalprice), COUNT(o_orderkey)) where n_name = 'GERMANY';",retails,SELECT AVG(T3.o_totalprice) FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN orders AS T3 ON T2.c_custkey = T3.o_custkey WHERE T1.n_name = 'GERMANY',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",170,6.545149087905884,250,"['customer', 'orders', 'nation']"
1191,Please list the product names of all the products on the LL Road Frame Sale. Hint: LL Road Frame Sale is a description of special offer,works_cycles,SELECT T3.Name FROM SpecialOffer AS T1 INNER JOIN SpecialOfferProduct AS T2 ON T1.SpecialOfferID = T2.SpecialOfferID INNER JOIN Product AS T3 ON T2.ProductID = T3.ProductID WHERE T1.Description = 'LL Road Frame Sale',"CREATE TABLE `productdescription` (
  ProductDescriptionID INTEGER,
  Description TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `specialoffer` (
  SpecialOfferID INTEGER,
  Description TEXT,
  DiscountPct REAL,
  Type TEXT,
  Category TEXT,
  StartDate DATETIME,
  EndDate DATETIME,
  MinQty INTEGER,
  MaxQty INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",452,7.203719615936279,250,"['productdescription', 'product', 'specialoffer']"
1192,"What were the locations of the events on 8th May, 2016? Hint: location = longitude, latitude; on 8th May, 2016 refers to `timestamp` LIKE '2016-05-08%';",talkingdata,"SELECT longitude, latitude FROM `events` WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-08'","CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

",231,6.653003692626953,250,['events']
1193,List all the coral islands along with its city and province. Hint: Baltic Sea is a sea located in Northern Europe,mondial_geo,"SELECT City, Province FROM locatedOn WHERE Island IN ( SELECT Name FROM island WHERE Type = 'coral' )","CREATE TABLE `island` (
  Name TEXT PRIMARY KEY,
  Islands TEXT,
  Area REAL,
  Height REAL,
  Type TEXT,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `geo_sea` (
  Sea TEXT PRIMARY KEY REFERENCES sea(None),
  Country TEXT PRIMARY KEY REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None)
);

CREATE TABLE `province` (
  Name TEXT PRIMARY KEY,
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population INTEGER,
  Area REAL,
  Capital TEXT,
  CapProv TEXT
);

CREATE TABLE `located` (
  City TEXT REFERENCES city(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  River TEXT REFERENCES river(None),
  Lake TEXT REFERENCES lake(None),
  Sea TEXT REFERENCES sea(None)
);

CREATE TABLE `locatedOn` (
  City TEXT PRIMARY KEY REFERENCES city(None),
  Province TEXT PRIMARY KEY REFERENCES province(None) REFERENCES city(None),
  Country TEXT PRIMARY KEY REFERENCES province(None) REFERENCES country(None),
  Island TEXT PRIMARY KEY REFERENCES island(None)
);

",272,6.765324592590332,250,"['island', 'geo_sea', 'province', 'located', 'locatedOn']"
1194,"Among the episodes with excellent rating which were aired in 2008, describe the title, episode's image, award name and person who were nominated. Hint: excellent rating refers to 7 < = rating < = 10; aired in 2008 refers to SUBSTRACT(air_date, 0, 5) = '2008'; who were nominated refers to result = 'Nominee'",simpson_episodes,"SELECT T2.title, T2.episode_image, T1.award, T1.person FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.rating BETWEEN 7 AND 10 AND SUBSTR(T2.air_date, 1, 4) = '2008' AND T1.result = 'Nominee';","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",221,6.6395583152771,250,"['award', 'episode', 'vote']"
1195,"Please list all the brands that contain a part under the type ""promo brushed steel"". Hint: brand refers to p_brand; type ""promo brushed steel"" refers to p_type = 'PROMO BRUSHED STEEL'",retails,SELECT p_brand FROM part WHERE p_type = 'PROMO BRUSHED STEEL',"CREATE TABLE `part` (
  p_partkey INTEGER,
  p_type TEXT,
  p_size INTEGER,
  p_brand TEXT,
  p_name TEXT,
  p_container TEXT,
  p_mfgr TEXT,
  p_retailprice REAL,
  p_comment TEXT
);

CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

",177,6.557402610778809,250,"['part', 'partsupp']"
1196,"Among all the patients who once had cystitis, what was the percentage of them being married? Hint: DIVIDE(COUNT(marital = 'M'), COUNT(patient)) as percentage where DESCRIPTION = 'Cystitis';
",synthea,SELECT CAST(SUM(CASE WHEN T1.marital = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T2.description = 'Cystitis',"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",197,6.600624322891235,250,"['conditions', 'patients']"
1197,"What is the position of Robert King? Hint: 'Robert King' is the full name of an employee; full name refers to FirstName, LastName; position refers to Title",retail_world,SELECT Title FROM Employees WHERE FirstName = 'Robert' AND LastName = 'King',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",172,6.55163836479187,250,['employees']
1198,Indicate the category name of the product name with the highest units on order.,retail_world,SELECT T2.CategoryName FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T1.UnitsOnOrder = ( SELECT MAX(T1.UnitsOnOrder) FROM Products ),"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `categories` (
  CategoryID INTEGER,
  CategoryName TEXT,
  Description TEXT
);

",151,6.52975606918335,250,"['products', 'categories']"
1199,"List the business' name and risk category of businesses with a score greater than the 80% of average score of all businesses. Hint: score greater than the 80% of average score of all businesses refers to score > MULTIPLY(0.8, avg(score) from inspections);",food_inspection,"SELECT DISTINCT T1.name, T3.risk_category FROM businesses AS T1 INNER JOIN inspections AS T2 ON T1.business_id = T2.business_id INNER JOIN violations AS T3 ON T1.business_id = T3.business_id WHERE T2.score > 0.8 * ( SELECT AVG(score) FROM inspections )","CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

CREATE TABLE `inspections` (
  business_id INTEGER REFERENCES businesses(business_id),
  score INTEGER,
  date DATE,
  type TEXT
);

",175,6.554537057876587,250,"['businesses', 'inspections']"
1200,"What is the full name of the customer who gave a 5-star rating and commented ""The quintessential dessert root beer. No ice cream required"" on his review? Hint: full name = First, Last; 5-star rating refers to StarRating = 5; commented ""The quintessential dessert root beer. No ice cream required"" refers to Review = 'The quintessential dessert root beer. No ice cream required.';",beer_factory,"SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN rootbeerreview AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.StarRating = 5 AND T2.Review = 'The quintessential dessert root beer. No ice cream required.'","CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  First TEXT,
  Last TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER,
  Email TEXT,
  PhoneNumber TEXT,
  FirstPurchaseDate DATE,
  SubscribedToEmailList TEXT,
  Gender TEXT
);

",225,6.641927242279053,250,"['rootbeerreview', 'customers']"
1201,How many menu items were created on 28th March 2011? Hint: created on 28th March 2011 refers to created_at like '2011-03-28%';,menu,SELECT COUNT(*) FROM MenuItem WHERE created_at LIKE '2011-03-28%',"CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",161,6.541041851043701,250,['menuitem']
1202,How many players were born in the 80s and have bowling skill of 2? Hint: born in the 80s refers to DOB like '198%'; have bowling skill of 2 refers to Bowling_skill = 2;,soccer_2016,SELECT COUNT(Player_Name) FROM Player WHERE DOB LIKE '198%' AND Bowling_skill = 2,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

",259,6.740384340286255,250,['player']
1203,When was the latest date the items of order no.1 were shipped? Hint: order no.1 refers to l_orderkey = 1; the latest date shipped refers to MAX(l_shipdate);,retails,SELECT MAX(l_shipdate) FROM lineitem WHERE l_orderkey = 1,"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",167,6.547494411468506,250,['lineitem']
1204,What is the weight of the player with the longest time on ice in the player’s first 7 years of NHL career in kilograms? Hint: weight in kilograms refers to weight_in_kg; longest time on ice in the player's first 7 years of NHL career refers to MAX(sum_7yr_TOI);,ice_hockey_draft,SELECT T2.weight_in_kg FROM PlayerInfo AS T1 INNER JOIN weight_info AS T2 ON T1.weight = T2.weight_id WHERE T1.sum_7yr_TOI = ( SELECT MAX(t.sum_7yr_TOI) FROM PlayerInfo t ),"CREATE TABLE `weight_info` (
  weight_id INTEGER,
  weight_in_kg INTEGER,
  weight_in_lbs INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",189,6.572718143463135,250,"['weight_info', 'playerinfo']"
1205,"How many institutions with over 50,000 students in 2011 had a percentage of oversea students of more than 10%? Hint: institutions with over 50,000 students refers to num_students > 50000; in 2011 refers to year = 2011; percentage of oversea students of more than 10% refers to pct_international_students > 10;",university,SELECT COUNT(*) FROM university_year WHERE year = 2011 AND num_students > 50000 AND pct_international_students > 10,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",231,6.657363414764404,250,"['university', 'university_year']"
1206,Give the number of 30-year-old users who were active in the events on 2016/5/2. Hint: 30-year-old refers to age = '30'; active refers to is_active = 1; on 2016/5/2 refers to timestamp = '2016/5/2 XX:XX:XX';,talkingdata,"SELECT COUNT(T3.device_id) FROM app_events AS T1 INNER JOIN events AS T2 ON T1.event_id = T2.event_id INNER JOIN gender_age AS T3 ON T2.device_id = T3.device_id WHERE SUBSTR(`timestamp`, 1, 10) = '2016-05-02' AND T1.is_active = 1 AND T3.age = '30'","CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

",255,6.699905157089233,250,"['events', 'gender_age']"
1207,"How many percent of countries in North America use English? Hint: percentage = MULTIPLY(DIVIDE(COUNT(Language = 'English' WHERE Continent = 'North America'), COUNT(Language WHERE Continent = 'North America')), 1.0); North America refers to Continent = 'North America'; use English refers to Language = 'English';",world,"SELECT CAST(SUM(IIF(T2.Language = 'English', 1, 0)) AS REAL) * 100 / COUNT(T1.Code) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode","CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",187,6.565691232681274,250,"['countrylanguage', 'country']"
1208,How many students have absent from school? Hint: have absent from school refers to month > 1;,student_loan,SELECT COUNT(name) FROM longest_absense_from_school WHERE month > 1,"CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",170,6.548351049423218,250,['longest_absense_from_school']
1209,In which country's latest trade data and latest water withdrawal data were both updated in the year 2013? Give its long name and Alpha 2 code.,world_development_indicators,"SELECT LongName, Alpha2Code FROM Country WHERE LatestTradeData = 2013 AND LatestWaterWithdrawalData = 2013","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",154,6.529238224029541,250,"['country', 'countrynotes']"
1210,Provide the score of the most populated university in 2011. Hint: most populated university refers to MAX(num_students); in 2011 refers to year = 2011;,university,SELECT T2.score FROM university_year AS T1 INNER JOIN university_ranking_year AS T2 ON T1.university_id = T2.university_id WHERE T1.year = 2011 ORDER BY T1.num_students DESC LIMIT 1,"CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",177,6.558677673339844,250,['university_year']
1211,"Among all movies in the list, calculate the percentage of movies that were never been rated? Hint: percentage of movies that were never been rated refers to DIVIDE(COUNT(main_movies.movie_id ! = main_ratings.movie_id),COUNT(movie_id))",movie_platform,SELECT CAST(SUM(CASE WHEN T2.movie_id IS NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.movie_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",181,6.559167385101318,250,"['movies', 'ratings']"
1212,What is the total male graduates in 2012 in the state whereby the institute with the highest average amount of student aid going to undergraduate recipients is located? Hint: male refers to gender = 'M'; graduates refers to grad_cohort; in 2012 refers to year = 2012; highest average amount of student aid going to undergraduate recipients refers to MAX(aid_value);,college_completion,SELECT COUNT(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN state_sector_grads AS T2 ON T1.state = T2.state WHERE T2.year = 2012 AND T2.gender = 'M' ORDER BY T1.aid_value DESC LIMIT 1,"CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

CREATE TABLE `state_sector_grads` (
  stateid INTEGER REFERENCES state_sector_details(stateid),
  state TEXT REFERENCES institution_details(state),
  state_abbr TEXT,
  control TEXT,
  level TEXT,
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT,
  grad_cohort_ct INTEGER
);

",217,6.62864875793457,250,"['institution_grads', 'state_sector_grads']"
1213,Calculate the total price of orders by Customer#000000013. Hint: Customer#000000013 is the name of the customer which refers to c_name;,retails,SELECT SUM(T1.o_totalprice) FROM orders AS T1 INNER JOIN customer AS T2 ON T1.o_custkey = T2.c_custkey WHERE T2.c_name = 'Customer#000000013',"CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

",170,6.549367427825928,250,"['orders', 'customer']"
1214,"What is the average value of Adjusted net enrolment rate, primary, both sexes (%) indicator in Algeria from 1975 to 1980? Hint: the average value of Adjusted net enrolment rate, primary, both sexes (%) is DIVIDE(SUM(Value), SUM(IndicatorName = 'Adjusted net enrolment rate, primary, both sexes (%)')); Year BETWEEN 1975 AND 1980; Algeria is the name of country where CountryName = 'Algeria'",world_development_indicators,"SELECT CAST(SUM(Value) AS REAL) / COUNT(CountryCode) FROM Indicators WHERE CountryName = 'Algeria' AND Year > 1974 AND Year < 1981 AND IndicatorName = 'Adjusted net enrolment rate, primary, both sexes (%)'","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",249,6.689713001251221,250,"['country', 'indicators']"
1215,"List all the cities where Shawn Torres sells Audio products. Hint: ""Shawn Torres"" is the name of Sales Team; Audio product refers to Product Name = 'Audio'",regional_sales,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T4.`Product Name` = 'Audio' AND T3.`Sales Team` = 'Shawn Torres' THEN T1.`City Name` ELSE NULL END AS T FROM `Store Locations` T1 INNER JOIN `Sales Orders` T2 ON T2._StoreID = T1.StoreID INNER JOIN `Sales Team` T3 ON T3.SalesTeamID = T2._SalesTeamID INNER JOIN Products T4 ON T4.ProductID = T2._ProductID ) WHERE T IS NOT NULL,"CREATE TABLE `products` (
  ProductID INTEGER,
  Product Name TEXT
);

CREATE TABLE `sales team` (
  SalesTeamID INTEGER,
  Sales Team TEXT,
  Region TEXT
);

CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",162,6.537562131881714,250,"['products', 'sales team', 'store locations', 'sales orders']"
1216,What is the salary rate per hour that the company paid to the first 5 employees that they hired? Hint: salary rate per hour refers to Rate; first 5 employees that were hired refers to 5 oldest HireDate;,works_cycles,"SELECT T1.Rate FROM EmployeePayHistory AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN Person AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID ORDER BY T2.HireDate ASC LIMIT 0, 5","CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",471,7.244810342788696,250,['employee']
1217,"List the dishes that appeared at the left upper corner of the CHAS.BRADLEY'S OYSTER & DINING ROOM""s sponsored menu. Hint: appeared at the left upper corner refers to xpos < 0.25 and ypos < 0.25; CHAS.BRADLEY'S OYSTER & DINING ROOM refers to sponsor = 'CHAS.BRADLEY''S OYSTER & DINING ROOM';",menu,SELECT T4.name FROM MenuItem AS T1 INNER JOIN MenuPage AS T2 ON T1.menu_page_id = T2.id INNER JOIN Menu AS T3 ON T2.menu_id = T3.id INNER JOIN Dish AS T4 ON T1.dish_id = T4.id WHERE T3.sponsor = 'CHAS.BRADLEY''S OYSTER & DINING ROOM' AND T1.xpos < 0.25 AND T1.ypos < 0.25,"CREATE TABLE `menupage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",215,6.6300883293151855,250,"['menupage', 'menu', 'menuitem']"
1218,List all the names of the winning team's players in the first match of season 1. Hint: names refers to Player_Name; winning team's refers to Match_Winner; first match of season 1 refers to Season_Id = 1 and min(Match_Date),soccer_2016,SELECT T3.Player_Name FROM `Match` AS T1 INNER JOIN Player_Match AS T2 ON T1.Match_Winner = T2.Team_Id INNER JOIN Player AS T3 ON T2.Player_Id = T3.Player_Id WHERE T1.Season_Id = 1 ORDER BY T1.Match_Date LIMIT 1,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

",262,6.747937202453613,250,"['player', 'match']"
1219,List down the keyword and crew member's name for episode id S20-E1.,simpson_episodes,"SELECT T1.keyword, T2.person FROM Keyword AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.episode_id = 'S20-E1';","CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `keyword` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  keyword TEXT PRIMARY KEY
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",143,6.520876407623291,250,"['credit', 'episode', 'keyword', 'person']"
1220,"What is the average, highest and lowest annual payments collected between 1/1/2003 to 12/31/2005? Hint: paymentDate BETWEEN '2003-01-01' AND '2005-12-31'; average annual payments = DIVIDE(SUM(amount), 3);",car_retails,"SELECT CAST(SUM(T1.amount) AS REAL) / 3, MAX(T1.amount) , MIN(T1.amount) FROM payments AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.paymentDate BETWEEN '2003-01-01' AND '2005-12-31'","CREATE TABLE `payments` (
  customerNumber INTEGER PRIMARY KEY REFERENCES customers(customerNumber),
  checkNumber TEXT PRIMARY KEY,
  paymentDate DATE,
  amount REAL
);

",208,6.62178635597229,250,['payments']
1221,"Find and list the full name of employees who are from the territory, Wilton. Hint: full name refers to FirstName LastName; Wilton refers to TerritoryDescription = 'Wilton'",retail_world,"SELECT T1.FirstName, T1.LastName FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Wilton'","CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",176,6.5611090660095215,250,['employees']
1222,"For the flight with the tail number 'N702SK', which air carrier does it belong to? Hint: tail number refers to TAIL_NUM; TAIL_NUM = 'N702SK';",airline,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.TAIL_NUM = 'N702SK' GROUP BY T2.Description,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",155,6.543737888336182,250,"['airlines', 'air carriers']"
1223,"What are the full names of the non-google female entity legislators that have not been registered in Federal Election Commission data? Hint: full names = first_name, last_name; non-google entity refers to google_entity_id_id is null; female refers to gender_bio = 'F'; have not been registered in Federal Election Commission data refers to fec_id is null;",legislator,"SELECT first_name, last_name FROM historical WHERE gender_bio = 'F' AND google_entity_id_id IS NULL AND fec_id IS NULL","CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",203,6.61651086807251,250,"['historical', 'historical-terms']"
1224,What is the series code for Germany and what is its description? Hint: Germany refers to shortname = 'Germany',world_development_indicators,"SELECT T1.Seriescode, T1.Description FROM CountryNotes AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T2.ShortName = 'Germany'","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `series` (
  SeriesCode TEXT PRIMARY KEY,
  Topic TEXT,
  IndicatorName TEXT,
  ShortDefinition TEXT,
  LongDefinition TEXT,
  UnitOfMeasure TEXT,
  Periodicity TEXT,
  BasePeriod TEXT,
  OtherNotes INTEGER,
  AggregationMethod TEXT,
  LimitationsAndExceptions TEXT,
  NotesFromOriginalSource TEXT,
  GeneralComments TEXT,
  Source TEXT,
  StatisticalConceptAndMethodology TEXT,
  DevelopmentRelevance TEXT,
  RelatedSourceLinks TEXT,
  OtherWebLinks INTEGER,
  RelatedIndicators INTEGER,
  LicenseType TEXT
);

",144,6.527275800704956,250,"['country', 'series']"
1225,Please list the names of all the restaurants that have met all requirements in one inspection. Hint: met all requirements refers to inspections where score = 100;,food_inspection,SELECT DISTINCT T2.name FROM inspections AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T1.score = 100,"CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

CREATE TABLE `inspections` (
  business_id INTEGER REFERENCES businesses(business_id),
  score INTEGER,
  date DATE,
  type TEXT
);

",143,6.524351119995117,250,"['businesses', 'inspections']"
1226,What is the prevalence rate of the patients' diseases started on 9th May 2014? Hint: diseases started on 9th May 2014 refer to DESCRIPTION from conditions where START = '5/9/2014';,synthea,"SELECT T2.""PREVALENCE RATE"" FROM conditions AS T1 INNER JOIN all_prevalences AS T2 ON lower(T1.DESCRIPTION) = lower(T2.ITEM) WHERE T1.START = '2014-05-09'","CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

",204,6.611505031585693,250,['conditions']
1227,List the genres of Forrest Gump movie. Hint: genres refers to genre_name; Forrest Gump movie refers to title = 'Forrest Gump',movies_4,SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Forrest Gump',"CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

",215,6.62531042098999,250,"['movie_genres', 'genre']"
1228,"Provide the character name, paragraph number, and plain text of ""cousin to the king"" description. Hint: character name refers to CharName; paragraph number refers to ParagraphNum",shakespeare,"SELECT T1.CharName, T2.ParagraphNum, T2.PlainText FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T1.Description = 'cousin to the king'","CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",155,6.534363746643066,250,"['characters', 'paragraphs']"
1229,How many seasons did Pune Warriors participate in? Hint: Pune Warriors refers to Team_Name = 'Pune Warriors',soccer_2016,SELECT COUNT(T.Season_Year) FROM ( SELECT T4.Season_Year FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner INNER JOIN Player_Match AS T3 ON T1.Team_Id = T3.Team_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id WHERE T1.Team_Name = 'Pune Warriors' GROUP BY T4.Season_Year ) T,"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",231,6.659846067428589,250,"['match', 'team']"
1230,"What condition forced Mrs. Joye Homenick to seek medical attention in 2017? Hint: condition refers to conditions.DESCRIPTION; in 2017 refers to substr(conditions.START, 1, 4) = '2017';",synthea,"SELECT T2.DESCRIPTION FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Joye' AND T1.last = 'Homenick' AND strftime('%Y', T2.START) = '2017'","CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

",205,6.613954782485962,250,['conditions']
1231,What are the URL to the list page on Mubi of the lists with followers between 1-2 and whose last update timestamp was on 2012? Hint: URL to the list page on Mubi refers to list_url; list_followers = 1 OR list_followers = 2; last update timestamp was on 2012 refers to list_update_timestamp_utc BETWEEN '2012-1-1' AND '2012-12-31';,movie_platform,SELECT list_url FROM lists WHERE list_update_timestamp_utc LIKE '2012%' AND list_followers BETWEEN 1 AND 2 ORDER BY list_update_timestamp_utc DESC LIMIT 1,"CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

",230,6.660415172576904,250,['lists']
1232,What is the weight in kilograms of the player with the highest number of goal differential of all time? Hint: weight in kilograms refers to weight_in_kg; highest number of goal differential of all time refers to MAX(PLUSMINUS);,ice_hockey_draft,SELECT T3.weight_in_kg FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID INNER JOIN weight_info AS T3 ON T2.weight = T3.weight_id ORDER BY T1.PLUSMINUS DESC LIMIT 1,"CREATE TABLE `weight_info` (
  weight_id INTEGER,
  weight_in_kg INTEGER,
  weight_in_lbs INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",168,6.546781539916992,250,"['weight_info', 'playerinfo']"
1233,How much money did the customer No.297 pay for the rental which happened at 12:27:27 on 2005/7/28? Hint: customer no. 297 refers to customer_id = 297; at 12:27:27 on 2005/7/28 refers to rental_date = '2005-07-28 12:27:27'; money pay for rent refers to amount,movie_3,SELECT T1.amount FROM payment AS T1 INNER JOIN rental AS T2 ON T1.rental_id = T2.rental_id WHERE T2.rental_date = '2005-07-28 12:27:27' AND T2.customer_id = 297,"CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",277,6.769363641738892,250,"['payment', 'rental']"
1234,"Please list the names of all the ingredients needed for the recipe ""Raspberry Chiffon Pie"" that do not need preprocessing. Hint: Raspberry Chiffon Pie refers to title; do not need preprocessing refers to preparation IS NULL",cookbook,SELECT T3.name FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T2.preparation IS NULL,"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",165,6.5509092807769775,250,"['quantity', 'recipe', 'ingredient']"
1235,"Please indicate the keywords of the title ""Double, Double, Boy in Trouble"".",simpson_episodes,"SELECT T2.keyword FROM Episode AS T1 INNER JOIN Keyword AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Double, Double, Boy in Trouble';","CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `keyword` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  keyword TEXT PRIMARY KEY
);

",141,6.5204925537109375,250,"['episode', 'keyword']"
1236,Where was the 1920 Summer held? Hint: where it was held refers to city_name; the 1920 Summer refers to games_name = '1920 Summer';,olympics,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T3.games_name = '1920 Summer',"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",191,6.575862407684326,250,"['games', 'games_city', 'city']"
1237,In which region where a game had the lowest number of sales? Hint: which region refers to region_name; lowest number of sales refers to MIN(num_sales);,video_games,SELECT DISTINCT T1.region_name FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id ORDER BY T2.num_sales LIMIT 1,"CREATE TABLE `region` (
  id INTEGER,
  region_name TEXT
);

CREATE TABLE `region_sales` (
  region_id INTEGER REFERENCES region(id),
  game_platform_id INTEGER REFERENCES game_platform(id),
  num_sales REAL
);

",165,6.545602321624756,250,"['region', 'region_sales']"
1238,How many products shipped on 19/11/1994 were ordered on 21/09/1994? Hint: shipped on 19/11/1994 refers to l_shipdate = '1994-11-19'; ordered on 21/09/1994 refers to o_orderdate = '1994-09-21',retails,SELECT COUNT(T2.l_partkey) FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_orderdate = '1994-09-21' AND T2.l_shipdate = '1994-11-19',"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",221,6.637037754058838,250,['lineitem']
1239,"For the player in 2011 who started every game he played, which team had the player who had the most steals? Hint: in 2011 refers to year = 2011; started every game refers to GP = GS; the most steals refers to max(steals); team refers to tmID",professional_basketball,"SELECT T1.tmID FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 2011 AND T2.GP = T2.GS GROUP BY T1.tmID, T2.steals ORDER BY T2.steals DESC LIMIT 1","CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",221,6.635375022888184,250,['player_allstar']
1240,"What are the full names of the sales person whose bonuses are less than 1,000? Hint: full name = FirstName+MiddleName+LastName; Bonus<1000;",works_cycles,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM SalesPerson AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.Bonus < 1000","CREATE TABLE `salesperson` (
  BusinessEntityID INTEGER REFERENCES Employee(BusinessEntityID),
  TerritoryID INTEGER REFERENCES SalesTerritory(TerritoryID),
  SalesQuota REAL,
  Bonus REAL,
  CommissionPct REAL,
  SalesYTD REAL,
  SalesLastYear REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",469,7.240002155303955,250,['salesperson']
1241,What is the category that the most app users belong to? Hint: most app users refers to MAX(COUNT(app_id));,talkingdata,"SELECT T.category FROM ( SELECT T1.category, COUNT(T2.app_id) AS num FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id GROUP BY T1.label_id ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `app_labels` (
  app_id INTEGER REFERENCES app_all(app_id),
  label_id INTEGER REFERENCES label_categories(label_id)
);

CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",198,6.600565433502197,250,"['app_labels', 'label_categories']"
1242,"What is the average shipment weight carried by the oldest Mack? Hint: ""Mack"" is the make; oldest refers to Min(model_year); average shipment weight refers to AVG(weight)",shipping,SELECT AVG(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Mack',"CREATE TABLE `driver` (
  driver_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip_code INTEGER,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",155,6.52903413772583,250,"['driver', 'shipment']"
1243,Provide the students' names and schools who enrolled for 15 months. Hint: enrolled for 15 months refers to month = 15;,student_loan,"SELECT name, school FROM enrolled WHERE month = 15","CREATE TABLE `enrolled` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  school TEXT PRIMARY KEY,
  month INTEGER
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY
);

",183,6.5622475147247314,250,"['enrolled', 'person']"
1244,"On image no. 5, name the attributes that are composed of multiple objects. Hint: image no. 5 refers to IMG_ID = 5; name the attributes refers to ATT_CLASS; multiple objects refers to count(ATT_CLASS) > = 2",image_and_language,SELECT T2.ATT_CLASS FROM IMG_OBJ_ATT AS T1 INNER JOIN ATT_CLASSES AS T2 ON T1.ATT_CLASS_ID = T2.ATT_CLASS_ID WHERE T1.IMG_ID = 5 GROUP BY T2.ATT_CLASS HAVING COUNT(T2.ATT_CLASS) > 2,"CREATE TABLE `img_obj_att` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID),
  ATT_CLASS_ID INTEGER PRIMARY KEY REFERENCES ATT_CLASSES(ATT_CLASS_ID),
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

CREATE TABLE `att_classes` (
  ATT_CLASS_ID INTEGER,
  ATT_CLASS TEXT
);

",203,6.609119415283203,250,"['img_obj_att', 'att_classes']"
1245,"For which question did the user No.2183 gave the answer ""Mood Disorder (Depression, Bipolar Disorder, etc)""? Hint: question refers to questiontext; user No.2183 refers to userID = 2183",mental_health_survey,"SELECT T1.AnswerText FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 2183 AND T1.AnswerText = 'Mood Disorder (Depression, Bipolar Disorder, etc)'","CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",163,6.538884878158569,250,['answer']
1246,"For the on going assembly item Component ID No. 494, what's the Unit measure for it? Hint: On going assembly item means the assembly item haven't been finished, therefore EndDate is null",works_cycles,SELECT T2.Name FROM BillOfMaterials AS T1 INNER JOIN UnitMeasure AS T2 ON T1.UnitMeasureCode = T2.UnitMeasureCode WHERE T1.ComponentID = 494 AND T1.EndDate IS NULL GROUP BY T2.name,"CREATE TABLE `ProductCostHistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  StandardCost REAL,
  ModifiedDate DATETIME
);

",469,7.243621349334717,250,['ProductCostHistory']
1247,What is the title with the most ordered quantity in year 1992? Hint: total quantity refers to qty; most ordered quantity refers to order with the highest quantity where MAX(count(qty)); date refers to ord_date; year 1992 refers to YEAR(ord_date) = 1992,book_publishing_company,"SELECT T2.title FROM sales AS T1 INNER JOIN titles AS T2 ON T1.title_id = T2.title_id WHERE STRFTIME('%Y', T1.ord_date) = '1992' ORDER BY T1.qty DESC LIMIT 1","CREATE TABLE `sales` (
  stor_id TEXT PRIMARY KEY REFERENCES stores(stor_id),
  ord_num TEXT PRIMARY KEY,
  ord_date DATETIME,
  qty INTEGER,
  payterms TEXT,
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id)
);

CREATE TABLE `titles` (
  title_id TEXT PRIMARY KEY,
  title TEXT,
  type TEXT,
  pub_id TEXT REFERENCES publishers(pub_id),
  price REAL,
  advance REAL,
  royalty INTEGER,
  ytd_sales INTEGER,
  notes TEXT,
  pubdate DATETIME
);

",213,6.6229541301727295,250,"['sales', 'titles']"
1248,Which country has the highest infant mortality? Also state its population growth.,mondial_geo,"SELECT T1.Name, T2.Population_Growth FROM country AS T1 INNER JOIN population AS T2 ON T1.Code = T2.Country ORDER BY T2.Infant_Mortality DESC LIMIT 1","CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `population` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population_Growth REAL,
  Infant_Mortality REAL
);

",261,6.743651866912842,250,"['country', 'population']"
1249,"Mention the full name, hired date and performance status of the employee whose location is in Utah state. Hint: full name = firstname, lastname; Utah refers to state = 'UT'",human_resources,"SELECT T1.firstname, T1.lastname, T1.hiredate, T1.performance FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.state = 'UT'","CREATE TABLE `location` (
  locationID INTEGER,
  locationcity TEXT,
  address TEXT,
  state TEXT,
  zipcode INTEGER,
  officephone TEXT
);

CREATE TABLE `employee` (
  ssn TEXT PRIMARY KEY,
  lastname TEXT,
  firstname TEXT,
  hiredate TEXT,
  salary TEXT,
  gender TEXT,
  performance TEXT,
  positionID INTEGER REFERENCES position(positionID),
  locationID INTEGER REFERENCES location(locationID)
);

",145,6.521859407424927,250,"['location', 'employee']"
1250,"What is the average salary of all employees with a 2 year degree position? Hint: 2 year degree refers to educationrequired = '2 year degree'; calculation = DIVIDE(SUM(salary), COUNT(positiontitle))",human_resources,"SELECT AVG(CAST(REPLACE(SUBSTR(T1.salary, 4), ',', '') AS REAL)) FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T2.educationrequired = '2 year degree'","CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

CREATE TABLE `employee` (
  ssn TEXT PRIMARY KEY,
  lastname TEXT,
  firstname TEXT,
  hiredate TEXT,
  salary TEXT,
  gender TEXT,
  performance TEXT,
  positionID INTEGER REFERENCES position(positionID),
  locationID INTEGER REFERENCES location(locationID)
);

",154,6.533570766448975,250,"['position', 'employee']"
1251,What attributes are used to describe the wall on image no. 27. Hint: What attributes refers to ATT_CLASS; wall on image no. 27 refers to OBJ_CLASS = 'wall' and IMG_ID = 27,image_and_language,SELECT T4.ATT_CLASS FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID INNER JOIN IMG_OBJ_ATT AS T3 ON T1.IMG_ID = T3.IMG_ID INNER JOIN ATT_CLASSES AS T4 ON T3.ATT_CLASS_ID = T4.ATT_CLASS_ID WHERE T2.OBJ_CLASS = 'wall' AND T1.IMG_ID = 27 GROUP BY T4.ATT_CLASS,"CREATE TABLE `img_obj_att` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID),
  ATT_CLASS_ID INTEGER PRIMARY KEY REFERENCES ATT_CLASSES(ATT_CLASS_ID),
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

CREATE TABLE `att_classes` (
  ATT_CLASS_ID INTEGER,
  ATT_CLASS TEXT
);

",200,6.611917734146118,250,"['img_obj_att', 'att_classes']"
1252,"Please list the first name of the players from the NBA league with the forward position. Hint: ""NBA"" is the lgID; with the forward position refers to pos = 'F' of pos = 'F-C'",professional_basketball,SELECT DISTINCT T1.firstName FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE (T1.pos = 'F' OR T1.pos = 'F-C') AND T2.lgID = 'NBA',"CREATE TABLE `players` (
  playerID TEXT PRIMARY KEY,
  useFirst TEXT,
  firstName TEXT,
  middleName TEXT,
  lastName TEXT,
  nameGiven TEXT,
  fullGivenName TEXT,
  nameSuffix TEXT,
  nameNick TEXT,
  pos TEXT,
  firstseason INTEGER,
  lastseason INTEGER,
  height REAL,
  weight INTEGER,
  college TEXT,
  collegeOther TEXT,
  birthDate DATE,
  birthCity TEXT,
  birthState TEXT,
  birthCountry TEXT,
  highSchool TEXT,
  hsCity TEXT,
  hsState TEXT,
  hsCountry TEXT,
  deathDate DATE,
  race TEXT
);

",198,6.602218151092529,250,['players']
1253,"Among the suppliers from Middle East region, how many suppliers were in debt? Hint: suppliers from Middle East region refer to s_name where r_name = 'MIDDLE EAST'; in debt refers to s_acctbal < 0;",retails,SELECT COUNT(T3.s_name) FROM region AS T1 INNER JOIN nation AS T2 ON T1.r_regionkey = T2.n_regionkey INNER JOIN supplier AS T3 ON T2.n_nationkey = T3.s_nationkey WHERE T3.s_acctbal < 0 AND T1.r_name = 'MIDDLE EAST',"CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

CREATE TABLE `region` (
  r_regionkey INTEGER,
  r_name TEXT,
  r_comment TEXT
);

",176,6.560788869857788,250,"['supplier', 'region']"
1254,"For the weather station has store no.9, what was the increased percentage of the average temperature from 2012/2/2 to 2012/2/3? Hint: store no.9 refers to store_nbr = 9; 2012/2/2 refers to date = '2012-02-02'; 2012/2/3 refers to date = '2012-02-03'; average temperature refers to tavg; increase percentage = Divide (Subtract (tavg where date = '2012-02-03', tavg where date = '2012-02-02'), tavg where date = '2012-02-02') * 100",sales_in_weather,SELECT CAST((SUM(CASE WHEN T1.`date` = '2012-02-03' THEN T1.tavg * 1 ELSE 0 END) - SUM(CASE WHEN T1.`date` = '2012-02-02' THEN T1.tavg * 1 ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.`date` = '2012-02-02' THEN T1.tavg * 1 ELSE 0 END) FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 9,"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `relation` (
  store_nbr INTEGER REFERENCES sales_in_weather(store_nbr),
  station_nbr INTEGER REFERENCES weather(station_nbr)
);

",291,6.7984888553619385,250,"['weather', 'relation']"
1255,What is the description and film title of ID 996? Hint: ID 996 refers to film_id = 996,movie_3,"SELECT description, title FROM film_text WHERE film_id = 996","CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

",194,6.594656229019165,250,['film_text']
1256,"How many films in the horror category were included in PG-13-rated? Hint: ""Horror"" is the name of category; PG-13 rated refers to rating = 'PG-13'",movie_3,SELECT COUNT(T1.film_id) FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.name = 'Horror' AND T1.rating = 'PG-13',"CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",210,6.620363235473633,250,"['film_category', 'category']"
1257,What is the care plan description of the prevalent disease with the highest prevalence percentage? Hint: highest prevalence percentage refers to MAX(PREVALENCE PERCENTAGE);,synthea,"SELECT T4.DESCRIPTION FROM all_prevalences AS T1 INNER JOIN conditions AS T2 ON T2.DESCRIPTION = T1.ITEM INNER JOIN encounters AS T3 ON T2.ENCOUNTER = T3.ID INNER JOIN careplans AS T4 ON T4.ENCOUNTER = T3.ID ORDER BY T1.""PREVALENCE PERCENTAGE"" DESC LIMIT 1","CREATE TABLE `careplans` (
  ID TEXT,
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE REAL,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

CREATE TABLE `all_prevalences` (
  ITEM TEXT PRIMARY KEY,
  POPULATION TYPE TEXT,
  OCCURRENCES INTEGER,
  POPULATION COUNT INTEGER,
  PREVALENCE RATE REAL,
  PREVALENCE PERCENTAGE REAL
);

",184,6.563539505004883,250,"['careplans', 'all_prevalences']"
1258,List down the first name of patients who encountered normal pregnancy. Hint: encountered normal pregnancy refers to encounters where REASONDESCRIPTION = 'Normal pregnancy';,synthea,SELECT DISTINCT T1.first FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T2.REASONDESCRIPTION = 'Normal pregnancy',"CREATE TABLE `encounters` (
  ID TEXT PRIMARY KEY,
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  CODE INTEGER,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",179,6.560494899749756,250,"['encounters', 'patients']"
1259,"List down the author ID of authors with a name of ""Peter"". Hint: ""Peter"" is the name of author",authors,SELECT AuthorId FROM PaperAuthor WHERE Name = 'Peter',"CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",139,6.514230251312256,250,['author']
1260,How many trains running west have double sided cars in 3rd position? Hint: west is a direction; double sided cars refers to sides = 'double'; 3rd position refers to position = 3,trains,SELECT COUNT(T.train_id) FROM (SELECT T1.train_id FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T1.position = 3 AND T2.direction = 'west' AND T1.sides = 'double' GROUP BY T1.train_id)as T,"CREATE TABLE `cars` (
  id INTEGER,
  train_id INTEGER REFERENCES trains(id),
  position INTEGER,
  shape TEXT,
  len TEXT,
  sides TEXT,
  roof TEXT,
  wheels INTEGER,
  load_shape TEXT,
  load_num INTEGER
);

CREATE TABLE `trains` (
  id INTEGER,
  direction TEXT
);

",146,6.520821571350098,250,"['cars', 'trains']"
1261,"What is the percentage difference between the attendence of disabled and non-disable students? Do the disable students show better attendance than non-disable students? Hint: difference = MULTIPLY(DIVIDE(SUBTRACT(COUNT(longest_absense_from_school.name that is in disabled.name), COUNT(longest _absense_from_school.name that is NOT in disabled.name), longest _absense_from_school.name), 100)); IF COUNT(longest_absense_from_school.name that is in disabled.name) < COUNT(longest _absense_from_school.name that is NOT in disabled.name), it means, the disabled students have better attendance than non-disabled students; IF COUNT(longest_absense_from_school.name that is in disabled.name) > COUNT(longest _absense_from_school.name that is NOT in disabled.name), it means the disabled students do not have a better attendance than non-disabled students;",student_loan,"SELECT CAST((SUM(IIF(T2.name IS NOT NULL AND T1.month = 0, 1, 0)) - SUM(IIF(T2.name IS NULL AND T1.month = 0, 1, 0))) AS REAL) * 100 / COUNT(T1.name), IIF(SUM(IIF(T2.name IS NOT NULL AND T1.month = 0, 1, 0)) - SUM(IIF(T2.name IS NULL AND T1.month = 0, 1, 0)) > 0, 'YES', 'NO') AS isHigh FROM longest_absense_from_school AS T1 LEFT JOIN disabled AS T2 ON T2.name = T1.name","CREATE TABLE `disabled` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",372,6.984961271286011,250,"['disabled', 'longest_absense_from_school']"
1262,How many urgent orders did Clerk#000000001 handle in 1997? Hint: urgent order refers to o_orderpriority = '1-URGENT'; Clerk#000000001 refers to o_clerk = 'Clerk#000000001'; 1997 refers to year(o_orderdate) = 1997,retails,"SELECT COUNT(o_orderkey) FROM orders WHERE STRFTIME('%Y', o_orderdate) = '1997' AND o_clerk = 'Clerk#000000001' AND o_orderpriority = '1-URGENT'","CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

",222,6.640052080154419,250,['orders']
1263,What is the title of the employee who handled order id 10270?,retail_world,SELECT T1.Title FROM Employees AS T1 INNER JOIN Orders AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T2.OrderID = 10257,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

",153,6.532856702804565,250,"['employees', 'orders']"
1264,"How many domestic violence cases were brought in the ward that uses ""ward13@cityofchicago.org""? Hint: domestic violence refers to domestic = 'TRUE'; uses ""ward13@cityofchicago.org"" refers to ward_email = 'ward13@cityofchicago.org'",chicago_crime,SELECT SUM(CASE WHEN T2.domestic = 'TRUE' THEN 1 ELSE 0 END) FROM Ward AS T1 INNER JOIN Crime AS T2 ON T2.ward_no = T1.ward_no WHERE T1.ward_email = 'ward13@cityofchicago.org',"CREATE TABLE `ward` (
  ward_no INTEGER,
  alderman_first_name TEXT,
  alderman_last_name TEXT,
  alderman_name_suffix TEXT,
  ward_office_address TEXT,
  ward_office_zip TEXT,
  ward_email TEXT,
  ward_office_phone TEXT,
  ward_office_fax TEXT,
  city_hall_office_room INTEGER,
  city_hall_office_phone TEXT,
  city_hall_office_fax TEXT,
  Population INTEGER
);

",196,6.596391201019287,250,['ward']
1265,List down all film titles starred by Jane Jackman.,movie_3,SELECT T1.title FROM film AS T1 INNER JOIN film_actor AS T2 ON T1.film_id = T2.film_id INNER JOIN actor AS T3 ON T2.actor_id = T3.actor_id WHERE T3.first_name = 'JANE' AND T3.last_name = 'JACKMAN',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",175,6.551699161529541,250,"['actor', 'film_actor', 'film']"
1266,"What were the difference of the CHS team's winning rate between 1946 and 1947 in the post-season series games? Please provide your answer in percentages. Hint: CHS team refers to tmIDWinner = 'CHS'; difference = subtract(divide(count(series_post where year = 1947 and tmIDWinner = 'CHS'), count(series_post where year = 1947)), divide(count(series_post where year = 1946 and tmIDWinner = 'CHS'), count(series_post where year = 1946)))",professional_basketball,SELECT CAST(SUM(CASE WHEN year = 1947 AND tmIDWinner = 'CHS' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN year = 1947 THEN 1 ELSE 0 END) - CAST(SUM(CASE WHEN year = 1946 AND tmIDWinner = 'CHS' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN year = 1946 THEN 1 ELSE 0 END) FROM series_post,"CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

CREATE TABLE `series_post` (
  id INTEGER,
  year INTEGER REFERENCES teams(year) REFERENCES teams(year),
  round TEXT,
  series TEXT,
  tmIDWinner TEXT REFERENCES teams(tmID),
  lgIDWinner TEXT,
  tmIDLoser TEXT REFERENCES teams(tmID),
  lgIDLoser TEXT,
  W INTEGER,
  L INTEGER
);

",289,6.794604778289795,250,"['teams', 'series_post']"
1267,"Who played the role of the ""president of NBC West Coast"" in the first episode? Hint: who refers to name; the role of the ""president of NBC West Coast"" refers to role = 'president of NBC West Coast'; the first episode refers to episode = 1",law_episode,SELECT T2.name FROM Credit AS T1 INNER JOIN Person AS T2 ON T2.person_id = T1.person_id INNER JOIN Episode AS T3 ON T1.episode_id = T3.episode_id WHERE T3.episode = 1 AND T1.role = 'president of NBC West Coast',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",179,6.559434652328491,250,"['credit', 'person']"
1268,"Which order has a higher priority, order no. 4 or order no. 36? Hint: earlier orderdate have higher priority in delivery; which order no. 4 or order no. 36 refers to o_orderkey in (4, 36) where MIN(o_orderdate);",retails,"SELECT l_orderkey FROM lineitem WHERE l_orderkey IN (4, 36) ORDER BY l_shipdate DESC LIMIT 1","CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

",190,6.572089195251465,250,['orders']
1269,"Between Rome and Juliet, which character was mentioned the most in the The Tragedy of Romeo and Juliet? Calculate for Romeo and Juliet's individual amount of appearance in percentage against the overall number of characters that appeared in the said work. Hint: Rome and Juliet refers to CharName = 'Romeo' and CharName = 'Juliet'; The Tragedy of Romeo and Juliet refers to LongTitle = 'The Tragedy of Romeo and Juliet'; percentage = divide(sum(charater.id) when CharName = 'Romeo', sum(charater.id)) as percentage and percentage = divide(sum(charater.id) when CharName = 'Juliet', count(charater.id)) as percentage",shakespeare,"SELECT SUM(IIF(T4.CharName = 'Romeo', 1, 0)), SUM(IIF(T4.CharName = 'Juliet', 1, 0)), CAST(SUM(IIF(T4.CharName = 'Romeo', 1, 0)) + SUM(IIF(T4.CharName = 'Juliet', 1, 0)) AS REAL) * 100 / COUNT(T1.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id","CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",280,6.775154113769531,250,"['characters', 'works', 'chapters', 'paragraphs']"
1270,Which state has the most players selected as all stars? Hint: state refers to birthState; the most players refers to max(count(playerID)),professional_basketball,SELECT T1.birthState FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID GROUP BY T1.birthState ORDER BY COUNT(DISTINCT T1.playerID) DESC LIMIT 1,"CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",180,6.559982776641846,250,['player_allstar']
1271,"Among the crimes located in the community area with the highest population, what is the percentage of domestic violence? Hint: the highest population refers to max(population); domestic violence refers to domestic = 'TRUE'; percentage = divide(count(domestic = 'TRUE'), count(domestic)) where population = max(population) * 100%",chicago_crime,SELECT CAST(COUNT(CASE WHEN T2.domestic = 'TRUE' THEN T2.domestic END) AS REAL) * 100 / COUNT(T2.domestic) FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T2.community_area_no = T1.community_area_no GROUP BY T1.community_area_no HAVING COUNT(T1.population) ORDER BY COUNT(T1.population) DESC LIMIT 1,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",203,6.609001398086548,250,"['crime', 'community_area']"
1272,"How many counties are there in Alabama? Hint: ""Alabama"" is the name",address,SELECT COUNT(T2.county) FROM state AS T1 INNER JOIN country AS T2 ON T1.abbreviation = T2.state WHERE T1.name = 'Alabama',"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `cbsa` (
  CBSA INTEGER,
  CBSA_name TEXT,
  CBSA_type TEXT
);

",150,6.523436069488525,250,"['state', 'cbsa']"
1273,List all Zimbabwean players. Hint: Zimbabwean refers to Country_Name = 'Zimbabwea'; players refers to Player_Name,soccer_2016,SELECT T1.Player_Name FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id WHERE T2.Country_Name = 'Zimbabwea',"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `country` (
  Country_Id INTEGER REFERENCES Country(Country_Id),
  Country_Name TEXT
);

",237,6.670194149017334,250,"['player', 'country']"
1274,Find the average number of downloads for Single-Tables released by '2Pac' between 2001 and 2013. Hint: 2Pac is an artist; releaseType = 'single'; between 2001 and 2013 refers to groupYear between 2001 and 2013; average number of downloads = AVG(totalSnatched);,music_tracker,SELECT AVG(totalSnatched) FROM torrents WHERE artist LIKE '2Pac' AND releaseType LIKE 'Single' AND groupYear BETWEEN 2001 AND 2013,"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

",192,6.573338747024536,250,['torrents']
1275,What are the indicator codes for the Republic of Albania in the year 1960? Hint: the Republic of Albania refers to LongName = 'Republic of Albania'; in the year 1960 refers to Year = '1960',world_development_indicators,SELECT DISTINCT T1.IndicatorCode FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Year = 1960 AND T2.LongName = 'Republic of Albania',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",178,6.557525157928467,250,"['country', 'indicators']"
1276,What is the acceleration of the most expensive car? Hint: the most expensive refers to max(price),cars,SELECT T1.acceleration FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID ORDER BY T2.price DESC LIMIT 1,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

",128,6.472497224807739,250,"['data', 'price']"
1277,How many voice actors for the movie Aladdin? Hint: Aladdin is the name of the movie which refers to movie = 'Aladdin';,disney,SELECT COUNT('voice-actor') FROM `voice-actors` WHERE movie = 'Aladdin',"CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

",154,6.53795313835144,250,['voice-actors']
1278,Which teams have had a player awarded the Purple Cap and another with the Orange Cap in the same season?,soccer_2016,"SELECT T5.Team_Name, T1.Orange_Cap, T1.Purple_Cap FROM Season AS T1 INNER JOIN Match AS T2 ON T1.Season_Id = T2.Season_Id INNER JOIN Player_Match AS T3 ON T2.Match_Id = T3.Match_Id INNER JOIN Player AS T4 ON T3.Player_Id = T4.Player_Id INNER JOIN Team AS T5 ON T3.Team_Id = T5.Team_Id GROUP BY T5.Team_Name, T1.Orange_Cap, T1.Purple_Cap","CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `season` (
  Season_Id INTEGER,
  Man_of_the_Series INTEGER,
  Orange_Cap INTEGER,
  Purple_Cap INTEGER,
  Season_Year INTEGER
);

CREATE TABLE `win_by` (
  Win_Id INTEGER,
  Win_Type TEXT
);

",223,6.646236419677734,250,"['player', 'season', 'win_by']"
1279,Which two countries have the border in length of 803 km? Give the full names of the countries.,mondial_geo,"SELECT T1.Name, T3.Name FROM country AS T1 INNER JOIN borders AS T2 ON T1.Code = T2.Country1 INNER JOIN country AS T3 ON T3.Code = T2.Country2 WHERE T2.Length = 803","CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `borders` (
  Country1 TEXT PRIMARY KEY REFERENCES country(None),
  Country2 TEXT PRIMARY KEY REFERENCES country(None),
  Length REAL
);

",269,6.756431341171265,250,"['country', 'borders']"
1280,"List the names of the top five coins traded on January 1, 2014. Hint: the top five coins refers to cmc_rank< = 5; on January 1, 2014 refers to date = '2014-01-01'",coinmarketcap,SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2014-01-01' AND T2.cmc_rank <= 5,"CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",166,6.547729015350342,250,"['historical', 'coins']"
1281,"Among the products that are purchased, how many of them have never received the highest rating? Hint: product that are purchased refers to MakeFlag = 0; never received highest rating refers to Rating! = 5

",works_cycles,SELECT COUNT(T1.ProductID) FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.MakeFlag = 0 AND T1.Rating != 5,"CREATE TABLE `productreview` (
  ProductReviewID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  ReviewerName TEXT,
  ReviewDate DATETIME,
  EmailAddress TEXT,
  Rating INTEGER,
  Comments TEXT,
  ModifiedDate DATETIME
);

CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",466,7.23920750617981,250,"['productreview', 'product']"
1282,Is there any coach who has not been a player before but has won award? State the ID. Hint: coach who has not been a player means playerID is NULL and coachID is not NULL;,hockey,SELECT DISTINCT T2.coachID FROM Master AS T1 INNER JOIN AwardsCoaches AS T2 ON T1.coachID = T2.coachID WHERE T1.playerID IS NULL,"CREATE TABLE `awardscoaches` (
  coachID TEXT REFERENCES Coaches(coachID),
  award TEXT,
  year INTEGER,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  notes TEXT,
  g INTEGER,
  w INTEGER,
  l INTEGER,
  t INTEGER,
  postg TEXT,
  postw TEXT,
  postl TEXT,
  postt TEXT
);

",254,6.702026844024658,250,"['awardscoaches', 'coaches']"
1283,"Calculate the percentage of congress representatives from the Democrat party. Among them, how many postal points are in the Hawaii state? Hint: DIVIDE(COUNT(party = 'Democrat'), COUNT(congress_rep_id)) as percentage; postal points refer to zip_code; state = 'Hawaii';",address,"SELECT CAST(SUM(CASE WHEN T1.party = 'Democrat' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*), SUM(CASE WHEN T1.state = 'Hawaii' THEN 1 ELSE 0 END) FROM congress AS T1 INNER JOIN zip_congress AS T2 ON T1.cognress_rep_id = T2.district","CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `congress` (
  cognress_rep_id TEXT PRIMARY KEY,
  first_name TEXT,
  last_name TEXT,
  CID TEXT,
  party TEXT,
  state TEXT,
  abbreviation TEXT REFERENCES state(abbreviation),
  House TEXT,
  District INTEGER,
  land_area REAL
);

CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

",204,6.613022089004517,250,"['state', 'congress', 'zip_data']"
1284,What was the order date of items with the highest total price? Hint: the highest total price refers to MAX(o_totalprice);,retails,SELECT o_orderdate FROM orders WHERE o_totalprice = ( SELECT MAX(o_totalprice) FROM orders ),"CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",152,6.531778573989868,250,"['orders', 'lineitem']"
1285,"What percentage of elderly customers who are never married in the place with geographic ID 24? Hint: elderly customers refer to age > 65; DIVIDE(COUNT(ID where age > 65, MARITAL_STATUS = 'never married' and GEOID = 24), COUNT(ID where GEOID = 24)) as percentage;",software_company,SELECT CAST(SUM(CASE WHEN T1.MARITAL_STATUS = 'never married' THEN 1.0 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.GEOID = 24,"CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",195,6.598931312561035,250,"['demog', 'customers']"
1286,"Name the coin under the token category that gives the highest max profit. Hint: the highest max profit refers to max(subtract(high, low))",coinmarketcap,SELECT T1.name FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.category = 'token' ORDER BY T2.high - T2.low DESC LIMIT 1,"CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",135,6.514376401901245,250,"['historical', 'coins']"
1287,List the countries of universities that scored 70 and below in 2016. Hint: scored 70 and below refers to score < 70; in 2016 refers to year = 2016,university,SELECT DISTINCT T3.country_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T2.score < 70 AND T2.year = 2016,"CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

",178,6.559873580932617,250,"['university_ranking_year', 'university', 'country']"
1288,How many teams in the NBA which has at least 3 all-star players? Hint: NBA refers to lgID = 'NBA'; have at least 3 all-star players refers to count(player_allstar.playerID) > 3,professional_basketball,SELECT COUNT(*) FROM ( SELECT tmID FROM players_teams AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.lgID = 'NBA' GROUP BY T1.tmID HAVING COUNT(DISTINCT T1.playerID) > 3 ) AS T3,"CREATE TABLE `players_teams` (
  id INTEGER,
  playerID TEXT REFERENCES players(None),
  year INTEGER REFERENCES teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES teams(tmID),
  lgID TEXT,
  GP INTEGER,
  GS INTEGER,
  minutes INTEGER,
  points INTEGER,
  oRebounds INTEGER,
  dRebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  PF INTEGER,
  fgAttempted INTEGER,
  fgMade INTEGER,
  ftAttempted INTEGER,
  ftMade INTEGER,
  threeAttempted INTEGER,
  threeMade INTEGER,
  PostGP INTEGER,
  PostGS INTEGER,
  PostMinutes INTEGER,
  PostPoints INTEGER,
  PostoRebounds INTEGER,
  PostdRebounds INTEGER,
  PostRebounds INTEGER,
  PostAssists INTEGER,
  PostSteals INTEGER,
  PostBlocks INTEGER,
  PostTurnovers INTEGER,
  PostPF INTEGER,
  PostfgAttempted INTEGER,
  PostfgMade INTEGER,
  PostftAttempted INTEGER,
  PostftMade INTEGER,
  PostthreeAttempted INTEGER,
  PostthreeMade INTEGER,
  note TEXT
);

CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",204,6.610291481018066,250,"['players_teams', 'player_allstar']"
1289,Name the university that had the most students in 2011. Hint: in 2011 refers to year = 2011; had the most students refers to MAX(num_students); name of university refers to university_name;,university,SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2011 ORDER BY T1.num_students DESC LIMIT 1,"CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",184,6.565474033355713,250,['university_year']
1290,Please list the notes for Aruba on the indicators under the topic of Environment: Energy production & use. Hint: note refers to Description; for Aruba refers to ShortName = 'Aruba',world_development_indicators,SELECT T2.Description FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode INNER JOIN Series AS T3 ON T2.Seriescode = T3.SeriesCode WHERE T1.ShortName = 'Aruba' AND T3.Topic = 'Environment: Energy production & use',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",159,6.5422139167785645,250,"['country', 'countrynotes', 'indicators']"
1291,"From 1/9/2011 to 8/29/2012, how many German patients have their outpatient encounters? Hint: From 1/9/2011 to 8/29/2012 refers to encounters.DATE between '2011-09-01' and '2012-08-29'; German patients refers to ethnicity = 'german'; outpatient encounters refers to encounters.DESCRIPTION = 'Outpatient Encounter';",synthea,SELECT COUNT(DISTINCT T1.patient) FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.ethnicity = 'german' AND T2.DATE BETWEEN '2011-01-09' AND '2012-08-29' AND T2.DESCRIPTION = 'Outpatient Encounter',"CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

CREATE TABLE `encounters` (
  ID TEXT PRIMARY KEY,
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  CODE INTEGER,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",264,6.748824834823608,250,"['patients', 'encounters']"
1292,How many Planes orders were there? Hint: Planes is a product line;,car_retails,SELECT COUNT(T1.productCode) FROM orderdetails AS T1 INNER JOIN products AS T2 ON T1.productCode = T2.productCode WHERE T2.productLine = 'Planes',"CREATE TABLE `products` (
  productCode TEXT PRIMARY KEY,
  productName TEXT,
  productLine TEXT REFERENCES productlines(productLine),
  productScale TEXT,
  productVendor TEXT,
  productDescription TEXT,
  quantityInStock INTEGER,
  buyPrice REAL,
  MSRP REAL
);

CREATE TABLE `productlines` (
  productLine TEXT PRIMARY KEY,
  textDescription TEXT,
  htmlDescription TEXT,
  image BLOB
);

",142,6.528233289718628,250,"['products', 'productlines']"
1293,What is the name of the oldest competitor? Hint: name refers to full_name; the oldest refers to MAX(age);,olympics,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id ORDER BY T2.age DESC LIMIT 1,"CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",175,6.555058479309082,250,"['person', 'games_competitor']"
1294,"How many neighborhoods can be found in the Forest Glen community area? Hint: ""Forest Glen"" is the community_area_name; neighborhoods refers to neighborhood_name",chicago_crime,SELECT SUM(CASE WHEN T2.community_area_name = 'Forest Glen' THEN 1 ELSE 0 END) FROM Neighborhood AS T1 INNER JOIN Community_Area AS T2 ON T1.community_area_no = T2.community_area_no,"CREATE TABLE `neighborhood` (
  neighborhood_name TEXT PRIMARY KEY,
  community_area_no INTEGER REFERENCES Community_Area(community_area_no)
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",168,6.546031951904297,250,"['neighborhood', 'community_area']"
1295,When did Renaldi's Pizza had its first inspection? Hint: Renaldi's Pizza refers to dba_name = 'RENALDI''S PIZZA'; first inspection refers to min(inspection_date),food_inspection_2,SELECT MIN(T2.inspection_date) FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T1.dba_name = 'RENALDI''S PIZZA',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",171,6.54996395111084,250,"['inspection', 'establishment']"
1296,Name 5 students with due payments that are enlisted alongside which organization they were enlisted. Hint: with due payments refers to bool = 'pos'; organization refers to organ,student_loan,"SELECT T2.organ, T1.name FROM no_payment_due AS T1 INNER JOIN enlist AS T2 ON T1.`name` = T2.`name` WHERE T1.bool = 'pos' LIMIT 5","CREATE TABLE `enlist` (
  name TEXT REFERENCES person(name),
  organ TEXT
);

CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

",185,6.5625786781311035,250,"['enlist', 'no_payment_due']"
1297,"What is the github address of the solution path ""joeyrobert_bloomfilter\DataTypes.BloomFilter.sln""? Hint: github address refers to Url; solution path refers to Path; Path = 'joeyrobert_bloomfilter\DataTypes.BloomFilter.sln';",codebase_comments,SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Path = 'joeyrobert_bloomfilterDataTypes.BloomFilter.sln',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",184,6.56318473815918,250,"['solution', 'repo']"
1298,State the number of films that are 178 minutes long. Hint: 178 min long refers to length = '178',movie_3,SELECT COUNT(film_id) FROM film WHERE length = '178',"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",195,6.59489107131958,250,['film']
1299,"Calculate the difference in the average number of vehicular hijackings and aggravated vehicular hijackings in the districts. Hint: ""VEHICULAR HIJACKING"" and ""AGGRAVATED VEHICULAR HIJACKING"" are both secondary_description; difference in average = Subtract (Divide(Count(secondary_description = 'VEHICULAR HIJACKING'), Count(district_name)), Divide(Count(secondary_description = ""AGGRAVATED VEHICULAR HIJACKING""), Count(district_name)))",chicago_crime,"SELECT ROUND(CAST(COUNT(CASE WHEN T1.secondary_description = 'VEHICULAR HIJACKING' THEN T1.iucr_no END) AS REAL) / CAST(COUNT(DISTINCT CASE WHEN T1.secondary_description = 'VEHICULAR HIJACKING' THEN T3.district_name END) AS REAL) - CAST(COUNT(CASE WHEN T1.secondary_description = 'AGGRAVATED VEHICULAR HIJACKING' THEN T1.iucr_no END) AS REAL) / CAST(COUNT(DISTINCT CASE WHEN T1.secondary_description = 'AGGRAVATED VEHICULAR HIJACKING' THEN T3.district_name END) AS REAL), 4) AS ""difference"" FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T2.iucr_no = T1.iucr_no INNER JOIN District AS T3 ON T3.district_no = T2.district_no","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",266,6.750131845474243,250,"['crime', 'district']"
1300,Which are the 2 rivers located at Belgrade city? Which river is longer and how by much?,mondial_geo,"SELECT T1.Name, T1.Length FROM river AS T1 INNER JOIN located AS T2 ON T1.Name = T2.River INNER JOIN city AS T3 ON T3.Name = T2.City WHERE T3.Name = 'Belgrade'","CREATE TABLE `river` (
  Name TEXT PRIMARY KEY,
  River TEXT,
  Lake TEXT REFERENCES lake(None),
  Sea TEXT,
  Length REAL,
  SourceLongitude REAL,
  SourceLatitude REAL,
  Mountains TEXT,
  SourceAltitude REAL,
  EstuaryLongitude REAL,
  EstuaryLatitude REAL
);

CREATE TABLE `located` (
  City TEXT REFERENCES city(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  River TEXT REFERENCES river(None),
  Lake TEXT REFERENCES lake(None),
  Sea TEXT REFERENCES sea(None)
);

CREATE TABLE `locatedOn` (
  City TEXT PRIMARY KEY REFERENCES city(None),
  Province TEXT PRIMARY KEY REFERENCES province(None) REFERENCES city(None),
  Country TEXT PRIMARY KEY REFERENCES province(None) REFERENCES country(None),
  Island TEXT PRIMARY KEY REFERENCES island(None)
);

",267,6.752093076705933,250,"['river', 'located', 'locatedOn']"
1301,Tell the origin country of car no.382. Hint: origin country refers to country; car no.382 refers to ID = 382,cars,SELECT DISTINCT T2.country FROM production AS T1 INNER JOIN country AS T2 ON T1.country = T2.origin WHERE T1.ID = 382,"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

",140,6.517776012420654,250,"['data', 'country']"
1302,State the customer name of orders which has shipped date in 7/8/2018. Hint: shipped date in 7/8/2018 refers to ShipDate = '7/8/18',regional_sales,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T2.ShipDate = '7/8/18' THEN T1.`Customer Names` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID ) WHERE T IS NOT NULL,"CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  Customer Names TEXT
);

",172,6.550351142883301,250,"['sales orders', 'customers']"
1303,"What is the difference in the number of restaurants that passed and failed the canvass inspection type? Hint: canvass inspection type refers to inspection_type = 'Canvass'; restaurant refers to facility_type = 'Restaurant'; difference = subtract(count(inspection_id where results = 'Pass'), count(inspection_id where results = 'Fail'))",food_inspection_2,SELECT COUNT(CASE WHEN T2.results = 'Pass' THEN T1.license_no END) - COUNT(CASE WHEN T2.results = 'Fail' THEN T1.license_no END) AS diff FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no WHERE T2.inspection_type = 'Canvass' AND T1.facility_type = 'Restaurant',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",197,6.598843574523926,250,"['inspection', 'establishment']"
1304,How many disabled students are male? Hint: male students are mentioned in male.name;,student_loan,SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name,"CREATE TABLE `disabled` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",168,6.54514217376709,250,"['disabled', 'male']"
1305,Provide the product's name of the product with the highest sales in the South region. Hint: highest sales refers to max(Sales),superstore,SELECT T2.`Product Name` FROM south_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.Region = 'South' ORDER BY T1.Sales DESC LIMIT 1,"CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

CREATE TABLE `south_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",157,6.532417297363281,250,"['product', 'south_superstore']"
1306,How many players are from Australia? Hint: Australia refers to Country_Name = 'Australia',soccer_2016,SELECT COUNT(CASE WHEN T2.Country_Name = 'Australia' THEN T1.Player_Id ELSE NULL END) FROM Player AS T1 INNER JOIN Country AS T2 ON T1.Country_Name = T2.Country_Id,"CREATE TABLE `country` (
  Country_Id INTEGER REFERENCES Country(Country_Id),
  Country_Name TEXT
);

",223,6.634455442428589,250,['country']
1307,"What is the name of Anguilla's capital, and where is it located? Hint: Anguilla is a country",mondial_geo,"SELECT Capital, Province FROM country WHERE Name = 'Anguilla'","CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

",273,6.765462875366211,250,"['country', 'city']"
1308,"Who did ""The Tiny Canadian"" play as in the show? Hint: ""The Tiny Canadian"" refers to nickname = 'The Tiny Canadian'; play as in the show refers to role
",simpson_episodes,SELECT T2.role FROM Person AS T1 INNER JOIN Credit AS T2 ON T1.name = T2.person WHERE T1.nickname = 'The Tiny Canadian';,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",165,6.544184923171997,250,"['credit', 'episode']"
1309,List the stars of episodes aired in November 2008. Hint: in November 2008 refers to air_date LIKE '2008-11%',simpson_episodes,"SELECT T2.stars FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE SUBSTR(T1.air_date, 1, 7) = '2008-11';","CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",165,6.543282747268677,250,['episode']
1310,What is the full name of the conference where paper number 5 was published? Hint: paper number 5 refers to Id = 5,authors,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Id = 5,"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `conference` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",142,6.523028135299683,250,"['paper', 'conference']"
1311,"Name the person, award, organization, result and credited status of the assistant director in S20-E13. Hint: ""assistant director"" is the role of person; 'S20-E13' is the episode_id; credited status refers to credited; credited = 'true' means the person is included in the credit list and vice versa",simpson_episodes,"SELECT T1.person, T1.award, T1.organization, T1.result, T2.credited FROM Award AS T1 INNER JOIN Credit AS T2 ON T2.episode_id = T1.episode_id WHERE T2.episode_id = 'S20-E13' AND T2.role = 'assistant director';","CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

",205,6.618201732635498,250,"['person', 'award', 'credit']"
1312,"Which part and supplier have the most profit? Hint: part refers to p_name; supplier refers to s_name; the most profit refers to max(subtract(multiply(l_extendedprice, subtract(1, l_discount)), multiply(ps_supplycost, l_quantity)))",retails,"SELECT T3.p_name, T4.s_name FROM partsupp AS T1 INNER JOIN lineitem AS T2 ON T1.ps_suppkey = T2.l_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey INNER JOIN supplier AS T4 ON T1.ps_suppkey = T4.s_suppkey ORDER BY T2.l_extendedprice * (1 - T2.l_discount) - T1.ps_supplycost * T2.l_quantity DESC LIMIT 1","CREATE TABLE `part` (
  p_partkey INTEGER,
  p_type TEXT,
  p_size INTEGER,
  p_brand TEXT,
  p_name TEXT,
  p_container TEXT,
  p_mfgr TEXT,
  p_retailprice REAL,
  p_comment TEXT
);

CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

",194,6.6000096797943115,250,"['part', 'partsupp', 'supplier', 'lineitem']"
1313,How many cities are in the Philippines? Hint: Philippines refers to CountryCode = 'PHL';,world,SELECT COUNT(ID) FROM City WHERE Name = 'PHL',"CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",133,6.51316499710083,250,"['city', 'country']"
1314,When did Chennai Super Kings play its first match? Hint: match date refers to Match_Date; Chennai Super Kings refers to Team_Name = 'Chennai Super Kings'; first match refers to min(Match_Date),soccer_2016,SELECT Match_Date FROM `Match` WHERE team_1 = ( SELECT Team_Id FROM Team WHERE Team_Name = 'Chennai Super Kings' ) OR Team_2 = ( SELECT Team_Id FROM Team WHERE Team_Name = 'Chennai Super Kings' ) ORDER BY Match_Date ASC LIMIT 1,"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",253,6.6986188888549805,250,"['match', 'team']"
1315,"What is the minimum of International migrant stock, total of heavily indebted poor countries? Hint: IndicatorName = 'International migrant stock, total'; heavily indebted poor countries referred to by its abbreviated 'HIPC' = OtherGroups; MIN(Value);",world_development_indicators,"SELECT MIN(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.OtherGroups = 'HIPC' AND T2.IndicatorName = 'International migrant stock, total'","CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",178,6.556995391845703,250,['indicators']
1316,Provide the most used keyword in the movies. Hint: most used keyword refers to keyword_name where max(count(keyword_name)),movies_4,SELECT T1.keyword_name FROM keyword AS T1 INNER JOIN movie_keywords AS T2 ON T1.keyword_id = T2.keyword_id GROUP BY T1.keyword_name ORDER BY COUNT(T1.keyword_name) DESC LIMIT 1,"CREATE TABLE `movie_keywords` (
  movie_id INTEGER REFERENCES movie(None),
  keyword_id INTEGER REFERENCES keyword(None)
);

CREATE TABLE `keyword` (
  keyword_id INTEGER,
  keyword_name TEXT
);

",208,6.619642496109009,250,"['movie_keywords', 'keyword']"
1317,"Calculate average scene per act in Antony and Cleopatra. Hint: Antony and Cleopatra refers to Title = 'Antony and Cleopatra'; average scene per act = divide(sum(Scene), count(act))
",shakespeare,SELECT CAST(SUM(T2.Scene) AS REAL) / COUNT(T2.act) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Antony and Cleopatra',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

",170,6.555074691772461,250,"['works', 'characters']"
1318,"How many of the patients who have stopped taking medication for 'coronary heart disease' are still alive? Hint: patients who have stopped taking medication for 'coronary heart disease' refer to PATIENT where REASONDESCRIPTION = 'Coronary Heart Disease' and STOP is not null from medications; if deathdate is null, it means this patient is still alive;",synthea,SELECT COUNT(DISTINCT T2.patient) FROM medications AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.REASONDESCRIPTION = 'Coronary Heart Disease' AND T1.STOP IS NOT NULL AND T2.deathdate IS NULL,"CREATE TABLE `medications` (
  START DATE PRIMARY KEY,
  STOP DATE,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",228,6.6564741134643555,250,"['medications', 'patients']"
1319,Which state has the most cities? Hint: state refers to state_abbrev; most cities refers to max(count(city)),retail_complains,SELECT state_abbrev FROM district GROUP BY state_abbrev ORDER BY COUNT(city) DESC LIMIT 1,"CREATE TABLE `district` (
  district_id INTEGER,
  city TEXT,
  state_abbrev TEXT REFERENCES state(StateCode),
  division TEXT
);

CREATE TABLE `state` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

",146,6.522864580154419,250,"['district', 'state']"
1320,Please list the names of all the root beer brands that are advertised on facebook. Hint: name of the root beer brand refers to BrandName; advertised on facebook refers to FacebookPage IS not NULL;,beer_factory,SELECT BrandName FROM rootbeerbrand WHERE FacebookPage IS NOT NULL,"CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",171,6.5493786334991455,250,['rootbeerbrand']
1321,"Provide the dimensions of the bounding box that contains the keyboard that was spotted in image no. 3. Hint: dimensions of the bounding box refers to (W, H); keyboard refers to OBJ_CLASS = 'keyboard'; image no. 3 refers to IMG_ID = 3",image_and_language,"SELECT T1.W, T1.H FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T1.IMG_ID = 3 AND T2.OBJ_CLASS = 'keyboard'","CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `obj_classES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",211,6.6231396198272705,250,"['img_obj', 'obj_classES']"
1322,How many suppliers from Egypt have a debit balance? Hint: suppliers refer to s_suppkey; Egypt is the name of the nation which refers to n_name = 'EGYPT'; the balance is in debt if s_acctbal < 0;,retails,SELECT COUNT(T1.s_suppkey) FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0 AND T2.n_name = 'EGYPT',"CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",180,6.5603415966033936,250,"['supplier', 'nation']"
1323,List down the number of inhabitants of customers with a divorced marital status and older than 50 years old. Hint: number of inhabitants refers to INHABITANTS_K; older than 50 years old refers to age < 50; MARITAL_STATUS = 'Divorced;,software_company,SELECT COUNT(T1.ID) FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID WHERE T1.MARITAL_STATUS = 'Divorced' AND T1.age < 50,"CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",184,6.5647361278533936,250,"['demog', 'customers']"
1324,"What is the full name of customers who dealt with sales person with id 5? Hint: full name = FirstName, MiddleInitial, LastName;",sales,"SELECT T1.FirstName, T1.MiddleInitial, T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.SalesPersonID = 5","CREATE TABLE `employees` (
  EmployeeID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",143,6.521193265914917,250,"['employees', 'customers']"
1325,"Among all the flights scheduled to depart from John F. Kennedy International on 2018/8/1, when was the earliest one scheduled to depart? Hint: depart from refers to ORIGIN; John F. Kennedy International refers to Description = 'New York, NY: John F. Kennedy International'; on 2018/8/1 refers to FL_DATE = '2018/8/1'; earliest one scheduled to depart refers to MIN(DEP_TIME);",airline,"SELECT T2.DEP_TIME FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE = '2018/8/1' AND T1.Description = 'New York, NY: John F. Kennedy International' AND T2.DEP_TIME IS NOT NULL ORDER BY T2.DEP_TIME ASC LIMIT 1","CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",212,6.6225879192352295,250,"['airlines', 'air carriers']"
1326,Which company name in London city has the most stocked products? Hint: the most stocked products refers to MAX(UnitsInStock),retail_world,SELECT T2.CompanyName FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.City = 'London' ORDER BY T1.UnitsInStock DESC LIMIT 1,"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",166,6.54665207862854,250,"['products', 'suppliers']"
1327,How many respondents who participated in the survey in 2014 work remotely at least 50% of the time? Hint: respondents' and 'users' are synonyms; work remotely at least 50% of the time refers to AnswerText(SurveyID = 2014& QuestionID = 93) = 'Yes',mental_health_survey,SELECT COUNT(T1.AnswerText) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T1.QuestionID = 93 AND T1.SurveyID = 2014 AND T1.AnswerText = 'Yes',"CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",185,6.567347764968872,250,['answer']
1328,What is the population of the district with the least population? Hint: the least population refers = min(sum(population)),chicago_crime,SELECT SUM(population) FROM Community_Area GROUP BY side ORDER BY SUM(population) LIMIT 1,"CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",156,6.537475347518921,250,['district']
1329,What is the number of inhabitants of the place the most customers are from? Hint: the most customers are from refers to GEOID where MAX(COUNT(ID)); number of inhabitants refers to INHABITANTS_K;,software_company,SELECT DISTINCT T2.INHABITANTS_K FROM Customers AS T1 INNER JOIN Demog AS T2 ON T1.GEOID = T2.GEOID ORDER BY T2.INHABITANTS_K DESC,"CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

",167,6.554513692855835,250,['demog']
1330,"Indicate the address of the restaurant with the most popular reviews. Hint: address refers to street_num, street_name; the most popular review refers to max(review)",restaurant,"SELECT T2.street_num, T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant ORDER BY T1.review DESC LIMIT 1","CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",142,6.521437406539917,250,"['location', 'generalinfo']"
1331,How many users belong to the MOBA category?,talkingdata,SELECT COUNT(T2.app_id) FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T2.label_id = T1.label_id WHERE T1.category = 'MOBA',"CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",180,6.5632643699646,250,['label_categories']
1332,"List the title name, type, and price of the titles published by New Moon Books. Arrange the list in ascending order of price. Hint: Eric the Read Books is a publisher which refers to pub_name;",book_publishing_company,"SELECT T1.title, T1.type, T1.price FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.pub_name = 'New Moon Books' ORDER BY T1.price","CREATE TABLE `titles` (
  title_id TEXT PRIMARY KEY,
  title TEXT,
  type TEXT,
  pub_id TEXT REFERENCES publishers(pub_id),
  price REAL,
  advance REAL,
  royalty INTEGER,
  ytd_sales INTEGER,
  notes TEXT,
  pubdate DATETIME
);

CREATE TABLE `publishers` (
  pub_id TEXT PRIMARY KEY,
  pub_name TEXT,
  city TEXT,
  state TEXT,
  country TEXT
);

",186,6.570783615112305,250,"['titles', 'publishers']"
1333,How many times was Ford Maverick introduced to the market? Hint: Ford Maverick refers to car_name = 'ford maverick';,cars,SELECT COUNT(T2.model_year) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'ford maverick',"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

",138,6.517083168029785,250,['data']
1334,Which apps have multiple genres and what is the total sentiment subjectivity of these apps? Hint: multiple genres refers to COUNT(Genres>1; total sentiment subjectivity = Sum(Sentiment_Subjectivity);,app_store,SELECT SUM(T2.Sentiment_Subjectivity) FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.Genres > 1,"CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

",150,6.529267311096191,250,['playstore']
1335,"List the name and city of starting stations which has an above-average duration trips. Hint: starting stations refers to start_station_name; above average duration trips = DIVIDE(SUM(duration), COUNT(main_trip.id))<duration;",bike_share_1,"SELECT DISTINCT T1.start_station_name, T2.city FROM trip AS T1 INNER JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T1.duration > ( SELECT AVG(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name )","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",164,6.547837972640991,250,"['trip', 'station']"
1336,"How many Yelp_Business in Anthem are under the category of ""Food""? Hint: in Anthem refers to city = 'Anthem'; the category of ""Food"" refers to category_name = 'Food'",public_review_platform,SELECT COUNT(T3.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T1.category_name LIKE 'Food' AND T3.city LIKE 'Anthem',"CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",210,6.6202099323272705,250,"['business_categories', 'categories']"
1337,"What is the id of the game ""Resident Evil Archives: Resident Evil""? Hint: id of game refers to game.id; ""Resident Evil Archives: Resident Evil"" refers to game_name = 'Resident Evil Archives: Resident Evil'",video_games,SELECT T.genre_id FROM game AS T WHERE T.game_name = 'Resident Evil Archives: Resident Evil',"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

",192,6.578248739242554,250,['game']
1338,Which state was the tweet `tw-685681052912873473` from? Give the state code. Hint: tw-685681052912873473' is the TweetID,social_media,SELECT T2.StateCode FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.TweetID = 'tw-685681052912873473',"CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

CREATE TABLE `location` (
  LocationID INTEGER,
  Country TEXT,
  State TEXT,
  StateCode TEXT,
  City TEXT
);

",166,6.543457984924316,250,"['twitter', 'location']"
1339,What is the last name of the customer who placed an order for sales id 178?,sales,SELECT T1.LastName FROM Customers AS T1 INNER JOIN Sales AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.SalesID = 178,"CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",131,6.509260654449463,250,"['sales', 'customers']"
1340,Name the organization which hold the award id 328.,simpson_episodes,SELECT organization FROM Award WHERE award_id = 328;,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

",136,6.513670444488525,250,['award']
1341,What is the total price and the order priority of order number 33? Hint: total price refers to o_totalprice; order priority refers to o_orderpriority; order number 33 refers to o_orderkey = 33,retails,"SELECT o_totalprice, o_orderpriority FROM orders WHERE o_orderkey = 33","CREATE TABLE `orders` (
  o_orderdate DATE,
  o_orderkey INTEGER,
  o_custkey INTEGER REFERENCES customer(c_custkey),
  o_orderpriority TEXT,
  o_shippriority INTEGER,
  o_clerk TEXT,
  o_orderstatus TEXT,
  o_totalprice REAL,
  o_comment TEXT
);

",175,6.554311513900757,250,['orders']
1342,How many businesses in the fashion industry are rated 5 stars? Hint: fashion industry refers to category_name = 'Fashion';,public_review_platform,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T1.stars = 5 AND T3.category_name LIKE 'Fashion',"CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",188,6.570907354354858,250,"['business_categories', 'categories']"
1343,"Among the Most improved Players awarded from 1985-1990, how many player whose country is USA? Hint: the Most improved Player refers to award = 'Most Improved Player'; from 1985-1990 refers to year between 1985 and 1990; country is USA refers to birthCountry = 'USA'",professional_basketball,SELECT COUNT(DISTINCT T2.playerID) FROM awards_players AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.award = 'Most Improved Player' AND T2.birthCountry = 'USA' AND T1.year BETWEEN 1985 AND 1990,"CREATE TABLE `awards_players` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

CREATE TABLE `players` (
  playerID TEXT PRIMARY KEY,
  useFirst TEXT,
  firstName TEXT,
  middleName TEXT,
  lastName TEXT,
  nameGiven TEXT,
  fullGivenName TEXT,
  nameSuffix TEXT,
  nameNick TEXT,
  pos TEXT,
  firstseason INTEGER,
  lastseason INTEGER,
  height REAL,
  weight INTEGER,
  college TEXT,
  collegeOther TEXT,
  birthDate DATE,
  birthCity TEXT,
  birthState TEXT,
  birthCountry TEXT,
  highSchool TEXT,
  hsCity TEXT,
  hsState TEXT,
  hsCountry TEXT,
  deathDate DATE,
  race TEXT
);

",231,6.664633512496948,250,"['awards_players', 'players']"
1344,Who is the writer for the episode with the most 10 star votes? Hint: writer refers to role = 'Writer'; most 10 star votes refers to max(votes) where stars = 10,simpson_episodes,SELECT T1.person FROM Credit AS T1 INNER JOIN Vote AS T2 ON T1.episode_id = T2.episode_id WHERE T1.role = 'Writer' AND T2.stars = 10 GROUP BY T1.person ORDER BY COUNT(*) DESC LIMIT 1;,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",168,6.551032066345215,250,"['credit', 'episode']"
1345,"In which year did the Montreal Canadiens have 49 penalty minutes in the Stanley Cup finals? Was it 1924, 1923 or 1918? Hint: penalty minutes refer to PIM = 49;",hockey,SELECT T1.year FROM Teams AS T1 INNER JOIN TeamsSC AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.name = 'Montreal Canadiens' AND T2.PIM = 49,"CREATE TABLE `combinedshutouts` (
  year INTEGER,
  month INTEGER,
  date INTEGER,
  tmID TEXT,
  oppID TEXT,
  R/P TEXT,
  IDgoalie1 TEXT REFERENCES Master(playerID),
  IDgoalie2 TEXT REFERENCES Master(playerID)
);

",267,6.748892307281494,250,['combinedshutouts']
1346,How many employees have Andrew Fuller as their direct supervisor? Hint: direct supervisor refers to ReportsTo where the person being reported to is usually the direct supervisor of the reporter;,retail_world,SELECT COUNT(EmployeeID) FROM Employees WHERE ReportsTo = ( SELECT EmployeeID FROM Employees WHERE LastName = 'Fuller' AND FirstName = 'Andrew' ),"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",175,6.553819894790649,250,['employees']
1347,What is the project title of the school located at latitude 42003718 and longitude -87668289? Hint: latitude 42003718 refers to school_latitude = 42003718; longitude -87668289 refers to school_longitude = -87668289,donor,SELECT T1.title FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T2.school_latitude = 42003718 AND T2.school_longitude = -87668289,"CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",206,6.607592582702637,250,['projects']
1348,Which of the film directed by director Abbas Kiarostami has the highest average score? Hint: Abbas Kiarostami' is director_name; the highest Average score refers to Max(Avg(rating_score));,movie_platform,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.director_name = 'Abbas Kiarostami' GROUP BY T2.movie_title ORDER BY SUM(T1.rating_score) / COUNT(T1.rating_id) DESC LIMIT 1,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",166,6.541377544403076,250,"['movies', 'ratings']"
1349,"In 1937, how many teams whose players got at least 500 points? Hint: in 1937 refers to year = 1937; player got at least 500 points refers to Sum(points) > = 500",professional_basketball,"SELECT COUNT(*) FROM ( SELECT T2.name, SUM(T1.points) FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 1937 GROUP BY T2.name HAVING SUM(points) >= 500 ) AS T3","CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

CREATE TABLE `players` (
  playerID TEXT PRIMARY KEY,
  useFirst TEXT,
  firstName TEXT,
  middleName TEXT,
  lastName TEXT,
  nameGiven TEXT,
  fullGivenName TEXT,
  nameSuffix TEXT,
  nameNick TEXT,
  pos TEXT,
  firstseason INTEGER,
  lastseason INTEGER,
  height REAL,
  weight INTEGER,
  college TEXT,
  collegeOther TEXT,
  birthDate DATE,
  birthCity TEXT,
  birthState TEXT,
  birthCountry TEXT,
  highSchool TEXT,
  hsCity TEXT,
  hsState TEXT,
  hsCountry TEXT,
  deathDate DATE,
  race TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",207,6.611978769302368,250,"['player_allstar', 'players', 'teams']"
1350,What is the life expectancy of the countries that uses Japanese as their language? Hint: uses Japanese as their language refers to `Language` = 'Japanese';,world,SELECT AVG(T2.LifeExpectancy) FROM CountryLanguage AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.Code WHERE T1.Language = 'Japanese',"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",145,6.519458770751953,250,"['countrylanguage', 'country']"
1351,"Please list the country of the movie that stars an actress who acts the worse. Hint: a_quality = 5 refers to act the best, a_quality = 0 refers to act the worst",movielens,SELECT T3.country FROM actors AS T1 INNER JOIN movies2actors AS T2 ON T1.actorid = T2.actorid INNER JOIN movies AS T3 ON T2.movieid = T3.movieid WHERE T1.a_gender = 'F' AND T1.a_quality = 0,"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2actors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  actorid INTEGER PRIMARY KEY REFERENCES actors(None),
  cast_num INTEGER
);

CREATE TABLE `actors` (
  actorid INTEGER,
  a_gender TEXT,
  a_quality INTEGER
);

",169,6.545500755310059,250,"['movies', 'movies2actors', 'actors']"
1352,"For the home weather station of store no.15, what was the dew point on 2012/2/18? Hint: store no. 15 refers to store_nbr = 15; on 2012/2/18 refers to date = '2012-02-18'",sales_in_weather,SELECT T1.dewpoint FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 15 AND T1.`date` = '2012-02-18',"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `relation` (
  store_nbr INTEGER REFERENCES sales_in_weather(store_nbr),
  station_nbr INTEGER REFERENCES weather(station_nbr)
);

",184,6.5655529499053955,250,"['weather', 'relation']"
1353,"How many users were not trialists when they rated the movie ""Patti Smith: Dream of Life""? Hint: Patti Smith: Dream of Life' is movie_title; the user was not a trialist when he created the list refers to user_trialist = 0;",movie_platform,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'Patti Smith: Dream of Life' AND T1.user_trialist = 0,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

CREATE TABLE `ratings_users` (
  user_id INTEGER REFERENCES lists_users(user_id),
  rating_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",177,6.5567262172698975,250,"['movies', 'ratings', 'lists_users', 'ratings_users']"
1354,"How did Kyran Muller submit his complaint? Hint: how it was submitted refers to ""Submitted via"";",retail_complains,SELECT DISTINCT T2.`Submitted via` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Kyran' AND T1.last = 'Muller',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `callcenterlogs` (
  Date received DATE,
  Complaint ID TEXT PRIMARY KEY,
  rand client TEXT REFERENCES client(client_id),
  phonefinal TEXT,
  vru+line TEXT,
  call_id INTEGER,
  priority INTEGER,
  type TEXT,
  outcome TEXT,
  server TEXT,
  ser_start TEXT,
  ser_exit TEXT,
  ser_time TEXT
);

",142,6.513425588607788,250,"['client', 'callcenterlogs']"
1355,"Which headquarter's truck has the highest shipments in year 2016? Hint: in 2016 refers to CAST(ship_date AS DATE) = 2016; make = 'Peterbilt' means headquarter is 'Texas (TX)', make = 'Mack' means headquarter is 'North Carolina (NC)', make = 'Kenworth' means headquarter is 'Washington (WA)'; highest shipment refers to MAX(COUNT(ship_id))",shipping,"SELECT CASE WHEN T2.make = 'Peterbilt' THEN 'Texas (TX)' WHEN T2.make = 'Mack' THEN 'North Carolina (NC)' WHEN T2.make = 'Kenworth' THEN 'Washington (WA)' END AS ""result"" FROM shipment AS T1 INNER JOIN truck AS T2 ON T1.truck_id = T2.truck_id WHERE CAST(T1.ship_date AS DATE) = 2016 GROUP BY T2.make ORDER BY COUNT(T1.ship_id) DESC LIMIT 1","CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

CREATE TABLE `truck` (
  truck_id INTEGER,
  make TEXT,
  model_year INTEGER
);

",227,6.646458864212036,250,"['shipment', 'truck']"
1356,Please list the indicator names of Arab World whose values are higher than 50 in 1960. Hint: Arab World refers to CountryName; Year = '1960'; values are higher than 50 refers to Value>50;,world_development_indicators,SELECT IndicatorName FROM Indicators WHERE CountryName = 'Arab World' AND Year = 1960 AND Value > 50,"CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",172,6.547960042953491,250,"['indicators', 'country']"
1357,"How many percent more of the watchers for the repository of solution No.83855 than No.1502? Hint: solution No. refers to Solution.Id; percentage = DIVIDE(MULTIPLY(SUBTRACT(SUM(Solution.Id = 83855), SUM(Solution.Id = 1502)), 100)), SUM(Soltution.Id = 1502);",codebase_comments,SELECT CAST(SUM(CASE WHEN T2.Id = 83855 THEN T1.Watchers ELSE 0 END) - SUM(CASE WHEN T2.Id = 1502 THEN T1.Watchers ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 1502 THEN T1.Watchers ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId,"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",215,6.623013257980347,250,"['solution', 'repo']"
1358,"What is the difference in the number of cities with P.O. box only and cities with Post Office among the cities with area code 787? Hint: SUBTRACT(COUNT(type = 'P.O. Box Only'), COUNT(type = 'Post Office')) where area_code = 787;",address,SELECT COUNT(CASE WHEN T2.type = 'P.O. Box Only' THEN 1 ELSE NULL END) - COUNT(CASE WHEN T2.type = 'Post Office' THEN 1 ELSE NULL END) AS DIFFERENCE FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 787,"CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

",200,6.59987473487854,250,"['zip_data', 'area_code']"
1359,"What is the percentage of Swedish players in playoffs games in the 1997 - 2000 season? Hint: percentage = MULTIPLY(DIVIDE(SUM(nation = 'Sweden'), COUNT(ELITEID) WHERE SEASON = '1997-2000'), 100); Swedish refers to nation = 'Sweden'; players refers to PlayerName; playoffs games refers to GAMETYPE = 'Playoffs'; 1997-2000 season refers to 3 consecutive SEASONs : '1997-1998', '1998-1999', '1999-2000';",ice_hockey_draft,"SELECT DISTINCT CAST(COUNT(CASE WHEN T1.nation = 'Sweden' THEN T1.ELITEID ELSE NULL END) OVER (PARTITION BY T2.SEASON) AS REAL) * 100 / COUNT(T1.ELITEID) OVER (PARTITION BY T2.SEASON) FROM PlayerInfo AS T1 INNER JOIN SeasonStatus AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.SEASON IN ('1997-1998', '1998-1999', '1999-2000')","CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",277,6.770628929138184,250,"['seasonstatus', 'playerinfo']"
1360,"List the air carrier's description with arrival time lower than the 40% of the average arrival time of flights that flew to Phoenix. Hint: arrival time lower than the 40% of the average arrival time refers to ARR_TIME < MULTIPLY(AVG(ARR_TIME), 0.4); flew to Phoenix refers to DEST = 'PHX';",airline,SELECT T1.Description FROM `Air Carriers` AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.OP_CARRIER_AIRLINE_ID WHERE T2.DEST = 'PHX' AND T2.ARR_TIME < ( SELECT AVG(ARR_TIME) * 0.4 FROM Airlines ) GROUP BY T1.Description,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",189,6.567480564117432,250,"['airlines', 'air carriers']"
1361,"Calculate the total production for each product which were supplied from Japan Hint: from Japan refers to Country = 'Japan'; total production refers to ADD(UnitsInstock, UnitsOnOrder)",retail_world,SELECT SUM(T1.UnitsInStock + T1.UnitsOnOrder) FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.Country = 'Japan',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",177,6.555866718292236,250,"['products', 'suppliers']"
1362,"Among the male users, how many users use device model of Desire 820? Hint: male refers to gender = 'M';",talkingdata,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.device_model = 'Desire 820' AND T1.gender = 'M',"CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",200,6.602084159851074,250,"['gender_age', 'phone_brand_device_model2']"
1363,List out the table name of countries using series code as SP.DYN.TO65.MA.ZS,world_development_indicators,SELECT T1.TableName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Seriescode = 'SP.DYN.TO65.MA.ZS',"CREATE TABLE `series` (
  SeriesCode TEXT PRIMARY KEY,
  Topic TEXT,
  IndicatorName TEXT,
  ShortDefinition TEXT,
  LongDefinition TEXT,
  UnitOfMeasure TEXT,
  Periodicity TEXT,
  BasePeriod TEXT,
  OtherNotes INTEGER,
  AggregationMethod TEXT,
  LimitationsAndExceptions TEXT,
  NotesFromOriginalSource TEXT,
  GeneralComments TEXT,
  Source TEXT,
  StatisticalConceptAndMethodology TEXT,
  DevelopmentRelevance TEXT,
  RelatedSourceLinks TEXT,
  OtherWebLinks INTEGER,
  RelatedIndicators INTEGER,
  LicenseType TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",142,6.516228437423706,250,"['series', 'country']"
1364,"Which Wikipedia page number does the Catalan language's name, Acampada, appear on? Hint: Wikipedia page number refers to page; title = 'Acampada';",language_corpus,SELECT page FROM pages WHERE title = 'Acampada',"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",162,6.538586139678955,250,['pages']
1365,List down the area code and country of the city named Savoy. Hint: Savoy is the city;,address,"SELECT T1.area_code, T2.county FROM area_code AS T1 INNER JOIN country AS T2 ON T1.zip_code = T2.zip_code INNER JOIN zip_data AS T3 ON T1.zip_code = T3.zip_code WHERE T3.city = 'Savoy'","CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

CREATE TABLE `country` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  county TEXT PRIMARY KEY,
  state TEXT REFERENCES state(abbreviation)
);

",154,6.532145261764526,250,"['area_code', 'country']"
1366,"Among the female clients, how many of them have a complaint with a priority of 1? Hint: female refers to sex = 'Female'",retail_complains,SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.sex = 'Female' AND T2.priority = 1,"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `reviews` (
  Date DATE PRIMARY KEY,
  Stars INTEGER,
  Reviews TEXT,
  Product TEXT,
  district_id INTEGER REFERENCES district(district_id)
);

",148,6.522631645202637,250,"['client', 'reviews']"
1367,"How many of the users hold neutral attitude on ""10 Best Foods for You"" app and what category is this app? Hint: neutral attitude refers to Sentiment = 'Neutral';",app_store,"SELECT COUNT(T2.App), T1.Category FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T1.App = '10 Best Foods for You' AND T2.Sentiment = 'Neutral'","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",145,6.518293380737305,250,"['playstore', 'user_reviews']"
1368,"From 1979 to 1982, what was the percentage of united.states albums out of total albums were released? Hint: From 1979 to 1982 refers to groupYear between 1979 and 1982; United States refer to tag; albums refer to releaseType; DIVIDE(COUNT(releaseType = 'album' where tag = 'united.states' and groupYear between 1979 and 1982), COUNT(releaseType = 'album' where groupYear between 1979 and 1982)) as percentage;",music_tracker,SELECT CAST(SUM(CASE WHEN T2.tag LIKE 'united.states' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.releaseType) FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear BETWEEN 1979 AND 1982 AND T1.releaseType LIKE 'album',"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

CREATE TABLE `tags` (
  index INTEGER PRIMARY KEY,
  id INTEGER REFERENCES torrents(None),
  tag TEXT
);

",244,6.680177688598633,250,"['torrents', 'tags']"
1369,Which category does the podcast titled 'SciFi Tech Talk' belong to? Hint: podcast titled 'SciFi Tech Talk' refers to title = 'SciFi Tech Talk',music_platform_2,SELECT T1.category FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'SciFi Tech Talk',"CREATE TABLE `podcasts` (
  podcast_id TEXT PRIMARY KEY,
  itunes_id INTEGER,
  slug TEXT,
  itunes_url TEXT,
  title TEXT
);

CREATE TABLE `categories` (
  podcast_id TEXT PRIMARY KEY REFERENCES podcasts(None),
  category TEXT PRIMARY KEY
);

",150,6.525212526321411,250,"['podcasts', 'categories']"
1370,"Convert all temperature recorded at San Francisco city during August 2013 into degree Celsius. Hint: temperature refers to max_temperature_f; March 2013 refers to date like '3/%/2013'; conversion to Celcius = DIVIDE(SUBTRACT(max_temperature_f, 32), 1.800) as Celsius1; DIVIDE(SUBTRACT(mean_temperature_f, 32), 1.800) as Celsius2; DIVIDE(SUBTRACT(min_temperature_f, 32), 1.800) as Celcius3;",bike_share_1,"SELECT (max_temperature_f - 32) / 1.8000 , (mean_temperature_f - 32) / 1.8000 , (min_temperature_f - 32) / 1.8000 FROM weather WHERE SUBSTR(CAST(date AS TEXT), 1, INSTR(date, '/') - 1) = '8' AND SUBSTR(CAST(date AS TEXT), -4) = '2013' AND zip_code = 94107","CREATE TABLE `weather` (
  date TEXT,
  max_temperature_f INTEGER,
  mean_temperature_f INTEGER,
  min_temperature_f INTEGER,
  max_dew_point_f INTEGER,
  mean_dew_point_f INTEGER,
  min_dew_point_f INTEGER,
  max_humidity INTEGER,
  mean_humidity INTEGER,
  min_humidity INTEGER,
  max_sea_level_pressure_inches REAL,
  mean_sea_level_pressure_inches REAL,
  min_sea_level_pressure_inches REAL,
  max_visibility_miles INTEGER,
  mean_visibility_miles INTEGER,
  min_visibility_miles INTEGER,
  max_wind_Speed_mph INTEGER,
  mean_wind_speed_mph INTEGER,
  max_gust_speed_mph INTEGER,
  precipitation_inches TEXT,
  cloud_cover INTEGER,
  events TEXT,
  wind_dir_degrees INTEGER,
  zip_code TEXT
);

",259,6.7362823486328125,250,['weather']
1371,"What is the description of the film ACADEMY DINOSAUR? Hint: ""ACADEMY DINOSAUR"" is the title of film",movie_3,SELECT description FROM film WHERE title = 'ACADEMY DINOSAUR',"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

",199,6.5983476638793945,250,['film_text']
1372,Who is the longest serving coach from year 1970 to 1980. List the coach ID and the team(s) he served. Hint: 1970 to 1980 refers to year between 1970 and 1980; longest serving coach Max(Count(coachID)); team(s) he served refers to tmID,professional_basketball,"SELECT coachID, tmID FROM coaches WHERE year BETWEEN 1970 AND 1980 ORDER BY stint DESC LIMIT 1","CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES teams(year),
  tmID TEXT PRIMARY KEY REFERENCES teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  won INTEGER,
  lost INTEGER,
  post_wins INTEGER,
  post_losses INTEGER
);

",233,6.653235197067261,250,['coaches']
1373,Give the names of the female cast in Movie No. 1865. Hint: female cast refers to gender = 'Female'; name of cast refers to person_name; Movie No. 1865 refers to movie_id = 1865,movies_4,SELECT T2.person_name FROM movie_cast AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.person_id INNER JOIN gender AS T3 ON T1.gender_id = T3.gender_id WHERE T1.movie_id = 1865 AND T3.gender = 'Female',"CREATE TABLE `movie_cast` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  character_name TEXT,
  gender_id INTEGER REFERENCES gender(gender_id),
  cast_order INTEGER
);

CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

CREATE TABLE `gender` (
  gender_id INTEGER,
  gender TEXT
);

",235,6.662678241729736,250,"['movie_cast', 'person', 'gender']"
1374,"Where can I find the office of the President of the company? Hint: Where can I find the office refers to address, comprising of addressLine1 and addressLine2; President is a jobTitle",car_retails,"SELECT t2.addressLine1, t2.addressLine2 FROM employees AS t1 INNER JOIN offices AS t2 ON t1.officeCode = t2.officeCode WHERE t1.jobTitle = 'President'","CREATE TABLE `employees` (
  employeeNumber INTEGER,
  lastName TEXT,
  firstName TEXT,
  extension TEXT,
  email TEXT,
  officeCode TEXT REFERENCES offices(officeCode),
  reportsTo INTEGER REFERENCES employees(employeeNumber),
  jobTitle TEXT
);

CREATE TABLE `offices` (
  officeCode TEXT PRIMARY KEY,
  city TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  state TEXT,
  country TEXT,
  postalCode TEXT,
  territory TEXT
);

",166,6.540008306503296,250,"['employees', 'offices']"
1375,What are the categories of the top 2 oldest events? Hint: oldest event refers to MIN(timestamp);,talkingdata,SELECT T4.category FROM events_relevant AS T1 INNER JOIN app_events_relevant AS T2 ON T1.event_id = T2.event_id INNER JOIN app_labels AS T3 ON T3.app_id = T2.app_id INNER JOIN label_categories AS T4 ON T3.label_id = T4.label_id ORDER BY T1.timestamp LIMIT 2,"CREATE TABLE `events` (
  event_id INTEGER,
  device_id INTEGER,
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `events_relevant` (
  event_id INTEGER,
  device_id INTEGER REFERENCES gender_age(device_id),
  timestamp DATETIME,
  longitude REAL,
  latitude REAL
);

CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",193,6.595333099365234,250,"['events', 'events_relevant', 'label_categories']"
1376,"Among the trains that run in the east direction, how many of them have at least one car in a non-regular shape? Hint: non-regular shape refers to shape in ('elipse', 'bucket')",trains,"SELECT SUM(CASE WHEN T1.shape IN ('bucket', 'elipse') THEN 1 ELSE 0 end)as count FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'","CREATE TABLE `trains` (
  id INTEGER,
  direction TEXT
);

CREATE TABLE `cars` (
  id INTEGER,
  train_id INTEGER REFERENCES trains(id),
  position INTEGER,
  shape TEXT,
  len TEXT,
  sides TEXT,
  roof TEXT,
  wheels INTEGER,
  load_shape TEXT,
  load_num INTEGER
);

",148,6.521209001541138,250,"['trains', 'cars']"
1377,List all movie title rated in April 2020 from user who was a trialist. Hint: movie title rated in April 2020 refers to rating_timestamp_utc LIKE '%2020-04-%'; user is a trial list refers to user_trialist = 1;,movie_platform,SELECT T1.movie_title FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_trialist = 1 AND T2.rating_timestamp_utc LIKE '2020-04%',"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

",185,6.563986778259277,250,"['movies', 'ratings', 'lists_users']"
1378,Please list the names of the movies that user 94978 scored as 5. Hint: user 94978 refers to user_id = 94978; scored as 5 refers to rating_score = 5;,movie_platform,SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T1.user_id = 94978,"CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",170,6.5453712940216064,250,"['ratings', 'movies']"
1379,"What is the percentage of wholesaler customers who have shipment weight of not greater than 70000 pounds? Hint: ""wholesaler"" is the cust_type; weight of not greater than 70000 pounds refers to weight < 70000; percentage = Divide (Count(cust_id where weight < 70000), Count(cust_id)) * 100",shipping,SELECT CAST(SUM(CASE WHEN T2.weight < 70000 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_type = 'wholesaler',"CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

",206,6.6063172817230225,250,['customer']
1380,What is the average vacation hours taken by Sales person? Hint: Store Contact refers PersonType = 'SC'; AVG(VacationHours,works_cycles,SELECT CAST(SUM(T1.VacationHours) AS REAL) / COUNT(T1.BusinessEntityID) FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T2.PersonType = 'SP',"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `store` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  Name TEXT,
  SalesPersonID INTEGER REFERENCES SalesPerson(BusinessEntityID),
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `businessentitycontact` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES BusinessEntity(BusinessEntityID),
  PersonID INTEGER PRIMARY KEY REFERENCES Person(BusinessEntityID),
  ContactTypeID INTEGER PRIMARY KEY REFERENCES ContactType(ContactTypeID),
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",454,7.205337762832642,250,"['person', 'store', 'businessentitycontact']"
1381,How many unemployed students still have payment due? Hint: still have payment due refers to bool = 'pos',student_loan,SELECT COUNT(T1.name) FROM unemployed AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'pos',"CREATE TABLE `unemployed` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

",174,6.5519185066223145,250,"['unemployed', 'no_payment_due']"
1382,How many paragraphs are there in the chapter with the highest amount of scenes in act 1? Hint: How many paragraphs refers to ParagraphNum; highest amount of scenes refers to max(count(Scene)),shakespeare,SELECT T1.ParagraphNum FROM paragraphs AS T1 INNER JOIN chapters AS T2 ON T1.chapter_id = T2.id WHERE T2.Act = 1 ORDER BY T2.Scene DESC LIMIT 1,"CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",162,6.537463426589966,250,"['chapters', 'paragraphs']"
1383,"What is the precise location of the establishment with the highest number of failed inspections? Hint: precise location refers to latitude, longitude; the highest number of failed inspections refers to max(count(results where results = 'Fail'))",food_inspection_2,"SELECT T1.latitude, T1.longitude FROM establishment AS T1 INNER JOIN ( SELECT license_no FROM inspection WHERE results = 'Fail' GROUP BY license_no ORDER BY COUNT(results) DESC LIMIT 1 ) AS T2 ON T1.license_no = T2.license_no","CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",169,6.546197891235352,250,"['inspection', 'establishment']"
1384,"Indicate the full name of all customers whose last name begins with the letter K. Hint: full name refers to first_name, last_name; last name begin with the letter 'K' refers to last_name LIKE 'K%'",books,"SELECT first_name, last_name FROM customer WHERE last_name LIKE 'K%'","CREATE TABLE `customer` (
  customer_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  email TEXT
);

",218,6.626168727874756,250,['customer']
1385,"How many movies directed by Francis Ford Coppola have a popularity of more than 1,000? Indicate what is the highest amount of likes that each critic per movie has received, if there's any. Hint: Francis Ford Coppola refers to director_name; popularity of more than 1,000 refers to movie_popularity >1000;highest amount of likes that each critic per movie has received refers to MAX(critic_likes)",movie_platform,"SELECT COUNT(T2.movie_title), T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.director_name = 'Francis Ford Coppola' AND T2.movie_popularity > 1000","CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",221,6.632152318954468,250,"['movies', 'ratings']"
1386,"Among the films rented by Natalie Meyer, describe the titles and categories of the films which were rented in February 2006. Hint: category refers to name; rented in February 2006 refers to year(rental_date) = 2006 and month (rental_rate) = 2",movie_3,"SELECT T3.title, T2.name FROM film_category AS T1 INNER JOIN category AS T2 ON T1.category_id = T2.category_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id INNER JOIN inventory AS T4 ON T3.film_id = T4.film_id INNER JOIN customer AS T5 ON T4.store_id = T5.store_id INNER JOIN rental AS T6 ON T4.inventory_id = T6.inventory_id WHERE T5.first_name = 'Natalie' AND T5.last_name = 'Meyer' AND STRFTIME('%Y',T3.rental_rate) = '2006' AND STRFTIME('%m',T3.rental_rate) = '2'","CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",237,6.6690263748168945,250,"['film_text', 'actor', 'rental', 'film', 'film_actor', 'category']"
1387,How many countries in the North America Region has completed the vital registration? Hint: has completed the vital registration refers to VitalRegistrationComplete = 'Yes',world_development_indicators,SELECT COUNT(CountryCode) FROM Country WHERE VitalRegistrationComplete = 'Yes' AND Region = 'North America',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",150,6.525140285491943,250,"['country', 'countrynotes']"
1388,Provide the number of publications published in the journal named 'Academic Medicine' between 2005 and 2010. Hint: 'Academic Medicine' is the FullName of journal; between 2005 and 2010 refer to Year 2005 BETWEEN 2010,authors,SELECT COUNT(T2.JournalId) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T1.FullName = 'Academic Medicine' AND T2.Year BETWEEN 2005 AND 2010,"CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",189,6.56881308555603,250,"['journal', 'paper']"
1389,"What are the total occurence of words that paired with ""nombre""? Hint: total occurrence refers to sum(occurrences); paired with ""nombre"" refers to w1st.word = ""nombre"" or w2nd.word = ""nombre""",language_corpus,SELECT SUM(T2.occurrences) FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st OR T1.wid = T2.w2nd WHERE T2.w1st IN (( SELECT wid FROM words WHERE word = 'nombre' ) OR T2.w2nd IN ( SELECT wid FROM words WHERE word = 'nombre' )),"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",180,6.558534383773804,250,"['words', 'pages_words']"
1390,"How many users answered the question ""Overall, how much importance does your employer place on physical health?""? Hint: question refers to questiontext",mental_health_survey,"SELECT COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questiontext LIKE 'Overall, how much importance does your employer place on physical health?'","CREATE TABLE `question` (
  questiontext TEXT,
  questionid INTEGER
);

CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",135,6.506929874420166,250,"['question', 'answer']"
1391,List the movies in the Somali language. Hint: List the movies refers to title; Somali language refers to language_name = 'Somali',movies_4,SELECT T1.title FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Somali',"CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `language` (
  language_id INTEGER,
  language_code TEXT,
  language_name TEXT
);

",211,6.617719888687134,250,"['movie', 'language']"
1392,"List the player's ID of the top five players, by descending order, in terms of bowling skill. Hint: player's ID refers to Player_Id",soccer_2016,SELECT Player_Id FROM Player ORDER BY Bowling_skill DESC LIMIT 5,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

",237,6.665270805358887,250,['player']
1393,How many unemployed disabled students have been absent for 8 months from school? Hint: absent for 8 months refers to month = 8;,student_loan,SELECT COUNT(T1.name) FROM longest_absense_from_school AS T1 INNER JOIN unemployed AS T2 ON T1.name = T2.name INNER JOIN disabled AS T3 ON T2.name = T3.name WHERE T1.month = 8,"CREATE TABLE `unemployed` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `disabled` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",180,6.554165601730347,250,"['unemployed', 'disabled', 'longest_absense_from_school']"
1394,"How old was Alexis Ajinca when he was first drafted? Hint: age when drafted refers to Subtract(draftYear, year(birthDate)); first drafted refers to draftYear",professional_basketball,"SELECT draftYear - strftime('%Y', birthDate) FROM draft AS T1 INNER JOIN players AS T2 ON T1.playerID = T2.playerID WHERE T1.firstName = 'Alexis' AND T1.lastName = 'Ajinca' AND draftRound = 1","CREATE TABLE `players` (
  playerID TEXT PRIMARY KEY,
  useFirst TEXT,
  firstName TEXT,
  middleName TEXT,
  lastName TEXT,
  nameGiven TEXT,
  fullGivenName TEXT,
  nameSuffix TEXT,
  nameNick TEXT,
  pos TEXT,
  firstseason INTEGER,
  lastseason INTEGER,
  height REAL,
  weight INTEGER,
  college TEXT,
  collegeOther TEXT,
  birthDate DATE,
  birthCity TEXT,
  birthState TEXT,
  birthCountry TEXT,
  highSchool TEXT,
  hsCity TEXT,
  hsState TEXT,
  hsCountry TEXT,
  deathDate DATE,
  race TEXT
);

",193,6.593872308731079,250,['players']
1395,Provide the zip codes and area codes of the postal points with the community post office type at the elevation above 6000. Hint: community post office type refers to type = 'Community Post Office'; elevation above 6000 refers to elevation > 6000;,address,"SELECT T1.zip_code, T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.type = 'Community Post Office ' AND T2.elevation > 6000","CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

",193,6.594092607498169,250,"['zip_data', 'area_code']"
1396,"How many shipments with weight of no more than 1,000 pounds were shipped by the oldest truck? Hint: weight of no more than 1000 pounds refers to weight < 1000; oldest truck refers to Min (model_year)",shipping,SELECT COUNT(*) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T2.weight < 1000 ORDER BY T1.model_year ASC LIMIT 1,"CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

CREATE TABLE `truck` (
  truck_id INTEGER,
  make TEXT,
  model_year INTEGER
);

",168,6.545042991638184,250,"['shipment', 'truck']"
1397,"Between 1917 to 1920, what are the names of the team who ranked first in the first half of the season each year? Hint: year BETWEEN 1917 AND 1920; first half of season refers to half = 1",hockey,SELECT DISTINCT T2.name FROM TeamsHalf AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.half = 1 AND T1.rank = 1 AND T1.year BETWEEN 1917 AND 1920,"CREATE TABLE `teamshalf` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  half INTEGER PRIMARY KEY,
  rank INTEGER,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  GF INTEGER,
  GA INTEGER
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",274,6.761439561843872,250,"['teamshalf', 'teams']"
1398,"Calculate the difference between sales of games from region ID 2 and region ID 3. Hint: difference = SUBTRACT(SUM(num_sales WHERE region_id = 2), SUM(num_sales WHERE region_id = 3));",video_games,SELECT SUM(CASE WHEN T.region_id = 2 THEN T.num_sales ELSE 0 END) - SUM(CASE WHEN T.region_id = 3 THEN T.num_sales ELSE 0 END) FROM region_sales t,"CREATE TABLE `region_sales` (
  region_id INTEGER REFERENCES region(id),
  game_platform_id INTEGER REFERENCES game_platform(id),
  num_sales REAL
);

",184,6.5604636669158936,250,['region_sales']
1399,Indicate the ISBN13 of all the books that have less than 140 pages and more than 135. Hint: ISBN13 refers to isbn13; less than 140 pages and more than 135 refers to num_pages > 135 AND num_pages < 140;,books,SELECT isbn13 FROM book WHERE num_pages < 140 AND num_pages > 135,"CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

",238,6.668081760406494,250,['book']
1400,Give the name of the university with the most number of students in 2015. Hint: most number of students refers to MAX(num_students); in 2015 refers to year = 2015; name of university refers to university_name;,university,SELECT T2.university_name FROM university_year AS T1 INNER JOIN university AS T2 ON T1.university_id = T2.id WHERE T1.year = 2015 ORDER BY T1.num_students DESC LIMIT 1,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",188,6.568540334701538,250,"['university', 'university_year']"
1401,In which state can you find the highest amount of good performing Account Representatives? Hint: good performing refers to performance = 'Good'; Account Representatives is a positiontitle; highest amount of employee refers to MAX(positionID);,human_resources,SELECT T2.state FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID INNER JOIN position AS T3  ON T3.positionID = T1.positionID WHERE T3.positiontitle = 'Account Representative' AND T1.performance = 'Good' GROUP BY T2.state ORDER BY COUNT(T2.state) DESC LIMIT 1,"CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

CREATE TABLE `employee` (
  ssn TEXT PRIMARY KEY,
  lastname TEXT,
  firstname TEXT,
  hiredate TEXT,
  salary TEXT,
  gender TEXT,
  performance TEXT,
  positionID INTEGER REFERENCES position(positionID),
  locationID INTEGER REFERENCES location(locationID)
);

",151,6.524145841598511,250,"['position', 'employee']"
1402,What are the names of the products that were ordered that have a unit price of no more than 5? Hint: unit price of no more than 5 refers to UnitPrice < 5; name of products refers to ProductName,retail_world,SELECT DISTINCT T1.ProductName FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T2.UnitPrice < 5,"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `orderdetails` (
  OrderDetailID INTEGER,
  OrderID INTEGER REFERENCES Orders(OrderID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",182,6.55916953086853,250,"['products', 'orderdetails']"
1403,"What proportion of a pair of words in the Catalan language have been repeated less than 80 times? Hint: Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word; in the Catalan language refers to lid; repeated less than 80 times refers to occurrences < 80; DIVIDE(COUNT(lid where occurrences < 80), COUNT(lid)) as percentage;",language_corpus,SELECT CAST(COUNT(CASE WHEN occurrences < 80 THEN lid ELSE NULL END) AS REAL) * 100 / COUNT(lid) FROM biwords,"CREATE TABLE `biwords` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  w1st INTEGER PRIMARY KEY REFERENCES words(wid),
  w2nd INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

CREATE TABLE `langs` (
  lid INTEGER,
  lang TEXT PRIMARY KEY,
  locale TEXT PRIMARY KEY,
  pages INTEGER,
  words INTEGER
);

",240,6.670658826828003,250,"['biwords', 'langs']"
1404,"List the name of players who have a height over 5'9. Hint: names of players refers to PlayerName; height over 5'9 refers to height_in_inch > '5''9""';",ice_hockey_draft,"SELECT T1.PlayerName FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T2.height_in_inch > '5''9""'","CREATE TABLE `height_info` (
  height_id INTEGER,
  height_in_cm INTEGER,
  height_in_inch TEXT
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",159,6.532970428466797,250,"['height_info', 'playerinfo']"
1405,Indicate order numbers with an order date after 1/1/2018. Hint: order date after 1/1/2018 refers to OrderDate > '1/1/2018',regional_sales,SELECT DISTINCT T FROM ( SELECT CASE  WHEN OrderDate > '1/1/18' THEN OrderNumber ELSE NULL END AS T FROM `Sales Orders` ) WHERE T IS NOT NULL,"CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",171,6.547787666320801,250,['sales orders']
1406,"Among films with a rental rate of 4.99, what is the total number of films starred by Bob Fawcett? Hint: Bob Fawcett' is a full name of an actor; full name refers to first_name, last_name",movie_3,SELECT COUNT(T1.actor_id) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.rental_rate = 4.99 AND T1.first_name = 'Bob' AND T1.last_name = 'Fawcett',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",220,6.628954172134399,250,"['actor', 'film_actor']"
1407,How many countries uses the 1968 System of National Accounts methodology? Hint: uses the 1968 System of National Accounts methodology refers to SystemOfNationalAccounts = '1968 System of National Accounts methodology',world_development_indicators,SELECT COUNT(CountryCode)  FROM Country WHERE SystemOfNationalAccounts = 'Country uses the 1968 System of National Accounts methodology.',"CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

",170,6.546896696090698,250,['countrynotes']
1408,"What is the bounding box of the object with image id 4 and a prediction relationship class id of 144? Hint: bounding box of the object refers to (x, y, W, H); image id refers to IMG_ID; prediction relationship class id of 144 refers to PRED_CLASS_ID = 144",image_and_language,"SELECT T2.X, T2.Y, T2.W, T2.H FROM IMG_REL AS T1 INNER JOIN IMG_OBJ AS T2 ON T1.IMG_ID = T2.IMG_ID WHERE T1.PRED_CLASS_ID = 144 AND T1.IMG_ID = 3","CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `pred_classes` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

",221,6.630128860473633,250,"['img_obj', 'pred_classes']"
1409,List all of the restaurants on Park St. Hint: restaurant refers to label; Park St refers to street_name = 'park st',restaurant,SELECT T2.label FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.street_name = 'park st',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

",135,6.509519577026367,250,['location']
1410,Which country is the most award-winning player from? Hint: most award-winning refers to max(count(award)); country player is from refers to birthCountry,hockey,SELECT T1.birthCountry FROM Master AS T1 INNER JOIN AwardsPlayers AS T2 ON T1.playerID = T2.playerID GROUP BY T1.birthCountry ORDER BY COUNT(T2.award) DESC LIMIT 1,"CREATE TABLE `awardsplayers` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

CREATE TABLE `master` (
  playerID TEXT,
  coachID TEXT REFERENCES Coaches(coachID),
  hofID TEXT,
  firstName TEXT,
  lastName TEXT,
  nameNote TEXT,
  nameGiven TEXT,
  nameNick TEXT,
  height TEXT,
  weight TEXT,
  shootCatch TEXT,
  legendsID TEXT,
  ihdbID TEXT,
  hrefID TEXT,
  firstNHL TEXT,
  lastNHL TEXT,
  firstWHA TEXT,
  lastWHA TEXT,
  pos TEXT,
  birthYear TEXT,
  birthMon TEXT,
  birthDay TEXT,
  birthCountry TEXT,
  birthState TEXT,
  birthCity TEXT,
  deathYear TEXT,
  deathMon TEXT,
  deathDay TEXT,
  deathCountry TEXT,
  deathState TEXT,
  deathCity TEXT
);

",247,6.68459415435791,250,"['awardsplayers', 'master']"
1411,"In the year 2000, which team has played the most games against the Buffalo Sabres? Hint: which team played the most games against refers to oppID where MAX(SUM(G); Buffalo Sabres is the name of team;",hockey,SELECT T3.name FROM TeamVsTeam AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.oppID = T2.tmID INNER JOIN Teams AS T3 ON T1.year = T3.year AND T1.tmID = T3.tmID WHERE T1.year = 2000 AND T2.name = 'Buffalo Sabres' GROUP BY T3.name ORDER BY SUM(T2.G) DESC LIMIT 1,"CREATE TABLE `teamvsTeam` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year) REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  oppID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",268,6.74793815612793,250,"['teamvsTeam', 'teams']"
1412,Who are the players who were not in the Hall of Fame list. Hint: not in the Hall of Fame refers to hofID IS NULL,hockey,"SELECT firstName, lastName FROM Master WHERE hofID IS NULL","CREATE TABLE `awardsplayers` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",244,6.670943260192871,250,"['awardsplayers', 'teams']"
1413,Which venue did Kolkata Knight Riders play most of their matches as a Team 1? Hint: venue refers to Venue_Name; Kolkata Knight Riders refers to Team_Name = 'Kolkata Knight Riders'; most of their matches refers to max(count(Venue_Id)); Team 1 refers to Team_Id = Team_1,soccer_2016,SELECT T3.Venue_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Team_1 INNER JOIN Venue AS T3 ON T2.Venue_Id = T3.Venue_Id WHERE T1.Team_Name = 'Kolkata Knight Riders' GROUP BY T3.Venue_Id ORDER BY COUNT(T3.Venue_Id) DESC LIMIT 1,"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `venue` (
  Venue_Id INTEGER,
  Venue_Name TEXT,
  City_Id INTEGER REFERENCES City(City_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",280,6.774646520614624,250,"['match', 'venue', 'team']"
1414,"Among the players who use the right hand as their batting hand, how many of them were born after 1985? Hint: right hand as batting hand refers to Batting_Hand = 'Right-hand bat'; born after 1985 refers to SUBSTR(DOB, 1, 4) > 1985",soccer_2016,"SELECT SUM(CASE WHEN SUBSTR(T1.DOB, 1, 4) > 1985 THEN 1 ELSE 0 END) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id WHERE T2.Batting_Hand = 'Right-hand bat'","CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

",277,6.772838592529297,250,['player']
1415,"Among the countries whose agriculture takes up more than 40% of its GDP, how many of them have less than 2 mountains?",mondial_geo,SELECT COUNT(T3.Country) FROM ( SELECT T1.Country FROM economy AS T1 INNER JOIN geo_mountain AS T2 ON T1.Country = T2.Country WHERE T1.Industry < 40 GROUP BY T1.Country HAVING COUNT(T1.Country) < 2 ) AS T3,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `economy` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  GDP REAL,
  Agriculture REAL,
  Service REAL,
  Industry REAL,
  Inflation REAL
);

CREATE TABLE `geo_mountain` (
  Mountain TEXT PRIMARY KEY REFERENCES mountain(None),
  Country TEXT PRIMARY KEY REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None)
);

CREATE TABLE `mountain` (
  Name TEXT PRIMARY KEY,
  Mountains TEXT,
  Height REAL,
  Type TEXT,
  Longitude REAL,
  Latitude REAL
);

",275,6.774465322494507,250,"['country', 'economy', 'geo_mountain', 'mountain']"
1416,"What is the average time needed for the solutions containing files within the repository whose url is ""https://github.com/jeffdik/tachy.git"" to be processd? Hint: average time = avg(ProcessedTime)；",codebase_comments,SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",169,6.54842472076416,250,"['solution', 'repo']"
1417,How many publishers in Japan released a game on X360 in 2011? Hint: in Japan refers to region_name = 'Japan'; on X360 refers to platform_name = 'X360'; in 2011 refers to release_year = 2011,video_games,SELECT COUNT(T3.game_publisher_id) FROM region AS T1 INNER JOIN region_sales AS T2 ON T1.id = T2.region_id INNER JOIN game_platform AS T3 ON T2.game_platform_id = T3.id INNER JOIN platform AS T4 ON T3.platform_id = T4.id WHERE T4.platform_name = 'X360' AND T3.release_year = 2011 AND T1.region_name = 'Japan',"CREATE TABLE `region` (
  id INTEGER,
  region_name TEXT
);

CREATE TABLE `region_sales` (
  region_id INTEGER REFERENCES region(id),
  game_platform_id INTEGER REFERENCES game_platform(id),
  num_sales REAL
);

CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

CREATE TABLE `game_platform` (
  id INTEGER,
  game_publisher_id INTEGER REFERENCES game_publisher(id),
  platform_id INTEGER REFERENCES platform(id),
  release_year INTEGER
);

CREATE TABLE `publisher` (
  id INTEGER,
  publisher_name TEXT
);

",198,6.6023595333099365,250,"['region', 'region_sales', 'game_publisher', 'game_platform', 'publisher']"
1418,What is the GDP for Service of the country with Fuenlabrada as its city.,mondial_geo,SELECT T4.Service * T4.GDP FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Province = T2.Name INNER JOIN economy AS T4 ON T4.Country = T2.Country WHERE T3.Name = 'Fuenlabrada',"CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `economy` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  GDP REAL,
  Agriculture REAL,
  Service REAL,
  Industry REAL,
  Inflation REAL
);

",265,6.746557712554932,250,"['city', 'economy']"
1419,List all the customers' phone numbers from Ethiopia. Hint: phone number refers to c_phone; Ethiopia refers to n_name = 'Ethiopia',retails,SELECT T1.c_phone FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_nationkey = T2.n_nationkey WHERE T2.n_name = 'Ethiopia',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",161,6.5349907875061035,250,"['customer', 'nation']"
1420,"What's the name of the player in 1996 who had the most steals that didn't play in the playoffs? Hint: name of the player refers to first_name, middle_name, last_name; in 1996 refers to year = 1996; the most steals refers to max(steals); didn't play in the playoffs refers to playoff = null",professional_basketball,SELECT T1.playerID FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID WHERE T2.year = 1996 AND T2.PostGP = 0 ORDER BY T2.steals DESC LIMIT 1,"CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",239,6.669586420059204,250,['player_allstar']
1421,What is the gender of the youngest user? Hint: youngest user refers to MIN(age);,talkingdata,SELECT gender FROM gender_age WHERE age = ( SELECT MIN(age) FROM gender_age ),"CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

",192,6.565851926803589,250,['gender_age']
1422,Please list all of the character descriptions in paragraph 20. Hint: paragraph 20 refers to ParagraphNum = 20,shakespeare,SELECT T1.Description FROM characters AS T1 INNER JOIN paragraphs AS T2 ON T1.id = T2.character_id WHERE T2.ParagraphNum = 20,"CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",144,6.517712354660034,250,['paragraphs']
1423,"Please list the players who received the ""Most Valuable Player"" award in the NBA league after the year of 1990, along with their IDs. Hint: player refers to playerID; ""Most Valuable Player"" award refers to award = 'Most Valuable Player'; after the year of 1990 refers to year > 1990; ID refers to playerID",professional_basketball,SELECT playerID FROM awards_players WHERE year > 1990 AND award = 'Most Valuable Player' AND lgID = 'NBA',"CREATE TABLE `awards_players` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

",235,6.6653571128845215,250,['awards_players']
1424,What is the ward ID of the most crowded ward? Hint: most crowded ward refers to Max(Population),chicago_crime,SELECT ward_no FROM Ward ORDER BY Population DESC LIMIT 1,"CREATE TABLE `ward` (
  ward_no INTEGER,
  alderman_first_name TEXT,
  alderman_last_name TEXT,
  alderman_name_suffix TEXT,
  ward_office_address TEXT,
  ward_office_zip TEXT,
  ward_email TEXT,
  ward_office_phone TEXT,
  ward_office_fax TEXT,
  city_hall_office_room INTEGER,
  city_hall_office_phone TEXT,
  city_hall_office_fax TEXT,
  Population INTEGER
);

",153,6.531729698181152,250,['ward']
1425,"How many different orders with a total price greater than 4000 are cancelled? Hint: total price = MULTIPLY(quantityOrdered, priceEach) > 4000; cancelled orders refer to status = 'Cancelled';",car_retails,SELECT COUNT(DISTINCT T1.orderNumber) FROM orderdetails AS T1 INNER JOIN orders AS T2 ON T1.orderNumber = T2.orderNumber WHERE T1.quantityOrdered * T1.priceEach > 4000 AND T2.status = 'Cancelled',"CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

",180,6.558956861495972,250,['orders']
1426,On which platform was Panzer Tactics released in 2007? Hint: platform refers to platform_name; Panzer Tactics refers to game_name = 'Panzer Tactics'; released in 2007 refers to release_year = 2007,video_games,SELECT T5.platform_name FROM game_publisher AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.id INNER JOIN game AS T3 ON T1.game_id = T3.id INNER JOIN game_platform AS T4 ON T1.id = T4.game_publisher_id INNER JOIN platform AS T5 ON T4.platform_id = T5.id WHERE T3.game_name = 'Panzer Tactics' AND T4.release_year = 2007,"CREATE TABLE `platform` (
  id INTEGER,
  platform_name TEXT
);

CREATE TABLE `game_platform` (
  id INTEGER,
  game_publisher_id INTEGER REFERENCES game_publisher(id),
  platform_id INTEGER REFERENCES platform(id),
  release_year INTEGER
);

",190,6.573626756668091,250,"['platform', 'game_platform']"
1427,"Identify by their ID all clients who did not give their consent permission. Hint: did not give their consent permission refers to Consumer consent provided is null, 'N/A', or empty;",retail_complains,SELECT Client_ID FROM events WHERE `Consumer consent provided?` = 'N/A' OR 'Consumer consent provided?' IS NULL OR 'Consumer consent provided?' = '',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",158,6.539853096008301,250,['client']
1428,"What is the average number of territories do each sales representative is in charge of? Hint: sales representative refers to Title = 'Sales Representative'; average number of territories = divide(count(TerritoryID) , count(EmployeeID)) where Title = 'Sales Representative'",retail_world,SELECT CAST(COUNT(T2.TerritoryID) AS REAL) / COUNT(DISTINCT T1.EmployeeID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.Title = 'Sales Representative',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",199,6.6088547706604,250,['employees']
1429,"Calculate the percentage of Black students in all private for profit institutions. Hint: Black students refers to race = 'B'; private for profit refers to control = 'Private for-profit'; percentage = MULTIPLY(DIVIDE(SUM(race = 'B'), SUM(grad_cohort)), 100.0);",college_completion,SELECT CAST(SUM(CASE WHEN T2.race = 'B' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T1.unitid = T2.unitid WHERE T2.race = 'B' AND T1.control = 'Private for-profit',"CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",197,6.60180926322937,250,['institution_grads']
1430,"List down the country of the cities with a population greater than 97% of the average population of all countries in 2020. Hint: population_2020 > MULTIPLY(0.97, AVG(population_2020));",address,SELECT T1.county FROM country AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.population_2020 > 0.97 * ( SELECT AVG(population_2020) FROM zip_data ),"CREATE TABLE `country` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  county TEXT PRIMARY KEY,
  state TEXT REFERENCES state(abbreviation)
);

",192,6.572261333465576,250,['country']
1431,"Which product allows the company to make the highest profit on a single item among those that are the fastest to manufacture? Indicate the rating of the product if there any. Hint: profit on a single item = SUBTRACT(ListPrice, StandardCost); length of time to manufacture refers to DaysToManufacture; fastest to manucature refers to MIN(DaysToManufacture);",works_cycles,"SELECT T1.Name, T2.Rating FROM Product AS T1 INNER JOIN ProductReview AS T2 ON T1.ProductID = T2.ProductID WHERE T1.DaysToManufacture = ( SELECT DaysToManufacture FROM Product ORDER BY DaysToManufacture LIMIT 1 ) ORDER BY T1.ListPrice - T1.StandardCost DESC LIMIT 1","CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productcosthistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  StandardCost REAL,
  ModifiedDate DATETIME
);

",506,7.323863744735718,250,"['product', 'productcosthistory']"
1432,What are the official languages used in Belgium? Hint: official languages refers to IsOfficial = 'T'; Belgium is a name of country;,world,SELECT T2.Language FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T1.Name = 'Belgium' AND T2.IsOfficial = 'T',"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",143,6.517954111099243,250,"['countrylanguage', 'country']"
1433,What is the total number of businesses with a tax code H25?,food_inspection,SELECT COUNT(tax_code) FROM businesses WHERE tax_code = 'H25',"CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

",123,6.469984531402588,250,['businesses']
1434,"For the repository which got '189' Stars, how many solutions which needs to be compiled does it contain? Hint: repository refers to Repository.Id; solution needs to be compiled refers to WasCompiled = 0;",codebase_comments,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 189 AND T2.WasCompiled = 0,"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",163,6.5396568775177,250,"['solution', 'repo']"
1435,How many matches have 7 points of winning margin? Hint: have 7 points of winning margin refers to win_margin = 7;,soccer_2016,SELECT COUNT(Match_Id) FROM Match WHERE win_margin = 7,"CREATE TABLE `outcome` (
  Outcome_Id INTEGER,
  Outcome_Type TEXT
);

",230,6.653845310211182,250,['outcome']
1436,Which district is the community area Lincoln Square grouped into? Hint: district refers to side; community area Lincoln Square refers to community_area_name = 'Lincoln Square',chicago_crime,SELECT side FROM Community_Area WHERE community_area_name = 'Lincoln Square',"CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",166,6.541834592819214,250,"['community_area', 'district']"
1437,"Which solution contains files within a more popular repository, the solution ID18 or solution ID19? Hint: more watchers mean that this repository is more popular;",codebase_comments,SELECT CASE WHEN SUM(CASE WHEN T2.Id = 18 THEN T1.Watchers ELSE 0 END) > SUM(CASE WHEN T2.Id = 19 THEN T1.Watchers ELSE 0 END) THEN 'SolutionID18' WHEN SUM(CASE WHEN T2.Id = 18 THEN T1.Watchers ELSE 0 END) < SUM(CASE WHEN T2.Id = 19 THEN T1.Watchers ELSE 0 END) THEN 'SolutionID19' END isMorePopular FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId,"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",150,6.528038740158081,250,"['solution', 'repo']"
1438,"Among the donations with a portion using account credits redemption, how many of them are for projects created by teachers working in a public year-round school? Hint: portion using account credits redemption refers to payment_included_acct_credit = 't'; year-round school refers to school_year_round = 't';",donor,SELECT COUNT(T1.projectid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.payment_included_acct_credit = 't' AND T1.school_year_round = 't',"CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",186,6.563502311706543,250,"['donations', 'projects']"
1439,How many flights on 2018/8/1 were operated by American Airlines Inc.? Hint: on 2018/8/1 refers to FL_DATE = '2018/8/1'; American Airlines Inc. refers to Description = 'American Airlines Inc.: AA';,airline,SELECT COUNT(*) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN INNER JOIN `Air Carriers` AS T3 ON T2.OP_CARRIER_AIRLINE_ID = T3.Code WHERE T2.FL_DATE = '2018/8/1' AND T3.Description = 'American Airlines Inc.: AA',"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",176,6.555922508239746,250,"['airlines', 'air carriers']"
1440,"How many shipments were shipped to the most densely populated city? Hint: most densely populated city refers to Max(Divide(area, population))",shipping,SELECT COUNT(*) FROM shipment AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.city_id ORDER BY T2.area / T2.population DESC LIMIT 1,"CREATE TABLE `city` (
  city_id INTEGER,
  city_name TEXT,
  state TEXT,
  population INTEGER,
  area REAL
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",146,6.521341323852539,250,"['city', 'shipment']"
1441,"What is the total sales of 'Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack' in the Central region? Hint: 'Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack' is the ""Product Name"";",superstore,"SELECT SUM(T1.Sales) FROM central_superstore AS T1 INNER JOIN product AS T2 ON T1.`Product ID` = T2.`Product ID` WHERE T2.`Product Name` = 'Avery Hi-Liter EverBold Pen Style Fluorescent Highlighters, 4/Pack' AND T2.Region = 'Central'","CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",194,6.598816633224487,250,['central_superstore']
1442,How many teams have the same total number of postseason wins and postseason loses? Hint: same total number of postseason wins and postseason loses refers to PostW = PostL,hockey,SELECT DISTINCT COUNT(tmID) FROM Goalies WHERE PostW = PostL,"CREATE TABLE `teamsPost` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  GF INTEGER,
  GA INTEGER,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",252,6.697853326797485,250,['teamsPost']
1443,List all the customers with name containing the word 'Group'. Hint: name containing the word 'Group' refers to Customer Names LIKE '%Group%';,regional_sales,"SELECT T FROM ( SELECT IIF(`Customer Names` LIKE '%Group%', `Customer Names`, NULL) AS T FROM Customers ) WHERE T IS NOT NULL","CREATE TABLE `customers` (
  CustomerID INTEGER,
  Customer Names TEXT
);

",154,6.532898187637329,250,['customers']
1444,Calculate the average GNP of all countries that use Arabic language. Hint: average GNP = AVG(GNP); use Arabic language refers to Language = 'Arabic';,world,SELECT AVG(T1.GNP) FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'Arabic',"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",151,6.526714563369751,250,"['countrylanguage', 'country']"
1445,"What is the nationality of ""Customer#000000055""? Hint: ""Customer#000000055"" is the name of the customer which refers to c_name; nationality is the state of belonging to a particular country, therefore nationality refers to n_name;",retails,SELECT T2.n_name FROM customer AS T1 INNER JOIN nation AS T2 ON T1.c_name = 'Customer#000000055',"CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",192,6.571855306625366,250,"['customer', 'nation']"
1446,"How many ""cute"" type of compliments does user No. 57400 get? Hint: type of compliments refers to compliment_type; user No. refers to user_id;",public_review_platform,SELECT COUNT(T1.compliment_type) FROM Compliments AS T1 INNER JOIN Users_Compliments AS T2 ON T1.compliment_id = T2.compliment_id WHERE T1.compliment_type LIKE 'cute' AND T2.user_id = 57400,"CREATE TABLE `compliments` (
  compliment_id INTEGER,
  compliment_type TEXT
);

CREATE TABLE `users_compliments` (
  compliment_id INTEGER PRIMARY KEY REFERENCES Compliments(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  number_of_compliments TEXT
);

",204,6.609564542770386,250,"['compliments', 'users_compliments']"
1447,"Among the transactions made in July, 2014, how many of them were made by a male customer? Hint: in July, 2014 refers to SUBSTR(TransactionDate, 1, 4) = '2014' AND SUBSTR(TransactionDate, 6, 2) = '07'; male customer refers to Gender = 'M';",beer_factory,"SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Gender = 'M' AND STRFTIME('%Y-%m', T2.TransactionDate) = '2014-07'","CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  First TEXT,
  Last TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER,
  Email TEXT,
  PhoneNumber TEXT,
  FirstPurchaseDate DATE,
  SubscribedToEmailList TEXT,
  Gender TEXT
);

",212,6.6218647956848145,250,"['transaction', 'customers']"
1448,Which nations have a 100% Spanish-speaking population?,mondial_geo,SELECT Country FROM language WHERE Name = 'Spanish' AND Percentage = 100,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `language` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Name TEXT PRIMARY KEY,
  Percentage REAL
);

",261,6.7375710010528564,250,"['country', 'language']"
1449,Name the suppliers that supply products under the category 'cheeses.' Hint: suppliers refers to CompanyName; 'cheeses' is a Description,retail_world,SELECT DISTINCT T1.CompanyName FROM Suppliers AS T1 INNER JOIN Products AS T2 ON T1.SupplierID = T2.SupplierID INNER JOIN Categories AS T3 ON T2.CategoryID = T3.CategoryID WHERE T3.Description = 'Cheeses',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

CREATE TABLE `categories` (
  CategoryID INTEGER,
  CategoryName TEXT,
  Description TEXT
);

",164,6.540873050689697,250,"['products', 'suppliers', 'categories']"
1450,"Calculate the total quantity of products with name starting with alphabet ""c"". Hint: name starting with alphabet ""c"" refers to Name LIKE 'C%';",sales,"SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE SUBSTR(T1.Name, 1, 1) = 'C'","CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

",147,6.521053791046143,250,['products']
1451,List 10 students that have no due payments and are not males. Hint: no due payments refers to bool = 'neg'; not males refers to not in male table,student_loan,SELECT T1.name FROM no_payment_due AS T1 INNER JOIN person AS T2 ON T1.`name` = T2.`name` WHERE T2.`name` NOT IN ( SELECT name FROM male ) AND T1.bool = 'neg',"CREATE TABLE `person` (
  name TEXT PRIMARY KEY
);

CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",185,6.5647687911987305,250,"['person', 'no_payment_due', 'male']"
1452,What is the relation between object sample no.8 and object sample no.4 in image no.1? Hint: relation refers to PRED_CLASS; object sample no.8 and object sample no.4 refers to OBJ1_SAMPLE_ID = 8 AND OBJ2_SAMPLE_ID = 4; image no.1 refers to IMG_ID = 1,image_and_language,SELECT T1.PRED_CLASS FROM PRED_CLASSES AS T1 INNER JOIN IMG_REL AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T2.IMG_ID = 1 AND T2.OBJ1_SAMPLE_ID = 8 AND T2.OBJ2_SAMPLE_ID = 4,"CREATE TABLE `PRED_CLasSES` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",229,6.648194789886475,250,"['PRED_CLasSES', 'img_rel']"
1453,"State the nick name of player ID 'aubinje01'. List all the teams and season he played for. Hint: nick name refers to nameNick; team refers to tmID; season refers to year

",hockey,"SELECT DISTINCT T1.nameNick, T3.year, T3.name FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID INNER JOIN Teams AS T3 ON T2.tmID = T3.tmID WHERE T1.playerID = 'aubinje01'","CREATE TABLE `awardsplayers` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

CREATE TABLE `teamvsteam` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year) REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  oppID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT
);

",259,6.733730316162109,250,"['awardsplayers', 'teams', 'teamvsteam']"
1454,Which city hosted the most games? Hint: Which city refers to city_name; the most games refer to MAX(COUNT(city_name));,olympics,SELECT T2.city_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id GROUP BY T2.city_name ORDER BY COUNT(T2.city_name) DESC LIMIT 1,"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",178,6.5525901317596436,250,"['games_city', 'city']"
1455,Who are the voice actors for all the heroes? Hint: FALSE;,disney,SELECT T2.`voice-actor` FROM characters AS T1 INNER JOIN `voice-actors` AS T2 ON T2.character = T1.hero WHERE T2.movie = T1.movie_title,"CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

",136,6.51173734664917,250,['voice-actors']
1456,"If I'm from the Muscle Machine Inc, to which e-mail adress should I write a letter if I want to reach the superior of my sales representitive? Hint: Muscle Machine Inc is name of customer; superior refers to 'reportsTO', who is the leader of the 'employeeNumber'",car_retails,SELECT t2.email FROM customers AS t1 INNER JOIN employees AS t2 ON t1.salesRepEmployeeNumber = t2.employeeNumber WHERE t1.customerName = 'Muscle Machine Inc',"CREATE TABLE `employees` (
  employeeNumber INTEGER,
  lastName TEXT,
  firstName TEXT,
  extension TEXT,
  email TEXT,
  officeCode TEXT REFERENCES offices(officeCode),
  reportsTo INTEGER REFERENCES employees(employeeNumber),
  jobTitle TEXT
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",191,6.571832895278931,250,"['employees', 'customers']"
1457,Provide the contact email of Moss Zarb.,books,SELECT email FROM customer WHERE first_name = 'Moss' AND last_name = 'Zarb',"CREATE TABLE `customer` (
  customer_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  email TEXT
);

",178,6.563192367553711,250,['customer']
1458,"What is the full address of the customer who commented that DHL be used for the order that was shipped on April 4, 2005? Hint: full address = addressLine1+addressLine2; shippedDate = '2005-04-04';",car_retails,"SELECT T1.addressLine1, T1.addressLine2 FROM customers AS T1 INNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber WHERE T2.shippedDate = '2005-04-04' AND T2.status = 'Shipped'","CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",185,6.567493677139282,250,"['orders', 'customers']"
1459,What is the city name of country ID 3?,soccer_2016,SELECT City_Name FROM City WHERE Country_ID = 3,"CREATE TABLE `city` (
  City_Id INTEGER,
  City_Name TEXT,
  Country_id INTEGER
);

",212,6.62014627456665,250,['city']
1460,Give the name and phone number of the customers who have more than 9000 account balance. Hint: the name of the customer refers to c_name; phone number of the customer refers to c_phone; have more than 9000 account balance refers to c_acctbal > 9000;,retails,"SELECT c_name, c_phone FROM customer WHERE c_acctbal > 9000","CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

",192,6.572268009185791,250,['customer']
1461,"Among the players who have passed away, who had the most award? Hint: pass away refers to deathDate ! = 'null'; most award refers to playerID where Max(Count(award))",professional_basketball,SELECT T1.playerID FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE deathDate IS NOT NULL GROUP BY T1.playerID ORDER BY COUNT(award) DESC LIMIT 1,"CREATE TABLE `awards_players` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

",190,6.569403648376465,250,['awards_players']
1462,"For corpus title ""Atomium"", pick 3 words appear in the title and calculate the total occurence of these words. Hint: total occurrences refers to sum(occurrences)",language_corpus,"SELECT T1.word, T1.occurrences FROM words AS T1 INNER JOIN pages_words AS T2 ON T1.wid = T2.wid WHERE T2.pid = ( SELECT pid FROM pages WHERE title = 'Atomium' ) LIMIT 3","CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",169,6.550292730331421,250,['pages']
1463,Which state is area code 878 in? Give the name of the state.,address,SELECT T2.state FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T1.area_code = 878,"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

",149,6.524328947067261,250,"['state', 'area_code']"
1464,"What is the title of corpus where word ""desena"" appear? Hint: This is not",language_corpus,SELECT T1.title FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid INNER JOIN words AS T3 ON T2.wid = T3.wid WHERE T3.word = 'desena',"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",146,6.520578384399414,250,"['words', 'pages', 'pages_words']"
1465,Show the origin country of Chevrolet Malibu. Hint: origin country refers to country; Chevrolet Malibu refers to car_name = 'chevrolet malibu',cars,SELECT T3.country FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T1.car_name = 'chevrolet malibu',"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

",147,6.51875114440918,250,"['data', 'country']"
1466,Tell the address of employee who did inspection ID 52238?,food_inspection_2,SELECT T1.address FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_id = 52238,"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",133,6.511318206787109,250,"['inspection', 'employee']"
1467,"In which state does Emily Wood work? Hint: Emily Wood is the full name of an employee; full name = firstname, lastname;",human_resources,SELECT T2.state FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T1.firstname = 'Emily' AND T1.lastname = 'Wood',"CREATE TABLE `employee` (
  ssn TEXT PRIMARY KEY,
  lastname TEXT,
  firstname TEXT,
  hiredate TEXT,
  salary TEXT,
  gender TEXT,
  performance TEXT,
  positionID INTEGER REFERENCES position(positionID),
  locationID INTEGER REFERENCES location(locationID)
);

CREATE TABLE `location` (
  locationID INTEGER,
  locationcity TEXT,
  address TEXT,
  state TEXT,
  zipcode INTEGER,
  officephone TEXT
);

",134,6.5113890171051025,250,"['employee', 'location']"
1468,"Name the youngest player who ever won ""Rookie of the Year"". Hint: player name refers to playerID; the youngest refers to max(birthDate); won ""Rookie of the Year"" refers to award = 'Rookie of the Year'",professional_basketball,"SELECT T1.firstName, T1.middleName, T1.lastName FROM players AS T1 INNER JOIN awards_players AS T2 ON T1.playerID = T2.playerID WHERE T2.award = 'Rookie of the Year' ORDER BY T1.birthDate DESC LIMIT 1","CREATE TABLE `awards_players` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  award TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  note TEXT,
  pos TEXT
);

",206,6.616071701049805,250,['awards_players']
1469,"In the complains received in 2012, how many of them are submitted through email? Hint: received in 2012 refers to Date received LIKE '2012%'; submitted through email refers to Submitted via = 'Email'",retail_complains,"SELECT COUNT(`Submitted via`) FROM events WHERE strftime('%Y', `Date received`) = '2012' AND `Submitted via` = 'Email'","CREATE TABLE `callcenterlogs` (
  Date received DATE,
  Complaint ID TEXT PRIMARY KEY,
  rand client TEXT REFERENCES client(client_id),
  phonefinal TEXT,
  vru+line TEXT,
  call_id INTEGER,
  priority INTEGER,
  type TEXT,
  outcome TEXT,
  server TEXT,
  ser_start TEXT,
  ser_exit TEXT,
  ser_time TEXT
);

",173,6.549968242645264,250,['callcenterlogs']
1470,"What is the full name of the driver who delivered the most shipments to the least populated city? Hint: least populated city refers to Min(population); fullname refers to first_name, last_name; most shipment refers to driver_id where Max(Count (ship_id))",shipping,"SELECT T1.first_name, T1.last_name FROM driver AS T1 INNER JOIN shipment AS T2 ON T1.driver_id = T2.driver_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id GROUP BY T1.first_name, T1.last_name, T3.population HAVING T3.population = MAX(T3.population) ORDER BY COUNT(*) DESC LIMIT 1","CREATE TABLE `driver` (
  driver_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip_code INTEGER,
  phone TEXT
);

CREATE TABLE `city` (
  city_id INTEGER,
  city_name TEXT,
  state TEXT,
  population INTEGER,
  area REAL
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",175,6.562985897064209,250,"['driver', 'city', 'shipment']"
1471,Who was the Law and Order series writer who also won the Television Silver Gavel Award at the American Bar Association Silver Gavel Awards for Media and the Arts for two consecutive years? Hint: who refers to name; writer refers to role = 'writer'; won refers to result = 'Winner'; the Television refers to award = 'Television'; Silver Gavel Award refers to award_category = 'Silver Gavel Award'; the American Bar Association Silver Gavel Awards for Media and the Arts refers to organization = 'American Bar Association Silver Gavel Awards for Media and the Arts',law_episode,"SELECT t3.name FROM ( SELECT DISTINCT T2.year AS years, T1.name, row_number() OVER (PARTITION BY T1.name ORDER BY T2.year) AS rm FROM Person AS T1 INNER JOIN Award AS T2 ON T1.person_id = T2.person_id WHERE T2.award = 'Television' AND T2.award_category = 'Silver Gavel Award' AND T2.series = 'Law and Order' AND T2.result = 'Winner' AND T2.organization = 'American Bar Association Silver Gavel Awards for Media and the Arts' ) AS T3 GROUP BY t3.name HAVING COUNT(t3.years - t3.rm) >= 2","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  series TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  person_id TEXT REFERENCES Person(person_id),
  role TEXT,
  result TEXT
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",238,6.669491767883301,250,"['award', 'person']"
1472,State the address of Amy Klobuchar at the term of 4th of January 2001. Hint: at the term of 4th of January 2001 refers to start = '2001-04-01';,legislator,SELECT T2.address FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T1.first_name = 'Amy' AND T1.last_name = 'Klobuchar' AND T2.start = '2001-04-01',"CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",174,6.5583977699279785,250,['historical-terms']
1473,"For the order with the total price of 218195.43, which supplier handled the returned item? Give the supplier id. Hint: returned item refers to l_returnflag = 'R'; supplier id refers to l_suppkey; order with the total price of 218195.43 refers to o_totalprice = 218195.43;",retails,SELECT T2.l_suppkey FROM orders AS T1 INNER JOIN lineitem AS T2 ON T1.o_orderkey = T2.l_orderkey WHERE T1.o_totalprice = 218195.43 AND T2.l_returnflag = 'R',"CREATE TABLE `lineitem` (
  l_shipdate DATE,
  l_orderkey INTEGER PRIMARY KEY REFERENCES orders(o_orderkey),
  l_discount REAL,
  l_extendedprice REAL,
  l_suppkey INTEGER REFERENCES partsupp(ps_suppkey),
  l_quantity INTEGER,
  l_returnflag TEXT,
  l_partkey INTEGER REFERENCES partsupp(ps_partkey),
  l_linestatus TEXT,
  l_tax REAL,
  l_commitdate DATE,
  l_receiptdate DATE,
  l_shipmode TEXT,
  l_linenumber INTEGER PRIMARY KEY,
  l_shipinstruct TEXT,
  l_comment TEXT
);

CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

",212,6.624123811721802,250,"['lineitem', 'supplier']"
1474,"Please list any three criminal sexual assault cases against persons where the criminals have been arrested. Hint: ""Criminal Sexual Assault"" is the title of crime; against person refers to crime_against = 'Persons'; criminals have been arrested refers to arrest = 'TRUE'; cases refers to case_number",chicago_crime,SELECT T2.case_number FROM FBI_Code AS T1 INNER JOIN Crime AS T2 ON T1.fbi_code_no = T2.fbi_code_no WHERE T1.title = 'Criminal Sexual Assault' AND T2.arrest = 'TRUE' AND T1.crime_against = 'Persons' LIMIT 3,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `fbi_code` (
  fbi_code_no TEXT PRIMARY KEY,
  title TEXT,
  description TEXT,
  crime_against TEXT
);

",197,6.60455846786499,250,"['crime', 'fbi_code']"
1475,How many states are in the Midwest region?,regional_sales,SELECT COUNT(DISTINCT T) FROM ( SELECT CASE  WHEN Region = 'Midwest' THEN State ELSE NULL END AS T FROM Regions ) WHERE T IS NOT NULL,"CREATE TABLE `regions` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

",132,6.512741327285767,250,['regions']
1476,Which company had the most orders in 1998? Hint: in 1998 refers to YEAR (OrderDate) = 1998; most orders = Max(Count(CustomerID)); company refers to CompanyName,retail_world,"SELECT T1.CompanyName FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE STRFTIME('%Y', T2.OrderDate) = '1998' GROUP BY T1.CompanyName ORDER BY COUNT(T2.OrderID) DESC LIMIT 1","CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",187,6.569202184677124,250,"['orders', 'customers']"
1477,Provide the nation and region of the customer with the address of wH55UnX7 VI? Hint: nation refers to n_name; region refers to r_name; address of wH55UnX7 VI refers to c_address = 'wH55UnX7 VI';,retails,"SELECT T1.n_name, T3.r_name FROM nation AS T1 INNER JOIN customer AS T2 ON T1.n_nationkey = T2.c_nationkey INNER JOIN region AS T3 ON T1.n_regionkey = T3.r_regionkey WHERE T2.c_address = 'wH55UnX7 VI'","CREATE TABLE `customer` (
  c_custkey INTEGER,
  c_mktsegment TEXT,
  c_nationkey INTEGER REFERENCES nation(n_nationkey),
  c_name TEXT,
  c_address TEXT,
  c_phone TEXT,
  c_acctbal REAL,
  c_comment TEXT
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

CREATE TABLE `region` (
  r_regionkey INTEGER,
  r_name TEXT,
  r_comment TEXT
);

",188,6.570429563522339,250,"['customer', 'nation', 'region']"
1478,"Provide at least 5 ward office addresses associated with the crimes that happened in the community of Montclare. Hint: ""Montclare"" is the community_area_name",chicago_crime,SELECT T3.ward_office_address FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no INNER JOIN Ward AS T3 ON T2.ward_no = T3.ward_no WHERE T1.community_area_name = 'Montclare' GROUP BY T3.ward_office_address LIMIT 5,"CREATE TABLE `ward` (
  ward_no INTEGER,
  alderman_first_name TEXT,
  alderman_last_name TEXT,
  alderman_name_suffix TEXT,
  ward_office_address TEXT,
  ward_office_zip TEXT,
  ward_email TEXT,
  ward_office_phone TEXT,
  ward_office_fax TEXT,
  city_hall_office_room INTEGER,
  city_hall_office_phone TEXT,
  city_hall_office_fax TEXT,
  Population INTEGER
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",167,6.548485994338989,250,"['ward', 'community_area']"
1479,Provide a list of restaurants from Marin county. Hint: restaurant refers to label,restaurant,SELECT T1.label FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T2.county = 'marin county',"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `geographic` (
  city TEXT PRIMARY KEY,
  county TEXT,
  region TEXT
);

",123,6.471558570861816,250,"['location', 'geographic']"
1480,"Please list the destination cities of all the shipments ordered by S K L Enterprises Inc. Hint: ""S K L Enterprises Inc"" is the cust_name; destination cities refers to city_name",shipping,SELECT DISTINCT T3.city_name FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id INNER JOIN city AS T3 ON T3.city_id = T2.city_id WHERE T1.cust_name = 'S K L Enterprises Inc',"CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `city` (
  city_id INTEGER,
  city_name TEXT,
  state TEXT,
  population INTEGER,
  area REAL
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",154,6.529495716094971,250,"['customer', 'city', 'shipment']"
1481,What is the region id of Christine Jacoba Aaftink?,olympics,SELECT T1.region_id FROM person_region AS T1 INNER JOIN person AS T2 ON T1.person_id = T2.id WHERE T2.full_name = 'Christine Jacoba Aaftink',"CREATE TABLE `person_region` (
  person_id INTEGER REFERENCES person(id),
  region_id INTEGER REFERENCES noc_region(id)
);

CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

",162,6.534906625747681,250,"['person_region', 'person']"
1482,"How many papers were published in 2011 in the journal whose short name is ""Mol Brain""? Hint: in 2011 refers to Year = 2011; 'Mol Brain' is the ShortName of journal",authors,SELECT COUNT(T2.Id) FROM Journal AS T1 INNER JOIN Paper AS T2 ON T1.Id = T2.JournalId WHERE T2.Year = 2011 AND T1.ShortName = 'Mol Brain',"CREATE TABLE `journal` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",168,6.543810606002808,250,"['journal', 'paper']"
1483,What is the total amount of all the donations made by the donor who made the highest donation in a single amount? Indicate the essay title to where he/she made his/her biggest donation. Hint: total amount of all the donations refers to sum(donation_total); highest donation refers to max(donation_total),donor,"SELECT T2.donation_total, T1.title FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.donation_total = ( SELECT MAX(donation_total) FROM donations )","CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

CREATE TABLE `essays` (
  projectid TEXT,
  teacher_acctid TEXT,
  title TEXT,
  short_description TEXT,
  need_statement TEXT,
  essay TEXT
);

",185,6.5639894008636475,250,"['donations', 'essays']"
1484,"How much would be the total sales profit for shopping cart ID 20621 ? Hint: Sales profit = MULTIPLY(SUBTRACT(ListPrice, StandardCost; Quantity)), where ShoppingCartID = '20621'",works_cycles,SELECT SUM((T1.ListPrice - T1.StandardCost) * T2.Quantity) FROM Product AS T1 INNER JOIN ShoppingCartItem AS T2 ON T1.ProductID = T2.ProductID WHERE T2.ShoppingCartID = 20621,"CREATE TABLE `productlistpricehistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ListPrice REAL,
  ModifiedDate DATETIME
);

CREATE TABLE `salesorderdetail` (
  SalesOrderID INTEGER REFERENCES SalesOrderHeader(SalesOrderID),
  SalesOrderDetailID INTEGER,
  CarrierTrackingNumber TEXT,
  OrderQty INTEGER,
  ProductID INTEGER REFERENCES SpecialOfferProduct(ProductID),
  SpecialOfferID INTEGER REFERENCES SpecialOfferProduct(SpecialOfferID),
  UnitPrice REAL,
  UnitPriceDiscount REAL,
  LineTotal REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",479,7.264042377471924,250,"['productlistpricehistory', 'salesorderdetail']"
1485,"For the user who gave the most number of long reviews, what is his/her averge ratings of all review? Hint: long reviews refers to review_length = 'long'; most number of long reviews refers to MAX(COUNT(review_length = 'long')); average ratings = AVG(review_stars);",public_review_platform,SELECT CAST(SUM(T1.review_stars) AS REAL) / COUNT(T1.review_stars) FROM Reviews AS T1 INNER JOIN Users AS T2 ON T1.user_id = T2.user_id WHERE T1.review_length LIKE 'Long' GROUP BY T1.user_id ORDER BY COUNT(T1.review_length) DESC LIMIT 1,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

",227,6.652372598648071,250,['reviews']
1486,"Name of customers who have ordered Cocktail Glasses by online sales channel. Hint: ""Cocktail Glasses"" is the Product Name; customer refers to Customer Names",regional_sales,SELECT T FROM ( SELECT DISTINCT CASE  WHEN T3.`Product Name` = 'Cocktail Glasses' AND T2.`Sales Channel` = 'Online' THEN T1.`Customer Names` END AS T FROM Customers T1 INNER JOIN `Sales Orders` T2 ON T2._CustomerID = T1.CustomerID INNER JOIN Products T3 ON T3.ProductID = T2._ProductID ) WHERE T IS NOT NULL,"CREATE TABLE `products` (
  ProductID INTEGER,
  Product Name TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  Customer Names TEXT
);

",158,6.541231632232666,250,"['products', 'sales orders', 'customers']"
1487,"To which region does the sales team that has used the WARE-MKL1006 warehouse the most times for its shipments belong? Hint: ""WARE-MKL1006"" is the WarehouseCode; most shipment to region refers to Max(Count(Region))",regional_sales,SELECT T2.Region FROM `Sales Orders` AS T1 INNER JOIN `Sales Team` AS T2 ON T2.SalesTeamID = T1._SalesTeamID WHERE T1.WarehouseCode = 'WARE-MKL1006' GROUP BY T2.Region ORDER BY COUNT(T1.OrderNumber) DESC LIMIT 1,"CREATE TABLE `sales team` (
  SalesTeamID INTEGER,
  Sales Team TEXT,
  Region TEXT
);

CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

",189,6.575616121292114,250,"['sales team', 'store locations', 'sales orders']"
1488,How many images have an x-coordinate of 5 and y-coordinate of 5? Hint: X and Y refer to coordinates of the bounding box where X = 5 and Y = 5; images refer to IMG_ID;,image_and_language,SELECT COUNT(IMG_ID) FROM IMG_OBJ WHERE X = 5 AND Y = 5,"CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

",197,6.601381063461304,250,['img_obj']
1489,How many business have low check-in on Sunday at 10AM? Hint: on Sunday refers to day_of_week = 'Sunday'; low check-in at 10AM refers to label_time_10 = 'Low',public_review_platform,SELECT COUNT(T2.business_id) FROM Days AS T1 INNER JOIN Checkins AS T2 ON T1.day_id = T2.day_id WHERE T1.day_of_week = 'Sunday' AND T2.label_time_10 = 'Low',"CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

CREATE TABLE `days` (
  day_id INTEGER,
  day_of_week TEXT
);

",213,6.620521306991577,250,"['business_hours', 'days']"
1490,Indicate which company is located in France? Hint: company refers to CompanyName; France is a country,retail_world,SELECT CompanyName FROM Customers WHERE Country = 'France',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",157,6.533062934875488,250,['customers']
1491,"What is the category for the ""Moist Boys"" podcast? Hint: ""Moist Boys"" refers to title of podcast",music_platform_2,SELECT category FROM categories WHERE podcast_id IN ( SELECT podcast_id FROM podcasts WHERE title = 'Moist Boys' ),"CREATE TABLE `podcasts` (
  podcast_id TEXT PRIMARY KEY,
  itunes_id INTEGER,
  slug TEXT,
  itunes_url TEXT,
  title TEXT
);

CREATE TABLE `categories` (
  podcast_id TEXT PRIMARY KEY REFERENCES podcasts(None),
  category TEXT PRIMARY KEY
);

",137,6.5112762451171875,250,"['podcasts', 'categories']"
1492,"Please list the full names of the customers who have purchased at least one root beer produced by AJ Stephans Beverages. Hint: full name = First, Last; customers who have purchased at least one root beer refers to CustomerID > = 1; produced by AJ Stephans Beverages refers to BreweryName = 'AJ Stephans Beverages';",beer_factory,"SELECT T1.First, T1.Last FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN rootbeer AS T3 ON T2.RootBeerID = T3.RootBeerID INNER JOIN rootbeerbrand AS T4 ON T3.BrandID = T4.BrandID WHERE T4.BreweryName = 'AJ Stephans Beverages'","CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  First TEXT,
  Last TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER,
  Email TEXT,
  PhoneNumber TEXT,
  FirstPurchaseDate DATE,
  SubscribedToEmailList TEXT,
  Gender TEXT
);

",206,6.614234685897827,250,"['rootbeerbrand', 'transaction', 'customers']"
1493,How many schools with the highest level of poverty have received a portion of a donation included corporate sponsored gift card? Hint: highest level of poverty refers to poverty_level = 'highest'; received a portion of a donation included corporate sponsored gift card refers to payment_included_campaign_gift_card = 't',donor,SELECT COUNT(T1.schoolid) FROM projects AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T2.payment_included_campaign_gift_card = 't' AND T1.poverty_level = 'highest poverty',"CREATE TABLE `resources` (
  resourceid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  vendorid INTEGER,
  vendor_name TEXT,
  project_resource_type TEXT,
  item_name TEXT,
  item_number TEXT,
  item_unit_price REAL,
  item_quantity INTEGER
);

",185,6.569904088973999,250,"['donations', 'schools']"
1494,How many movies has the highest networth actor acted in? Hint: highest networth refers to max(networth),movie,"SELECT COUNT(*) FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE CAST(REPLACE(REPLACE(T2.NetWorth, ',', ''), '$', '') AS REAL) = ( SELECT MAX(CAST(REPLACE(REPLACE(NetWorth, ',', ''), '$', '') AS REAL)) FROM actor)","CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",130,6.505450487136841,250,"['actor', 'characters']"
1495,Which episode ids are rated 5 stars and have more than 100 votes? Hint: more than 100 votes refers to votes > 100,simpson_episodes,SELECT episode_id FROM Vote WHERE stars = 5 AND votes > 100;,"CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",159,6.535760402679443,250,['vote']
1496,Which region has the highest number of restaurants? Hint: the highest number refers to max(count(id_restaurant)),restaurant,SELECT T1.region FROM geographic AS T1 INNER JOIN location AS T2 ON T1.city = T2.city GROUP BY T1.region ORDER BY COUNT(T2.id_restaurant) DESC LIMIT 1,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `geographic` (
  city TEXT PRIMARY KEY,
  county TEXT,
  region TEXT
);

",132,6.512919187545776,250,"['location', 'geographic']"
1497,"Of the products that has a reorder inventory point of no more than 600, how many manufactured in-house products that takes 1 day to manufacture with BOM Level 4 are there? Hint: ReorderPoint<600; product is manufactured in-house refers to Makeflag = 1;",works_cycles,SELECT COUNT(T1.ProductID) FROM Product AS T1 INNER JOIN BillOfMaterials AS T2 ON T1.ProductID = T2.ProductAssemblyID WHERE T1.MakeFlag = 1 AND T1.DaysToManufacture = 1 AND T2.BOMLevel = 4 AND T1.ReorderPoint <= 600,"CREATE TABLE `SalesOrderHeader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",489,7.352839946746826,250,"['product', 'productproductphoto', 'productphotolocation', 'productphotolocationtype']"
1498,"List the name of persons who were not included in the credit for the 'How the Test Was Won' episode. Hint: ""How the Test Was Won"" is the title of episode; not included in the credit refers to credited = ' '; name of person refers to person",simpson_episodes,SELECT T2.person FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'How the Test Was Won' AND T2.credited = 'false';,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `person` (
  name TEXT PRIMARY KEY,
  birthdate TEXT,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",183,6.569390058517456,250,"['credit', 'episode', 'person']"
1499,"What is the tokenized name of the solution whose path is ""maravillas_linq-to-delicious\tasty.sln""? Hint: tokenized name refers to NameTokenized",codebase_comments,SELECT DISTINCT T2.NameTokenized FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T1.Path = 'maravillas_linq-to-delicious',"CREATE TABLE `Solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

",157,6.542065858840942,250,"['solution', 'nameTokenized']"
1500,How much is the tax amount of the purchase order with the biggest tax amount? Indicate the purchase order ID. Hint: tax amount refers to TaxAmt; biggest tax amount refers to MAX(TaxAmt);,works_cycles,"SELECT TaxAmt, PurchaseOrderID FROM PurchaseOrderHeader ORDER BY TaxAmt DESC LIMIT 1","CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",468,7.2459259033203125,250,['salesorderheader']
1501,"Among the artists from 1980 to 1982. Which artist was tagged as ""disco""? Hint: from 1980 to 1982 refers to groupYear between 1980 and 1982; tag = 'disco';",music_tracker,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T2.tag = 'disco' AND T1.groupYear BETWEEN 1980 AND 1982,"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

CREATE TABLE `tags` (
  index INTEGER PRIMARY KEY,
  id INTEGER REFERENCES torrents(None),
  tag TEXT
);

",165,6.550626039505005,250,"['torrents', 'tags']"
1502,"Among the bike trips started on the days with a fog in 2013, how many of those trips started from the station ""2nd at Townsend""? Hint: started on the days with a fog refers to start_date where events = 'fog'; in 2013 refers to date LIKE '%2013'; started from station refers to start_station_name; start_station_name = '2nd at Townsend';",bike_share_1,SELECT COUNT(T1.start_station_name) FROM trip AS T1 INNER JOIN weather AS T2 ON T2.zip_code = T1.zip_code WHERE T2.date LIKE '%2013%' AND T2.events = 'Fog' AND T1.start_station_name = '2nd at Townsend' AND T2.zip_code = 94107,"CREATE TABLE `weather` (
  date TEXT,
  max_temperature_f INTEGER,
  mean_temperature_f INTEGER,
  min_temperature_f INTEGER,
  max_dew_point_f INTEGER,
  mean_dew_point_f INTEGER,
  min_dew_point_f INTEGER,
  max_humidity INTEGER,
  mean_humidity INTEGER,
  min_humidity INTEGER,
  max_sea_level_pressure_inches REAL,
  mean_sea_level_pressure_inches REAL,
  min_sea_level_pressure_inches REAL,
  max_visibility_miles INTEGER,
  mean_visibility_miles INTEGER,
  min_visibility_miles INTEGER,
  max_wind_Speed_mph INTEGER,
  mean_wind_speed_mph INTEGER,
  max_gust_speed_mph INTEGER,
  precipitation_inches TEXT,
  cloud_cover INTEGER,
  events TEXT,
  wind_dir_degrees INTEGER,
  zip_code TEXT
);

CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

",204,6.6190197467803955,250,"['weather', 'trip']"
1503,"State the number of the ""魅蓝Note 2"" users who are in the ""F29-32"" group. Hint: 魅蓝Note 2 refers to device_model = '魅蓝Note 2';",talkingdata,SELECT COUNT(T2.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.`group` = 'F29-32' AND T2.device_model = '魅蓝Note 2',"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",219,6.6376965045928955,250,['phone_brand_device_model2']
1504,What are the names of the cars worth 20000? Hint: name of the car refers to car_name; worth 20000 refers to price = 20000,cars,SELECT T1.car_name FROM data AS T1 INNER JOIN price AS T2 ON T1.ID = T2.ID WHERE T2.price = 20000,"CREATE TABLE `price` (
  ID INTEGER,
  price REAL
);

CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

",150,6.532579660415649,250,"['price', 'data']"
1505,List down the name of dishes that were positioned on the left upper corner. Hint: positioned on the left upper corner refers to xpos < 0.25 AND ypos < 0.25;,menu,SELECT T1.name FROM Dish AS T1 INNER JOIN MenuItem AS T2 ON T1.id = T2.dish_id WHERE T2.xpos < 0.25 AND T2.ypos < 0.25,"CREATE TABLE `dish` (
  id INTEGER,
  name TEXT,
  description TEXT,
  menus_appeared INTEGER,
  times_appeared INTEGER,
  first_appeared INTEGER,
  last_appeared INTEGER,
  lowest_price REAL,
  highest_price REAL
);

CREATE TABLE `menuitem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",153,6.532335996627808,250,"['dish', 'menuitem']"
1506,What is the first name of the driver who transported shipment id 1028? Hint: shipment id 1028 refers to ship_id = 1028,shipping,"SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_id = 1028","CREATE TABLE `driver` (
  driver_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip_code INTEGER,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",152,6.533202409744263,250,"['driver', 'shipment']"
1507,Write down the summary of episode whereby it has crew members that are not included in the credit list. Hint: are not included in the credit list refers to credited = '',simpson_episodes,SELECT T1.summary FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T2.credited = 'false';,"CREATE TABLE `credit` (
  episode_id TEXT REFERENCES Episode(episode_id),
  category TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",160,6.535048723220825,250,"['credit', 'episode']"
1508,Please list the countries on the European Continent that have a population growth of more than 3%.,mondial_geo,SELECT T2.Country FROM country AS T1 INNER JOIN encompasses AS T2 ON T1.Code = T2.Country INNER JOIN continent AS T3 ON T3.Name = T2.Continent INNER JOIN population AS T4 ON T4.Country = T1.Code WHERE T3.Name = 'Europe' AND T4.Population_Growth > 0.03,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `continent` (
  Name TEXT PRIMARY KEY,
  Area REAL
);

CREATE TABLE `population` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population_Growth REAL,
  Infant_Mortality REAL
);

",266,6.7522358894348145,250,"['country', 'continent', 'population']"
1509,What is the event sponsored by the Republican House? Hint: sponsored by the Republican House refers to sponsor = 'REPUBLICAN HOUSE';,menu,SELECT event FROM Menu WHERE sponsor = 'REPUBLICAN HOUSE',"CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",144,6.523386716842651,250,['menu']
1510,What are the names of games that were released in 2007? Hint: names of games refers to game_name; released in 2007 refers to release_year = 2007;,video_games,SELECT T3.game_name FROM game_platform AS T1 INNER JOIN game_publisher AS T2 ON T1.game_publisher_id = T2.id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T1.release_year = 2007,"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

",174,6.554022312164307,250,['game']
1511,"In English speaking countries, provide the difference between the number of countries with republic and constitutional monarchy as its government form. Hint: English speaking refers to Language = 'English' ; difference = SUBTRACT(COUNT(Language = 'English' WHERE GovernmentForm = 'Republic'), COUNT(Language = 'English' WHERE GovernmentForm = 'ConstitutionalMonarchy'));",world,SELECT COUNT(T1.GovernmentForm = 'Republic') - COUNT(T1.GovernmentForm = 'ConstitutionalMonarchy') FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English',"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",189,6.572273254394531,250,"['countrylanguage', 'country']"
1512,List any five countries which use English as an official language. Hint: English as an official language refers to `Language` = 'English' AND IsOfficial = 'T';,world,SELECT T1.Name FROM Country AS T1 INNER JOIN CountryLanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = 'English' AND T2.IsOfficial = 'T' LIMIT 5,"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

",148,6.527390956878662,250,['countrylanguage']
1513,"What is the date of birth of the actor who played the role of a ""writer""? Hint: date of birth refers to birthdate",law_episode,SELECT T2.birthdate FROM Award AS T1 INNER JOIN Person AS T2 ON T1.person_id = T2.person_id WHERE T1.role = 'writer',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",145,6.522285223007202,250,"['credit', 'person']"
1514,"Among the players, what percentage are both captain and keeper? Hint: captain and keeper refers to Role_Desc = 'CaptainKeeper'; percentage = divide(count(Player_Id) when Role_Desc = 'CaptainKeeper', count(Player_Id)) as percentage",soccer_2016,SELECT CAST(SUM(CASE WHEN T2.Role_Desc = 'CaptainKeeper' THEN 1 ELSE 0 END) AS REAL) * 100 / TOTAL(T1.Player_Id) FROM Player_Match AS T1 INNER JOIN Rolee AS T2 ON T1.Role_Id = T2.Role_Id,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

",266,6.758472204208374,250,['player']
1515,"Find the winning rate of award in 2010. Describe the winner name, award name, episode title and role of the winner in that episode. Hint: in 2010 refers to year = 2010; winning rate refers to DIVIDE(COUNT(result = 'winner'), COUNT(*));",simpson_episodes,"SELECT T3.rate, T4.person, T4.award, T5.title, T4.role FROM ( SELECT CAST(SUM(CASE WHEN T1.result = 'Winner' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.result IN ('Winner', 'Nominee') THEN 1 ELSE 0 END) AS rate , T1.person, T1.award, T2.title, T1.role FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE SUBSTR(T1.year, 1, 4) = '2010' ) AS T3 INNER JOIN Award AS T4 INNER JOIN Episode AS T5 ON T4.episode_id = T5.episode_id WHERE T4.year = 2010 AND T4.result = 'Winner';","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",193,6.599182605743408,250,"['award', 'episode', 'vote']"
1516,How many domestic violence cases were reported in May 2018? Hint: domestic violence refers to domestic = 'TRUE'; in May 2018 refers to date LIKE '5/%/2018%',chicago_crime,SELECT COUNT(*) FROM Crime WHERE date LIKE '5/%/2018%' AND domestic = 'TRUE',"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

",179,6.557282209396362,250,['crime']
1517,Please list the products that are under the Clothing category that are manufactured in-house and salable. Hint: product is manufactured in-house refers to MakeFlag = 1; salable product refers to FinishedGoodsFlag = 1;,works_cycles,SELECT CASE WHEN T1.MakeFlag = 1 THEN T1.Name END FROM Product AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID INNER JOIN ProductCategory AS T3 ON T2.ProductCategoryID = T3.ProductCategoryID WHERE T2.ProductSubcategoryID = 3,"CREATE TABLE `productcategory` (
  ProductCategoryID INTEGER,
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productmodelproductdescriptionculture` (
  ProductModelID INTEGER PRIMARY KEY REFERENCES ProductModel(ProductModelID),
  ProductDescriptionID INTEGER PRIMARY KEY REFERENCES ProductDescription(ProductDescriptionID),
  CultureID TEXT PRIMARY KEY REFERENCES Culture(CultureID),
  ModifiedDate DATETIME
);

",473,7.250532388687134,250,"['productcategory', 'productmodelproductdescriptionculture']"
1518,"What is the total trip duration made within Palo Alto city? Convert the duration to hour. Hint: total trip duration to hour = DIVIDE(SUM(duration), 3600);",bike_share_1,SELECT CAST(SUM(T1.duration) AS REAL) / 3600 FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Palo Alto',"CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",151,6.528645992279053,250,"['trip', 'station']"
1519,What format does the method number 8's comment have? Hint: format refers CommentIsXml; method number refers to Method_100k.Id; Method_100k.Id = 8;,codebase_comments,SELECT CASE WHEN CommentIsXml = 0 THEN 'isNotXMLFormat' WHEN CommentIsXml = 1 THEN 'isXMLFormat' END format FROM Method WHERE Id = 8,"CREATE TABLE `Solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

",161,6.541813135147095,250,"['method', 'format']"
1520,"Please list the actor IDs whose movies have the newest published date. Hint: Year contains relative value, higher year value refers to newer date; Year = 4 refers to newest date",movielens,SELECT T1.actorid FROM movies2actors AS T1 INNER JOIN movies AS T2 ON T1.movieid = T2.movieid WHERE T2.year = 4,"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2actors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  actorid INTEGER PRIMARY KEY REFERENCES actors(None),
  cast_num INTEGER
);

",165,6.5449817180633545,250,"['movies', 'movies2actors']"
1521,Provide the country ID of Cyprus. Hint: Cyprus refers to country_name = 'Cyprus';,university,SELECT id FROM country WHERE country_name = 'Cyprus',"CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

",157,6.533001661300659,250,['country']
1522,What is the gender of the user who has posted the tweet that got the most likes? Hint: tweet got the most likes refers to Max(Likes),social_media,SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Likes DESC LIMIT 1,"CREATE TABLE `user` (
  UserID TEXT PRIMARY KEY,
  Gender TEXT
);

CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

",136,6.510596513748169,250,"['user', 'twitter']"
1523,"What was the total cost of Xerox 1952 ordered by Aimee Bixby on 2014/9/10? Hint: Xerox 1952 is a ""Product Name""; ordered by Aimee Bixby refers to ""Customer Name"" = 'Aimee Bixby'; on 2014/9/10 refers to ""Order Date"" = date('2014-09-10'); total cost refers to SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit)",superstore,SELECT DISTINCT (T2.Sales / (1 - T2.discount)) * T2.Quantity - Profit FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` INNER JOIN product AS T3 ON T3.`Product ID` = T2.`Product ID` WHERE T1.`Customer Name` = 'Aimee Bixby' AND T3.`Product Name` = 'Xerox 1952' AND T2.`Order Date` = '2014-09-10',"CREATE TABLE `product` (
  Product ID TEXT PRIMARY KEY,
  Product Name TEXT,
  Category TEXT,
  Sub-Category TEXT,
  Region TEXT PRIMARY KEY
);

CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

",267,6.755078554153442,250,"['product', 'central_superstore']"
1524,"Give the full name of the actor who acted the most in drama movies? Hint: full name refers to first_name, last_name; drama is a category of a film; acted the most in a movies refers to MAX(COUNT(film_id))",movie_3,"SELECT T.first_name, T.last_name FROM ( SELECT T1.first_name, T1.last_name, COUNT(T2.film_id) AS num FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film_category AS T3 ON T2.film_id = T3.film_id WHERE T3.category_id = 7 GROUP BY T1.first_name, T1.last_name ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

",218,6.636866331100464,250,"['actor', 'film_actor', 'category', 'film', 'film_category']"
1525,List the country and how many customers are there.,car_retails,"SELECT country, COUNT(customerNumber) FROM customers GROUP BY country","CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",134,6.5112035274505615,250,['customers']
1526,"How many votes of 5-star did the episode ""Lisa the Drama Queen"" receive? Hint: episode ""Lisa the Drama Queen"" refers to title = 'Lisa the Drama Queen';",simpson_episodes,SELECT SUM(T2.votes) FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T1.title = 'Lisa the Drama Queen' AND T2.stars = 5;,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",168,6.545675039291382,250,"['episode', 'vote']"
1527,"Calculate the average number of male users who posted tweets in a week. Hint: male user refers to Gender = 'Male'; average tweet in a week per user refers to Divide ( Divide(Count(TweetID), Count (UserID)), Divide(31, 7))",social_media,SELECT COUNT(DISTINCT T1.TweetID) / COUNT(DISTINCT T1.UserID) / 7 AS avg FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Day BETWEEN 1 AND 31,"CREATE TABLE `user` (
  UserID TEXT PRIMARY KEY,
  Gender TEXT
);

CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

",168,6.548317193984985,250,"['user', 'twitter']"
1528,"Among the vendors with an average credit rating, what is the overall total due amount of purchases made by the company to the vendor that isn't preferrerd if another vendor is available? Hint: average credit rating refers to CreditRating = 4;  vendor that isn't preferrerd if another vendor is available refers to PreferredVendorStatus = 0; SUM(TotalDue);",works_cycles,SELECT SUM(T2.TotalDue) FROM Vendor AS T1 INNER JOIN PurchaseOrderHeader AS T2 ON T1.BusinessEntityID = T2.VendorID WHERE T1.CreditRating = 4 AND T1.PreferredVendorStatus = 0,"CREATE TABLE `vendor` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  AccountNumber TEXT PRIMARY KEY,
  Name TEXT,
  CreditRating INTEGER,
  PreferredVendorStatus INTEGER,
  ActiveFlag INTEGER,
  PurchasingWebServiceURL TEXT,
  ModifiedDate DATETIME
);

CREATE TABLE `purchaseorderheader` (
  PurchaseOrderID INTEGER,
  RevisionNumber INTEGER,
  Status INTEGER,
  EmployeeID INTEGER REFERENCES Employee(BusinessEntityID),
  VendorID INTEGER REFERENCES Vendor(BusinessEntityID),
  ShipMethodID INTEGER REFERENCES ShipMethod(ShipMethodID),
  OrderDate DATETIME,
  ShipDate DATETIME,
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  ModifiedDate DATETIME
);

",504,7.324861764907837,250,"['vendor', 'purchaseorderheader']"
1529,Which country has the most number of suppliers whose account is in debt? Hint: country refers to n_name; the most number of suppliers whose account is in debt refers to MAX(SUM(s_acctbal < 0));,retails,"SELECT T.n_name FROM ( SELECT T2.n_name, SUM(T1.s_acctbal) AS num FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T1.s_acctbal < 0 GROUP BY T2.n_name ) AS T ORDER BY T.num LIMIT 1","CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",172,6.553911924362183,250,"['supplier', 'nation']"
1530,Give the number of research postgraduate students. Hint: RPG is an abbreviated name of research postgraduate student in which type = 'RPG';,cs_semester,SELECT COUNT(student_id) FROM student WHERE type = 'RPG',"CREATE TABLE `ra` (
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  capability INTEGER,
  prof_id INTEGER PRIMARY KEY REFERENCES prof(prof_id),
  salary TEXT
);

",144,6.521780252456665,250,['ra']
1531,List the movie titles with the voice actor Jeff Bennet Hint: Jeff Bennett refers to voice-actor = 'Jeff Bennett';,disney,SELECT movie FROM `voice-actors` WHERE 'voice-actor' = 'Jeff Bennett',"CREATE TABLE `voice-actors` (
  character TEXT PRIMARY KEY,
  voice-actor TEXT,
  movie TEXT REFERENCES characters(movie_title)
);

",150,6.5309669971466064,250,['voice-actors']
1532,Give the name of the airline to which tail number N202NN belongs to. Hint: name of the airline refers to Description; tail number refers to TAIL_NUM; TAIL_NUM = 'N202NN';,airline,SELECT T2.Description FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.TAIL_NUM = 'N202NN' GROUP BY T2.Description,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",161,6.547896385192871,250,['airlines']
1533,What award did the character Homer simpson 20 achieve in 2009? Hint: in 2009 refers to year = 2009,simpson_episodes,SELECT DISTINCT T1.award FROM Award AS T1 INNER JOIN Character_Award AS T2 ON T1.award_id = T2.award_id WHERE T1.year = 2009 AND T2.character = 'Homer Simpson';,"CREATE TABLE `Character_award` (
  award_id INTEGER REFERENCES Award(award_id),
  character TEXT
);

CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

",160,6.539419651031494,250,"['Character_award', 'award']"
1534,"How many users who have joined Yelp since ""2005"" but have no fans? Hint: joined Yelp since 2005 refers to user_yelping_since_year = 2005; no fans refers to user_fans = 'None';",public_review_platform,SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year = 2005 AND user_fans LIKE 'None',"CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",223,6.638833284378052,250,['users']
1535,"For the business whose business certificate number is 304977, how many violations did it have on 2013/10/7? Hint: date = '2013-10-07';",food_inspection,SELECT COUNT(T1.business_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.business_certificate = '304977' AND T1.`date` = '2013-10-07',"CREATE TABLE `violations` (
  business_id INTEGER REFERENCES businesses(business_id),
  date DATE,
  violation_type_id TEXT,
  risk_category TEXT,
  description TEXT
);

CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

",160,6.537403106689453,250,"['violations', 'businesses']"
1536,"Which language is 'El plan infinito' written in? Hint: ""El plan infinito"" is the title of the book; language refers to language_name",books,SELECT T2.language_name FROM book AS T1 INNER JOIN book_language AS T2 ON T1.language_id = T2.language_id WHERE T1.title = 'El plan infinito',"CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `book_language` (
  language_id INTEGER,
  language_code TEXT,
  language_name TEXT
);

",202,6.609402656555176,250,"['book', 'book_language']"
1537,List by ID the businesses with the reviews with the lowest veracity of Paradise Valley. Hint: ID of businesses refers to business_id; reviews with the lowest veracity refers to review_count = 'Low' AND stars > 3; Paradise Valley is a city,public_review_platform,SELECT business_id FROM Business WHERE stars > 3 AND city = 'Paradise Valley' AND review_count = 'Low',"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",216,6.628301382064819,250,"['reviews', 'business']"
1538,"How many Vista cards expired before the year 2007? Hint: Vista Card refers to CardType = 'Vista'; expire before the year 2007 refers to ExpYear< = 2006;

",works_cycles,SELECT COUNT(CreditCardID) FROM CreditCard WHERE CardType = 'Vista' AND ExpYear < 2007,"CREATE TABLE `creditCard` (
  CreditCardID INTEGER,
  CardType TEXT,
  CardNumber TEXT PRIMARY KEY,
  ExpMonth INTEGER,
  ExpYear INTEGER,
  ModifiedDate DATETIME
);

",475,7.256558179855347,250,['creditCard']
1539,Calculate the total number of orders placed by the company 'GROSELLA-Restaurante'. Hint: 'GROSELLA-Restaurante' refers to CompanyName;,retail_world,SELECT COUNT(T2.OrderID) FROM Customers AS T1 INNER JOIN Orders AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.CompanyName = 'GROSELLA-Restaurante',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",178,6.557444334030151,250,"['orders', 'customers']"
1540,What is the name of the home team in division P1 with the highest final time goal in all seasons? Hint: the highest final time goal refers to MAX(FTHG); P1 = Div;,european_football_1,SELECT HomeTeam FROM matchs WHERE Div = 'P1' AND season = 2021 ORDER BY FTHG DESC LIMIT 1,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",145,6.522592782974243,250,"['matchs', 'divisions']"
1541,Please list three types of film along with their IDs and the latest update. Hint: types of film refers to the name of a category; IDs refers to category_id; latest update refers to last_update.,movie_3,"SELECT DISTINCT name, category_id, last_update FROM category LIMIT 3","CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",209,6.625271797180176,250,['category']
1542,"Calculate the average number of images with an attribute class of ""keyboard"". Hint: AVG(IMG_ID) where OBJ_CLASS = 'keyboard';",image_and_language,SELECT AVG(T1.IMG_ID) FROM IMG_OBJ AS T1 INNER JOIN OBJ_CLASSES AS T2 ON T1.OBJ_CLASS_ID = T2.OBJ_CLASS_ID WHERE T2.OBJ_CLASS = 'keyboard',"CREATE TABLE `img_obj` (
  IMG_ID INTEGER PRIMARY KEY,
  OBJ_SAMPLE_ID INTEGER PRIMARY KEY,
  OBJ_CLASS_ID INTEGER REFERENCES OBJ_CLASSES(OBJ_CLASS_ID),
  X INTEGER,
  Y INTEGER,
  W INTEGER,
  H INTEGER
);

CREATE TABLE `obj_classES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",183,6.571033239364624,250,"['img_obj', 'obj_classES']"
1543,Please list the name and phone number of the customer whose order was cancelled. Hint: cancelled order refers to status = 'Cancelled';,car_retails,"SELECT T2.customerName, T2.phone FROM orders AS T1 INNER JOIN customers AS T2 ON T1.customerNumber = T2.customerNumber WHERE T1.status = 'Cancelled'","CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",155,6.535147190093994,250,"['orders', 'customers']"
1544,Which brand of root beer was highly rated by customers? Hint: brand of root beer refers to BrandName; highly rated refers to MAX(COUNT(StarRating = 5));,beer_factory,SELECT T1.BrandName FROM rootbeerbrand AS T1 INNER JOIN rootbeerreview AS T2 ON T1.BrandID = T2.BrandID WHERE T2.StarRating = 5,"CREATE TABLE `rootbeerreview` (
  CustomerID INTEGER PRIMARY KEY REFERENCES customers(CustomerID),
  BrandID INTEGER PRIMARY KEY REFERENCES rootbeerbrand(BrandID),
  StarRating INTEGER,
  ReviewDate DATE,
  Review TEXT
);

CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",163,6.544373989105225,250,"['rootbeerreview', 'rootbeerbrand']"
1545,What films did Burt Dukakis got star in? Hint: film refers to title,movie_3,SELECT T3.title FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T1.film_id = T3.film_id WHERE T2.first_name = 'BURT' AND T2.last_name = 'DUKAKIS',"CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

",183,6.566706418991089,250,"['film_actor', 'actor']"
1546,What is the maximum and minimum temperature for station number 1 on 15 January 2012? Hint: station number 1 refers to station_nbr = 1 ; minimum temperature = tmin; maximum temperature = tmax; on 15 January 2012 refers to date = '2012-01-15',sales_in_weather,"SELECT tmax, tmin FROM weather WHERE station_nbr = 1 AND `date` = '2012-01-15'","CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

",185,6.570115804672241,250,['weather']
1547,"List all the average reviews of Chinese restaurants for each county from highest to lowest. Hint: Chinese restaurant refers to food_type = 'chinese'; average review refers to divide(sum(review), count(review))",restaurant,SELECT AVG(T1.review) FROM generalinfo AS T1 INNER JOIN geographic AS T2 ON T1.city = T2.city WHERE T1.food_type = 'chinese' GROUP BY T1.id_restaurant ORDER BY AVG(T1.review) DESC,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",150,6.528498888015747,250,"['location', 'generalinfo']"
1548,"Calculate the percentage of left hand batting style players among all players. Hint: left hand batting style players refers to Batting_hand = 'Left-hand bat'; percentage refers to DIVIDE(COUNT(Batting_hand = 'Left-hand bat'), COUNT(Player_Id)) * 100.0",soccer_2016,SELECT CAST(SUM(CASE WHEN T2.Batting_hand = 'Left-hand bat' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.Player_Id) FROM Player AS T1 INNER JOIN Batting_Style AS T2 ON T1.Batting_hand = T2.Batting_Id,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

",272,6.76667857170105,250,['player']
1549,"List the full name of customers who spend more than 50,000 in descending order the amount spend. Hint: full name of the customer = FirstName, MiddleInitial, LastName; more than 50,000 in the amount refers to MULTIPLY(Quantity, Price) > 50000;",sales,"SELECT DISTINCT T3.FirstName, T3.MiddleInitial, T3.LastName FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID INNER JOIN Customers AS T3 ON T2.CustomerID = T3.CustomerID WHERE T2.Quantity * T1.Price > 50000","CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",185,6.570910930633545,250,"['sales', 'customers']"
1550,"How many acts can be found in the comedy ""Two Gentlemen of Verona""? Hint: comedy refers to GenreType = 'comedy'; ""Two Gentlemen of Verona"" refers to Title = 'Two Gentlemen of Verona'",shakespeare,SELECT COUNT(T1.ACT) FROM chapters AS T1 LEFT JOIN works AS T2 ON T1.work_id = T2.id WHERE T2.GenreType = 'Comedy' AND T2.Title = 'Two Gentlemen of Verona',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

",167,6.542506694793701,250,['works']
1551,What is the category of the film Agent Truman? Hint: 'Agent Truman' is a title of a film; category refers to name,movie_3,SELECT T3.name FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T1.title = 'AGENT TRUMAN',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",193,6.597476482391357,250,"['actor', 'film_category', 'category']"
1552,"What is the title of the latest released movie produced by production company ""Universal Pictures""? Hint: ""Universal Pictures"" refers to company_name = 'Universal Pictures'; latest released refers to max(release_date)",movies_4,SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Universal Pictures' ORDER BY T3.release_date DESC LIMIT 1,"CREATE TABLE `movie_company` (
  movie_id INTEGER REFERENCES movie(None),
  company_id INTEGER REFERENCES production_company(None)
);

CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

",228,6.650793790817261,250,"['movie_company', 'movie']"
1553,"For the repository with '8094' watchers , how many solutions does it contain? Hint: repository refers to Repo.Id and RepoId; solutions a repository contains refers to Solution.Id;",codebase_comments,SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Watchers = 8094,"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `repo` (
  Id INTEGER,
  Url TEXT,
  Stars INTEGER,
  Forks INTEGER,
  Watchers INTEGER,
  ProcessedTime INTEGER
);

",161,6.536773443222046,250,"['solution', 'repo']"
1554,List the names of the games held in Paris. Hint: Paris refers to city_name = 'Paris'; names of games refers to games_name;,olympics,SELECT T3.games_name FROM games_city AS T1 INNER JOIN city AS T2 ON T1.city_id = T2.id INNER JOIN games AS T3 ON T1.games_id = T3.id WHERE T2.city_name = 'Paris',"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",180,6.559807538986206,250,"['games_city', 'city']"
1555,"Compute the total order quantity for Uncle Bob's Organic Dried Pears so far. Hint: ""Uncle Bob's Organic Dried Pears"" is the ProductName; total order quantity refers to Sum(Quantity)",retail_world,SELECT SUM(T2.Quantity) FROM Products AS T1 INNER JOIN `Order Details` AS T2 ON T1.ProductID = T2.ProductID WHERE T1.ProductName LIKE 'Uncle Bob%s Organic Dried Pears',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",186,6.565276384353638,250,"['products', 'suppliers']"
1556,What is the average age of the survey respondents in the United States? Hint: Average age refer to AVG(AnswerText) where questionid = 1; respondents in the United States refers to AnswerText = 'United States' where questionid = 3,mental_health_survey,SELECT CAST(SUM(T1.AnswerText) AS REAL) / COUNT(T1.UserID) FROM Answer AS T1 INNER JOIN ( SELECT T1.UserID FROM Answer AS T1 INNER JOIN Question AS T2 ON T1.QuestionID = T2.questionid WHERE T2.questionid = 3 AND T1.AnswerText = 'United States' ) AS T2 ON T1.UserID = T2.UserID INNER JOIN Question AS T3 ON T1.QuestionID = T3.questionid WHERE T3.questionid = 1,"CREATE TABLE `answer` (
  AnswerText TEXT,
  SurveyID INTEGER REFERENCES Survey(None),
  UserID INTEGER PRIMARY KEY,
  QuestionID INTEGER PRIMARY KEY REFERENCES Question(None)
);

",162,6.541425704956055,250,['answer']
1557,"Among observations in 2011, provide the names and ages of patients whose Systolic Blood Pressures are 200mmHg. Hint: name implies the patient's full name which refers to first, last; age refers to deathdate is null then SUBTRACT(strftime('%Y', DATE), strftime('%Y', birthdate)); Systolic Blood Pressures are 200mmHg refers to DESCRIPTION = 'Systolic Blood Pressure' and VALUE = 200 and UNITS = 'mmHg' from observations; in 2011 refers to DATE like '2011%';",synthea,"SELECT T2.first, T2.last , CASE WHEN T2.deathdate IS NULL THEN strftime('%Y', T1.DATE) - strftime('%Y', T2.birthdate) ELSE strftime('%Y', T2.deathdate) - strftime('%Y', T2.birthdate) END AS age FROM observations AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient WHERE T1.DESCRIPTION = 'Systolic Blood Pressure' AND T1.VALUE = 200 AND T1.UNITS = 'mmHg' AND strftime('%Y', T1.DATE) = '2011'","CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

CREATE TABLE `observations` (
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE TEXT,
  DESCRIPTION TEXT,
  VALUE REAL,
  UNITS TEXT
);

",295,6.814517259597778,250,"['patients', 'observations']"
1558,"What is the percentage of Primetime Emmy nominated episodes with a rating over 7 to all the episodes that have a rating over 7? Hint: ""Primetime Emmy' is the award_category;  rating over 7 refers to rating > 7; nominated refers to result = 'Nominee'; percentage = Divide(Count(episode_id(award_category = 'Primetime Emmy')), Count (episode_id)) * 100",simpson_episodes,SELECT CAST(SUM(CASE WHEN T1.award_category = 'Primetime Emmy' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T2.rating > 7 AND T1.result = 'Nominee';,"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",227,6.659598112106323,250,"['award', 'episode']"
1559,How many suppliers does Northwind have in USA? Hint: 'USA' is a country; supplier refers to CompanyName,retail_world,SELECT COUNT(SupplierID) FROM Suppliers WHERE Country = 'USA',"CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",161,6.538445472717285,250,['suppliers']
1560,How many characters are there in Titus Andronicus? Hint: Titus Andronicus refers to Title = 'Titus Andronicus',shakespeare,SELECT COUNT(DISTINCT T3.character_id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id WHERE T1.Title = 'Titus Andronicus',"CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

",148,6.528934717178345,250,['characters']
1561,Please provide sales ID for products named Hex Nut with a price greater than 100. Hint: price greater than 100 refers to price > 100;,sales,SELECT T2.SalesID FROM Products AS T1 INNER JOIN Sales AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name LIKE 'Hex Nut%' AND T1.Price > 100,"CREATE TABLE `products` (
  ProductID INTEGER,
  Name TEXT,
  Price REAL
);

CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",149,6.530672550201416,250,"['products', 'sales']"
1562,"Who are the actors starred in the film ""Bound Cheaper""? Hint: actor refers to first_name, last_name; film ""Bound Cheaper"" refers to title = 'BOUND CHEAPER'",movie_3,"SELECT T1.first_name, T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'BOUND CHEAPER'","CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

",209,6.628546714782715,250,"['film_text', 'actor']"
1563,Who is the heaviest player? State player ID of 5 heaviest players. Hint: 5 heaviest players refer to MAX(weight) limit to 5 playerID;,hockey,SELECT playerID FROM Master ORDER BY weight DESC LIMIT 5,"CREATE TABLE `scoring` (
  playerID TEXT REFERENCES Master(playerID),
  year INTEGER REFERENCES Teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  pos TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  Pts INTEGER,
  PIM INTEGER,
  +/- TEXT,
  PPG TEXT,
  PPA TEXT,
  SHG TEXT,
  SHA TEXT,
  GWG TEXT,
  GTG TEXT,
  SOG TEXT,
  PostGP TEXT,
  PostG TEXT,
  PostA TEXT,
  PostPts TEXT,
  PostPIM TEXT,
  Post+/- TEXT,
  PostPPG TEXT,
  PostPPA TEXT,
  PostSHG TEXT,
  PostSHA TEXT,
  PostGWG TEXT,
  PostSOG TEXT
);

CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

",250,6.697374105453491,250,"['scoring', 'goalies']"
1564,"From 1980 to 2000, which artist had the most disco releases? Hint: From 1980 to 2000 refers to groupYear between 1980 and 2000; tag = 'disco'; the most releases refer to MAX(COUNT(id));",music_tracker,SELECT T1.artist FROM torrents AS T1 INNER JOIN tags AS T2 ON T1.id = T2.id WHERE T1.groupYear BETWEEN 1980 AND 2000 AND T2.tag LIKE 'disco' GROUP BY T1.artist ORDER BY COUNT(T2.tag) DESC LIMIT 1,"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

CREATE TABLE `tags` (
  index INTEGER PRIMARY KEY,
  id INTEGER REFERENCES torrents(None),
  tag TEXT
);

",173,6.554414987564087,250,"['torrents', 'tags']"
1565,"Provide at least 5 social security numbers of patients with a prevalent disease with a prevalence percentage lower than 30% of the average prevalence percentage of conditions. Hint: social security number refers to ssn; prevalence percentage lower than 30% of the average prevalence percentage of conditions refers to PREVALENCE PERCENTAGE < MULTIPLY(0.3, AVG(PREVALENCE PERCENTAGE));",synthea,"SELECT DISTINCT T2.ssn FROM conditions AS T1 INNER JOIN patients AS T2 ON T1.PATIENT = T2.patient INNER JOIN all_prevalences AS T3 ON lower(T1.DESCRIPTION) = lower(T3.ITEM) WHERE CAST(T3.""PREVALENCE PERCENTAGE"" AS REAL) * 100 / ( SELECT AVG('PREVALENCE PERCENTAGE') FROM all_prevalences ) < 30 LIMIT 5","CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

",244,6.6803505420684814,250,['patients']
1566,What is the genre of the movie whose villain is Commander Rourke? Hint: FALSE;,disney,SELECT T2.genre FROM characters AS T1 INNER JOIN movies_total_gross AS T2 ON T2.movie_title = T1.movie_title WHERE T1.villian = 'Commander Rourke',"CREATE TABLE `characters` (
  movie_title TEXT PRIMARY KEY,
  release_date TEXT,
  hero TEXT REFERENCES voice-actors(character),
  villian TEXT,
  song TEXT
);

CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

",143,6.521257162094116,250,"['characters', 'movies_total_gross']"
1567,"Show the full Comment of the method ""DE2_UE_Fahrradkurier.de2_uebung_fahrradkurierDataSet1TableAdapters.TableAdapterManager.UpdateInsertedRows"".",codebase_comments,SELECT FullComment FROM Method WHERE Name = 'DE2_UE_Fahrradkurier.de2_uebung_fahrradkurierDataSet1TableAdapters.TableAdapterManager.UpdateInsertedRows',"CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `methodparameter` (
  Id INTEGER,
  MethodId TEXT,
  Type TEXT,
  Name TEXT
);

",167,6.5461506843566895,250,"['method', 'solution', 'methodparameter']"
1568,"Have the teacher ""42d43fa6f37314365d08692e08680973"" acquired P.h.D or doctor degree? Hint: teacher ""42d43fa6f37314365d08692e08680973"" refers to teacher_acctid = '42d43fa6f37314365d08692e08680973';",donor,SELECT CASE WHEN teacher_prefix = 'Dr.' THEN 'Yes' ELSE 'NO' END FROM projects WHERE teacher_acctid = '42d43fa6f37314365d08692e08680973',"CREATE TABLE `resources` (
  resourceid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  vendorid INTEGER,
  vendor_name TEXT,
  project_resource_type TEXT,
  item_name TEXT,
  item_number TEXT,
  item_unit_price REAL,
  item_quantity INTEGER
);

",239,6.6730263233184814,250,['teachers']
1569,What is the title of the first book that was published in 1900? Hint: published in 1900 refers to publication_date LIKE '1900%'; first book refers to Min(publication_date),books,"SELECT title FROM book WHERE STRFTIME('%Y', publication_date) = '1900' ORDER BY publication_date LIMIT 1","CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

",219,6.633328676223755,250,['book']
1570,How much is the popularity of the movie that has the highest popularity between 1920 to 1929 and when did the movie received its first rating score of 1 from the users who were a paying subscriber when they rated the movie ? Hint: movie with highest popularity refers to MAX(movie_popularity); movie_release_year BETWEEN 1920 AND 1929; when the movie received its first rating score of 1 refers to oldest date in rating_timestamp_utc where rating score = 1; user was a paying subscriber when they rated the movie refers to user_has_payment_method = 1;,movie_platform,"SELECT MAX(T2.movie_popularity), MIN(T1.rating_timestamp_utc) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year BETWEEN 1920 AND 1929 AND T1.rating_score = 1 AND T1.user_has_payment_method = 1","CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

CREATE TABLE `ratings_users` (
  user_id INTEGER REFERENCES lists_users(user_id),
  rating_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",260,6.7370383739471436,250,"['movies', 'ratings', 'lists_users', 'ratings_users']"
1571,Provide a list of all organisations with headquarters in London? Hint: London is a city,mondial_geo,SELECT Name FROM organization WHERE City = 'London',"CREATE TABLE `organization` (
  Abbreviation TEXT PRIMARY KEY,
  Name TEXT PRIMARY KEY,
  City TEXT REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Established DATE
);

CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

",265,6.751167058944702,250,"['organization', 'city']"
1572,How many trips which start station and end station are the same? Hint: start station refers to start_station_id; end station refers to end_station_id; start station and end station are the same refers to start_station_id = end_station_id;,bike_share_1,"SELECT SUM(IIF(start_station_id = end_station_id, 1, 0)) FROM trip","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

",165,6.542566537857056,250,['trip']
1573,"How many days delay for the complaint call from Mr. Brantley Julian Stanley on 2012/5/18? Hint: days delay for the complaint = SUBTRACT(""date sent to company"", ""Date received""); Mr refers to sex = 'Male'; on 2012/5/18 refers to ""Date received"" = '2012-05-18';",retail_complains,"SELECT 365 * (strftime('%Y', T2.`Date sent to company`) - strftime('%Y', T2.`Date received`)) + 30 * (strftime('%M', T2.`Date sent to company`) - strftime('%M', T2.`Date received`)) + (strftime('%d', T2.`Date sent to company`) - strftime('%d', T2.`Date received`)) AS days FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Date received` = '2012-05-18' AND T1.sex = 'Male' AND T1.first = 'Brantley' AND T1.middle = 'Julian' AND T1.last = 'Stanley'","CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",208,6.616091251373291,250,"['events', 'client']"
1574,"What is the description of Act 1, Scene 2 in Twelfth Night? Hint: Twelfth Night refers to Title = 'Twelfth Night'",shakespeare,SELECT T2.Description FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Twelfth Night' AND T2.Act = 1 AND T2.Scene = 2,"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",152,6.529047966003418,250,"['works', 'chapters']"
1575,"For how long was the complaint filed by Matthew Pierce on 2016/10/28 delayed? Hint: on 2016/10/28 refers to ""Date received"" = '2016-10-28'; delayed = SUBTRACT(""Date sent to company', 'Date received"");",retail_complains,"SELECT 365 * (strftime('%Y', T2.`Date sent to company`) - strftime('%Y', T2.`Date received`)) + 30 * (strftime('%M', T2.`Date sent to company`) - strftime('%M', T2.`Date received`)) + (strftime('%d', T2.`Date sent to company`) - strftime('%d', T2.`Date received`)) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Matthew' AND T1.last = 'Pierce' AND T2.`Date received` = '2016-10-28'","CREATE TABLE `events` (
  Date received DATE,
  Product TEXT,
  Sub-product TEXT,
  Issue TEXT,
  Sub-issue TEXT,
  Consumer complaint narrative TEXT,
  Tags TEXT,
  Consumer consent provided? TEXT,
  Submitted via TEXT,
  Date sent to company TEXT,
  Company response to consumer TEXT,
  Timely response? TEXT,
  Consumer disputed? TEXT,
  Complaint ID TEXT PRIMARY KEY REFERENCES callcenterlogs(Complaint ID),
  Client_ID TEXT PRIMARY KEY REFERENCES client(client_id)
);

CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",192,6.574649095535278,250,"['events', 'client']"
1576,"Among the flights on 2018/8/1, how many of them were scheduled to depart from John F. Kennedy International in New York? Hint: on 2018/8/1 refers to FL_DATE = '2018/8/1'; depart from refers to ORIGIN; John F. Kennedy International in New York refers to Description = 'New York, NY: John F. Kennedy International';",airline,"SELECT COUNT(T1.Code) FROM Airports AS T1 INNER JOIN Airlines AS T2 ON T1.Code = T2.ORIGIN WHERE T2.FL_DATE = '2018/8/1' AND T1.Description = 'New York, NY: John F. Kennedy International'","CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",200,6.607083559036255,250,"['airlines', 'air carriers']"
1577,"What is the average number of likes for a tweet posted by a male user on Mondays? Hint: male user refers to Gender = 'Male'; 'Monday' is the Weekday; average number of likes = Divide (Sum(Likes), Count(TweetID))",social_media,SELECT SUM(T1.Likes) / COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Weekday = 'Monday',"CREATE TABLE `user` (
  UserID TEXT PRIMARY KEY,
  Gender TEXT
);

CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

",165,6.542459011077881,250,"['user', 'twitter']"
1578,Which trip id had the longest duration and the start station is in Redwood City? Hint: longest duration refers to MAX(duration); start station refers to start_station_name;,bike_share_1,SELECT T1.id FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Redwood City' AND T1.duration = ( SELECT MAX(T1.duration) FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name WHERE T2.city = 'Redwood City' ),"CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

",145,6.520254850387573,250,['trip']
1579,How many employees in total are in charge of the sales in the Eastern Region? Hint: Eastern Region refers to RegionDescription = 'Eastern';,retail_world,SELECT COUNT(T.EmployeeID) FROM ( SELECT T3.EmployeeID FROM Region AS T1 INNER JOIN Territories AS T2 ON T1.RegionID = T2.RegionID INNER JOIN EmployeeTerritories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.RegionDescription = 'Eastern' GROUP BY T3.EmployeeID ) T,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",165,6.54305100440979,250,['employees']
1580,What is the publisher's information of New Moon Books? Hint: publisher name refers to pub_name; New Moon Books is a publisher name,book_publishing_company,SELECT T1.pr_info FROM pub_info AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T2.pub_name = 'New Moon Books',"CREATE TABLE `publishers` (
  pub_id TEXT PRIMARY KEY,
  pub_name TEXT,
  city TEXT,
  state TEXT,
  country TEXT
);

",170,6.5510499477386475,250,['publishers']
1581,List the film with the highest budget in each genre. Hint: highest budget refers to max(budget); each genre refers to genre_name; film also means movie; list the film refers to title of movie,movies_4,"SELECT T3.genre_name, MAX(T1.budget) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id GROUP BY T3.genre_name","CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

",222,6.638505458831787,250,"['movie', 'movie_genres', 'genre']"
1582,"What is the ratio between male and female cast members of the movie 'Iron Man?' Count how many have unspecified genders. Hint: male refers to gender = 'Male'; female refers to gender = 'Female'; movie 'Iron Man' refers to title = 'Iron Man'; ratio = divide(sum(gender = 'Female'), sum(gender = 'Male'))",movies_4,"SELECT CAST(COUNT(CASE WHEN T3.gender = 'Male' THEN 1 ELSE NULL END) AS REAL) / COUNT(CASE WHEN T3.gender = 'Female' THEN 1 ELSE NULL END) AS RATIO , COUNT(CASE WHEN T3.gender = 'Unspecified' THEN 1 ELSE NULL END) AS UNGENDERS FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN gender AS T3 ON T2.gender_id = T3.gender_id WHERE T1.title = 'Iron Man'","CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

CREATE TABLE `gender` (
  gender_id INTEGER,
  gender TEXT
);

CREATE TABLE `movie_cast` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  character_name TEXT,
  gender_id INTEGER REFERENCES gender(gender_id),
  cast_order INTEGER
);

",264,6.747588634490967,250,"['person', 'gender', 'movie_cast']"
1583,"For the Ligue 2 game that made the most goals, who is the winner of that game? Hint: Ligue 2 is the name of division; the most goals refer to MAX(SUM(FTHG, FTAG)) which are short names for Final-time Home-team Goals and Final-time Away-team Goals; winner refers to FTR = 'A';",european_football_1,SELECT CASE WHEN T1.FTR = 'H' THEN T1.HomeTeam ELSE T1.AwayTeam END WINNER FROM matchs AS T1 INNER JOIN divisions AS T2 ON T1.Div = T2.division WHERE T2.name = 'Ligue 2' ORDER BY T1.FTAG + T1.FTHG DESC LIMIT 1,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

CREATE TABLE `divisions` (
  division TEXT PRIMARY KEY,
  name TEXT,
  country TEXT
);

",186,6.565723657608032,250,"['matchs', 'divisions']"
1584,Please list any three OPPO device models. Hint: OPPO refers to phone_brand = 'OPPO';,talkingdata,SELECT device_model FROM phone_brand_device_model2 WHERE phone_brand = 'OPPO' LIMIT 3,"CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",194,6.594714164733887,250,['phone_brand_device_model2']
1585,What is the email address of the customer who made a purchase in transaction 100016? Hint: email address refers to Email; transaction 100016 refers to TransactionID = 100016;,beer_factory,SELECT T1.Email FROM customers AS T1 INNER JOIN `transaction` AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.TransactionID = '100016',"CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

CREATE TABLE `customers` (
  CustomerID INTEGER,
  First TEXT,
  Last TEXT,
  StreetAddress TEXT,
  City TEXT,
  State TEXT,
  ZipCode INTEGER,
  Email TEXT,
  PhoneNumber TEXT,
  FirstPurchaseDate DATE,
  SubscribedToEmailList TEXT,
  Gender TEXT
);

",178,6.5569748878479,250,"['transaction', 'customers']"
1586,How many shipments were delivered by the oldest truck model? Hint: oldest truck model refers to Min(model_year),shipping,SELECT COUNT(*) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id GROUP BY T1.model_year ORDER BY T1.model_year ASC LIMIT 1,"CREATE TABLE `truck` (
  truck_id INTEGER,
  make TEXT,
  model_year INTEGER
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",137,6.51371431350708,250,"['truck', 'shipment']"
1587,List the person IDs of the second film editors in Movie No. 12. Hint: second film editors refers to job = 'Second Film Editor'; Movie No. 12 refers to movie_id = 12,movies_4,SELECT person_id FROM movie_crew WHERE movie_id = 12 AND job = 'Second Film Editor',"CREATE TABLE `movie_crew` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  department_id INTEGER REFERENCES department(department_id),
  job TEXT
);

",225,6.642599105834961,250,['movie_crew']
1588,What is the average percentage of agriculture of GDP in countries on the African Continent?,mondial_geo,SELECT AVG(T4.Agriculture) FROM continent AS T1 INNER JOIN encompasses AS T2 ON T1.Name = T2.Continent INNER JOIN country AS T3 ON T3.Code = T2.Country INNER JOIN economy AS T4 ON T4.Country = T3.Code WHERE T1.Name = 'Africa',"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `continent` (
  Name TEXT PRIMARY KEY,
  Area REAL
);

",264,6.753085374832153,250,"['country', 'continent']"
1589,State the number of users who are under 50 and above 20 use device model of Galaxy Premier. Hint: under 50 and above 20 refers to age BTWEEEN 20 AND 50;,talkingdata,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T1.age BETWEEN 20 AND 50 AND T2.device_model = 'Galaxy Premier',"CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",220,6.638261318206787,250,"['gender_age', 'phone_brand_device_model2']"
1590,"Indicate if there is any pair formed by the words fukunaga and d'egees. Hint: Pair is a relationship of two words: w1st and w2nd, where w1st is word id of the first word and w2nd is a word id of the second word;  w1st = word = 'fukunaga' or w2nd = word = 'fukunaga'; w1st = word = 'd'egees'or w2nd = word = 'd'egees';",language_corpus,SELECT CASE WHEN COUNT(T1.wid) > 0 THEN 'yes' ELSE 'no' END FROM words AS T1 INNER JOIN biwords AS T2 ON T1.wid = T2.w1st OR T1.wid = T2.w2nd WHERE T2.w1st = ( SELECT wid FROM words WHERE T1.word = 'fukunaga' ) AND T2.w2nd = ( SELECT wid FROM words WHERE word LIKE 'd%egees' ),"CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

",244,6.685116767883301,250,['words']
1591,How many games were released in 1981? Hint: released in 1981 refers to release_year = 1981,video_games,SELECT COUNT(T.id) FROM game_platform AS T WHERE T.release_year = 1981,"CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

",160,6.548813343048096,250,['game_publisher']
1592,What is the name and category of the app with the highest amount of -1 sentiment polarity score? Hint: highest amount of -1 sentiment polarity score refers to MAX(Count(Sentiment_Polarity = 1.0)),app_store,"SELECT DISTINCT T1.App, T1.Category FROM playstore AS T1 INNER JOIN user_reviews AS T2 ON T1.App = T2.App WHERE T2.Sentiment_Polarity = '-1.0'","CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

CREATE TABLE `user_reviews` (
  App TEXT REFERENCES playstore(App),
  Translated_Review TEXT,
  Sentiment TEXT,
  Sentiment_Polarity TEXT,
  Sentiment_Subjectivity TEXT
);

",153,6.535505533218384,250,"['playstore', 'user_reviews']"
1593,How many CDP stores are there in California? Hint: California is a state; CDP stores refer to StoreID where Type = 'CDP';,regional_sales,SELECT SUM(CASE WHEN State = 'California' AND Type = 'CDP' THEN 1 ELSE 0 END) FROM `Store Locations`,"CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

",154,6.539716482162476,250,['store locations']
1594,What are the most recent three independent nations? Hint: Larger date of indepedence refers to more recent indepdence; Nation refers to country,mondial_geo,SELECT T1.Name FROM country AS T1 INNER JOIN politics AS T2 ON T1.Code = T2.Country ORDER BY T2.Independence DESC LIMIT 3,"CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",278,6.771823883056641,250,['country']
1595,"Among the sales with a tax applied to retail transaction, how many of them are charged by multiple types of taxes? Hint: tax applied to retail transaction refers to Taxtype = 1; sales that are charged with multiple types of tax refers to NAME LIKE '%+%';",works_cycles,SELECT COUNT(SalesTaxRateID) FROM SalesTaxRate WHERE Name LIKE '%+%',"CREATE TABLE `salesTaxRate` (
  SalesTaxRateID INTEGER,
  StateProvinceID INTEGER PRIMARY KEY REFERENCES StateProvince(StateProvinceID),
  TaxType INTEGER PRIMARY KEY,
  TaxRate REAL,
  Name TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",480,7.273167133331299,250,"['salesTaxRate', 'salesorderheader']"
1596,"Which team wins the toss during the match ID 336011, and can you tell me whether they decided to bat or field? Hint: wins the toss refers to Toss_Winner; whether they decided to bat or field refers to Toss_Name",soccer_2016,"SELECT T2.Toss_Name, T1.Toss_Decide, T1.Toss_Winner FROM `Match` AS T1 INNER JOIN Toss_Decision AS T2 ON T1.Toss_Decide = T2.Toss_Id WHERE T1.Match_Id = '336011'","CREATE TABLE `toss_decision` (
  Toss_Id INTEGER,
  Toss_Name TEXT
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",258,6.736576557159424,250,"['toss_decision', 'team']"
1597,What is the average monthly circulating supply for Frozen in 2014. Hint: average monthly circulating supply = AVG(circulating_supply); in 2017 refers to date BETWEEN '2017-01-01' AND '2017-12-31',coinmarketcap,"SELECT CAST(SUM(T2.circulating_supply) AS REAL) / 12 FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T1.name = 'Frozen' AND STRFTIME('%Y', T2.date) = '2014'","CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",176,6.556315183639526,250,['coins']
1598,Through which companies have products been shipped the most times to the city of Aachen? Hint: shipped the most times refer to MAX(COUNT(ShipVia)); city of Aachen refers to ShipCity = 'Aache'; companies refers to CompanyName;,retail_world,SELECT T2.CompanyName FROM Orders AS T1 INNER JOIN Shippers AS T2 ON T1.ShipVia = T2.ShipperID WHERE T1.ShipCity = 'Aachen' GROUP BY T2.CompanyName ORDER BY COUNT(T1.ShipVia) DESC LIMIT 1,"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",192,6.572905778884888,250,"['orders', 'suppliers']"
1599,"What are the id of all the objects belonging to the transportation class? Hint: id of all the objects belonging to the transportation class refers to OBJ_CLASS_ID and OBJ_CLASS IN ('bus', 'train', 'aeroplane', 'car', 'etc.')",image_and_language,"SELECT OBJ_CLASS_ID FROM OBJ_CLASSES WHERE OBJ_CLASS IN ('bus', 'train', 'aeroplane', 'car', 'etc')","CREATE TABLE `OBJ_CLasSES` (
  OBJ_CLASS_ID INTEGER,
  OBJ_CLASS TEXT
);

",207,6.613049030303955,250,['OBJ_CLasSES']
1600,Please list the full names of all the students who took the course Machine Learning Theory. Hint: full name refers to f_name and l_name;,cs_semester,"SELECT T1.f_name, T1.l_name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Machine Learning Theory'","CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",144,6.520153999328613,250,"['course', 'registration', 'student']"
1601,"What is the URL to the rating on Mubi made by user 45579900 for the movie ""The Vertical Ray of the Sun"" that received 20 likes? Hint: URL refer to rating_url; 20 likes refer to critic_likes = ’20’; user 45579900 refer to user_id",movie_platform,SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 45579900 AND T1.movie_title = 'The Vertical Ray of the Sun' AND T2.critic_likes = 20,"CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",201,6.605725049972534,250,"['ratings', 'movies']"
1602,"For the students with an intelligence of 5, list the full name and courses taken by them who have less than a 3 GPA. Hint: full name of the students = f_name, l_name; gpa < 3;",cs_semester,"SELECT T1.f_name, T1.l_name, T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.intelligence = 5 AND T1.gpa < 3","CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

",163,6.542096853256226,250,"['student', 'registration', 'course']"
1603,"Please list the IDs of all the matches in the year 2008. Hint: ID of matches refers to Match_Id; in the year 2008 refers to SUBSTR(Match_Date, 1, 4) = '2008'",soccer_2016,"SELECT Match_Id FROM `Match` WHERE SUBSTR(Match_Date, 1, 4) = '2008'","CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

",262,6.741940259933472,250,['match']
1604,"Tell the genre of the game ""Resident Evil: Revelations"". Hint: genre refers to genre_name; game ""Resident Evil: Revelations"" refers to game_name = 'Resident Evil: Revelations'",video_games,SELECT T2.genre_name FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T1.game_name = 'Resident Evil: Revelations',"CREATE TABLE `genre` (
  id INTEGER,
  genre_name TEXT
);

CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

",181,6.557854652404785,250,"['genre', 'game']"
1605,"List all the deceased goalies and the teams he had played whose birth country was in Canada. Hint: goalies refers to pos = 'G'; deceased goalies refers to deathYear IS NOT NULL
",hockey,"SELECT DISTINCT firstName, lastName, T3.name FROM Goalies AS T1 INNER JOIN Master AS T2 ON T2.playerID = T1.playerID INNER JOIN Teams AS T3 ON T1.lgID = T3.lgID WHERE T2.birthCountry = 'Canada' AND T2.deathYear IS NOT NULL AND T2.pos = 'G'","CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

CREATE TABLE `abbrev` (
  Type TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Fullname TEXT
);

",255,6.699343681335449,250,"['goalies', 'abbrev']"
1606,"For the only Yelp business in ""Yuma"" city, how many ""medium"" reviews did it get? Hint: medium reviews refers to review_length = 'Medium';",public_review_platform,SELECT COUNT(T2.review_length) FROM Business AS T1 INNER JOIN Reviews AS T2 ON T1.business_id = T2.business_id WHERE T1.city LIKE 'Yuma' AND T2.review_length LIKE 'Medium',"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",199,6.601924896240234,250,"['reviews', 'business']"
1607,"On 1887-07-21, what was the event that lead to the creation of menu id 21380? Hint: On 1887-07-21 refers to date = '1887-07-21';",menu,SELECT event FROM Menu WHERE date = '1887-07-21' AND id = 21380,"CREATE TABLE `menuPage` (
  id INTEGER,
  menu_id INTEGER REFERENCES Menu(id),
  page_number INTEGER,
  image_id REAL,
  full_height INTEGER,
  full_width INTEGER,
  uuid TEXT
);

CREATE TABLE `menu` (
  id INTEGER,
  name TEXT,
  sponsor TEXT,
  event TEXT,
  venue TEXT,
  place TEXT,
  physical_description TEXT,
  occasion TEXT,
  notes TEXT,
  call_number TEXT,
  keywords TEXT,
  language TEXT,
  date DATE,
  location TEXT,
  location_type TEXT,
  currency TEXT,
  currency_symbol TEXT,
  status TEXT,
  page_count INTEGER,
  dish_count INTEGER
);

",172,6.5481276512146,250,"['menuPage', 'menu']"
1608,"Please list the full names of all the actors that have starred in the film with the highest replacement cost. Hint: highest replacement cost refers to Max (replacement_cost); full name refers to first_name, last_name",movie_3,"SELECT first_name, last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id ORDER BY T3.replacement_cost DESC LIMIT 1","CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",211,6.618350982666016,250,"['actor', 'film_actor']"
1609,"Which employee's job position requires a higher education level, Jose Rodriguez or Sandy Adams? Hint: Jose Rodriguez AND Sandy Adams are the fullname of employee; full name = firstname, lastname; higher education level refers to MAX(educationrequired)",human_resources,"SELECT T1.firstname, T1.lastname FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE (T1.lastname = 'Adams' AND T1.firstname = 'Sandy') OR (T1.lastname = 'Rodriguez' AND T1.firstname = 'Jose') ORDER BY T2.educationrequired DESC LIMIT 1","CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

CREATE TABLE `employee` (
  ssn TEXT PRIMARY KEY,
  lastname TEXT,
  firstname TEXT,
  hiredate TEXT,
  salary TEXT,
  gender TEXT,
  performance TEXT,
  positionID INTEGER REFERENCES position(positionID),
  locationID INTEGER REFERENCES location(locationID)
);

",165,6.539062023162842,250,"['position', 'employee']"
1610,Which country was the source of Pjandsh River? Give the full name of the country.,mondial_geo,SELECT T1.Name FROM country AS T1 INNER JOIN located AS T2 ON T1.Code = T2.Country WHERE T2.River = 'Pjandsh',"CREATE TABLE `river` (
  Name TEXT PRIMARY KEY,
  River TEXT,
  Lake TEXT REFERENCES lake(None),
  Sea TEXT,
  Length REAL,
  SourceLongitude REAL,
  SourceLatitude REAL,
  Mountains TEXT,
  SourceAltitude REAL,
  EstuaryLongitude REAL,
  EstuaryLatitude REAL
);

CREATE TABLE `located` (
  City TEXT REFERENCES city(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  River TEXT REFERENCES river(None),
  Lake TEXT REFERENCES lake(None),
  Sea TEXT REFERENCES sea(None)
);

CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",266,6.75246524810791,250,"['river', 'located', 'country']"
1611,"What is the average duration of trips for the starting station of Santa Clara at Almaden and what is the latitude and longitude of this station? Hint: average duration = DIVIDE(SUM(duration), COUNT(id)); starting station refers to start_station_name; start_station_name = 'Santa Clara at Almaden'; latitude refers to lat; longitude refers to long;",bike_share_1,"SELECT AVG(T1.duration), T2.lat, T2.long FROM trip AS T1 LEFT JOIN station AS T2 ON T2.name = T1.start_station_name LEFT JOIN station AS T3 ON T3.name = T1.end_station_name WHERE T1.start_station_name = 'Santa Clara at Almaden'","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",196,6.600379467010498,250,"['trip', 'station']"
1612,"More crimes happened in which community area in January, 2018, Woodlawn or Lincoln Square? Hint: in January 2018 refers to date like '%1/2018%'; Woodlawn or Lincoln Square refers to community_area_name in ('Woodlawn', 'Lincoln Square'); number of crime refers to COUNT(report_no); the higher the report_no, the more crimes happened in the community;",chicago_crime,"SELECT T1.community_area_name FROM Community_Area AS T1 INNER JOIN Crime AS T2 ON T1.community_area_no = T2.community_area_no WHERE T1.community_area_name IN ('Woodlawn', 'Lincoln Square') AND T2.date LIKE '%1/2018%' GROUP BY T1.community_area_name ORDER BY COUNT(T1.community_area_name) DESC LIMIT 1","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",226,6.650503635406494,250,"['crime', 'community_area']"
1613,Which country has the highest population in largest city for 19 consecutive years starting from 1960? Indicate the region to which the country is located. Hint: the highest population in largest city refers to max(value where IndicatorName = 'Population in largest city'); for 19 consecutive years starting from 1960 refers to Year BETWEEN'1960' and '1979',world_development_indicators,"SELECT T2.CountryCode, T2.Region FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'Population in largest city' AND T1.Year >= 1960 AND T1.Year < 1980 ORDER BY T2.Region DESC LIMIT 1","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",211,6.619853496551514,250,"['country', 'indicators']"
1614,"How many people had filled a role in the episode titled ""Cherished"", but did not show up in the on-screen credits? Hint: titled ""Cherished"" refers to title = 'Cherished'; did not show up in the on-screen credits refers to credited = ''",law_episode,SELECT COUNT(T1.episode_id) FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id WHERE T1.title = 'Cherished' AND T2.credited = 'false',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",179,6.559704780578613,250,"['credit', 'episode']"
1615,What was the condition of Elly Koss on 2009/1/8? Hint: condition on 2009/1/8 refers to DESCRIPTION from conditions where START = '2009-01-08';,synthea,SELECT T2.description FROM patients AS T1 INNER JOIN conditions AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Elly' AND T1.last = 'Koss' AND T2.START = '2009-01-08',"CREATE TABLE `conditions` (
  START DATE,
  STOP DATE,
  PATIENT TEXT REFERENCES patients(patient),
  ENCOUNTER TEXT REFERENCES encounters(ID),
  CODE INTEGER,
  DESCRIPTION TEXT REFERENCES all_prevalences(ITEM)
);

",202,6.6071319580078125,250,['conditions']
1616,"In the history of team id NJD, which goalie saved the most goal attempts? Give his full name. Hint: saved the most goal attempts refers to max(subtract(SA, GA)); team id refers to tmID",hockey,"SELECT T1.firstName, T1.lastName FROM Master AS T1 INNER JOIN Goalies AS T2 ON T1.playerID = T2.playerID WHERE T2.tmID = 'NJD' GROUP BY T2.playerID ORDER BY SUM(T2.SA - T2.GA) DESC LIMIT 1","CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

CREATE TABLE `goaliessc` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP INTEGER,
  Min INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  SHO INTEGER,
  GA INTEGER
);

",262,6.741105556488037,250,"['goalies', 'goaliessc']"
1617,Show me the employ id of the highest employee who doesn't have a middle name. Hint: highest employee refers to employee with the highest job level; MAX(job_lvl),book_publishing_company,SELECT emp_id FROM employee WHERE minit = '' ORDER BY job_lvl DESC LIMIT 1,"CREATE TABLE `employee` (
  emp_id TEXT PRIMARY KEY,
  fname TEXT,
  minit TEXT,
  lname TEXT,
  job_id INTEGER REFERENCES jobs(job_id),
  job_lvl INTEGER,
  pub_id TEXT REFERENCES publishers(pub_id),
  hire_date DATETIME
);

",179,6.5571815967559814,250,['employee']
1618,List the person IDs and course levels of the affiliated professors in faculty. Hint: person IDs refers to person.p_id; affiliated professors in faculty refers to professor = 1 and hasPosition = 'Faculty_aff',computer_student,"SELECT T1.p_id, T3.courseLevel FROM person AS T1 INNER JOIN taughtBy AS T2 ON T1.p_id = T2.p_id INNER JOIN course AS T3 ON T3.course_id = T2.course_id WHERE T1.hasPosition = 'Faculty_aff'","CREATE TABLE `person` (
  p_id INTEGER,
  professor INTEGER,
  student INTEGER,
  hasPosition TEXT,
  inPhase TEXT,
  yearsInProgram TEXT
);

",162,6.539216041564941,250,['person']
1619,"In which segment did the Walt Disney Company earned a bigger revenue in 1998, Studio Entertainment or Disney Media Networks? Hint: Studio Entertainment[NI 1]' > 'Disney Media Networks' where Year = 1998;",disney,SELECT CASE WHEN 'Studio Entertainment[NI 1]' > 'Disney Media Networks' THEN 'Studio Entertainment[NI 1]' ELSE 'Disney Media Networks' END FROM revenue WHERE `Year` = 1998,"CREATE TABLE `revenue` (
  Year INTEGER,
  Studio Entertainment[NI 1] REAL,
  Disney Consumer Products[NI 2] REAL,
  Disney Interactive[NI 3][Rev 1] INTEGER,
  Walt Disney Parks and Resorts REAL,
  Disney Media Networks TEXT,
  Total INTEGER
);

",176,6.553930044174194,250,['revenue']
1620,Calculate the total amount paid by Stephanie Mitchell for film rentals in June 2005. Hint: the total amount = sum(amount); in June 2005 refers to payment_date like '2005-06%',movie_3,"SELECT SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = 'STEPHANIE' AND T2.last_name = 'MITCHELL' AND SUBSTR(T1.payment_date, 1, 7) = '2005-06'","CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",221,6.633000612258911,250,"['payment', 'customer']"
1621,"Among the players who went to high school in Chicago, how many of them belongs to the west conference? Hint: high school in Chicago refers to hsCity = 'Chicago'; belong to the west conference refers to divID = 'WE'",professional_basketball,SELECT COUNT(DISTINCT T1.playerID) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.hsCity = 'Chicago' AND T2.conference = 'West',"CREATE TABLE `players_teams` (
  id INTEGER,
  playerID TEXT REFERENCES players(None),
  year INTEGER REFERENCES teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES teams(tmID),
  lgID TEXT,
  GP INTEGER,
  GS INTEGER,
  minutes INTEGER,
  points INTEGER,
  oRebounds INTEGER,
  dRebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  PF INTEGER,
  fgAttempted INTEGER,
  fgMade INTEGER,
  ftAttempted INTEGER,
  ftMade INTEGER,
  threeAttempted INTEGER,
  threeMade INTEGER,
  PostGP INTEGER,
  PostGS INTEGER,
  PostMinutes INTEGER,
  PostPoints INTEGER,
  PostoRebounds INTEGER,
  PostdRebounds INTEGER,
  PostRebounds INTEGER,
  PostAssists INTEGER,
  PostSteals INTEGER,
  PostBlocks INTEGER,
  PostTurnovers INTEGER,
  PostPF INTEGER,
  PostfgAttempted INTEGER,
  PostfgMade INTEGER,
  PostftAttempted INTEGER,
  PostftMade INTEGER,
  PostthreeAttempted INTEGER,
  PostthreeMade INTEGER,
  note TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",199,6.6030542850494385,250,"['players_teams', 'teams']"
1622,How many papers were preprinted between the years 1990 and 2000? Hint: years 1990 and 2000 refers to Year BETWEEN '1990' AND '2000'; papers refers to COUNT(id),authors,SELECT COUNT(id) FROM Paper WHERE Year BETWEEN '1990' AND '2000' AND ConferenceId = 0 AND JournalId = 0,"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

",178,6.556232213973999,250,['paper']
1623,"Calculate the total payment amount by Diane Collins. Hint: 'Diane Collins' is a full name of a customer; full name refers to first_name, last_name",movie_3,SELECT SUM(T2.amount) FROM customer AS T1 INNER JOIN payment AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Diane' AND T1.last_name = 'Collins',"CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",203,6.6080029010772705,250,"['payment', 'customer']"
1624,What is the longest students absence duration from school? Hint: longest students absence duration MAX(month),student_loan,"SELECT name, month FROM longest_absense_from_school WHERE `month` = ( SELECT MAX(month) FROM longest_absense_from_school )","CREATE TABLE `longest_absense_from_school` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  month INTEGER
);

",170,6.545031547546387,250,['longest_absense_from_school']
1625,What are the highest salary earn by the the employee and what is his/her position in the company? Hint: highest salary refers to max(salary); position refers to Title,retail_world,"SELECT Salary, Title FROM Employees WHERE Salary = ( SELECT MAX(Salary) FROM Employees )","CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",172,6.551516056060791,250,['employees']
1626,List the ranking criteria under the Shanghai Ranking system. Hint: Shanghai Ranking system refers to system_name = 'Shanghai Ranking'; ranking criteria refers to criteria_name,university,SELECT T2.criteria_name FROM ranking_system AS T1 INNER JOIN ranking_criteria AS T2 ON T1.id = T2.ranking_system_id WHERE T1.system_name = 'Shanghai Ranking',"CREATE TABLE `ranking_criteria` (
  id INTEGER,
  ranking_system_id INTEGER REFERENCES ranking_system(id),
  criteria_name TEXT
);

CREATE TABLE `ranking_system` (
  id INTEGER,
  system_name TEXT
);

",172,6.547013759613037,250,"['ranking_criteria', 'ranking_system']"
1627,Indicate the name and category of the most recent award received by the show. Hint: most recent refers to MAX(year); received refers to result = 'Winner'; name of award refers to award; category refers to award_category,simpson_episodes,"SELECT award, award_category FROM Award WHERE result = 'Winner' ORDER BY year DESC LIMIT 1;","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

",172,6.548253774642944,250,['award']
1628,Provide the population of the city of the 'World Tourism Organization' headquarter.,mondial_geo,SELECT T2.Population FROM organization AS T1 INNER JOIN city AS T2 ON T1.City = T2.Name WHERE T1.Name = 'World Tourism Organization',"CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `organization` (
  Abbreviation TEXT PRIMARY KEY,
  Name TEXT PRIMARY KEY,
  City TEXT REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Established DATE
);

",265,6.748671770095825,250,"['city', 'organization']"
1629,"Provide the tokenized name of the method ""Sky.Excel.ExcelBook.TypeConvert"". Hint: tokenized name refers to NameTokenized; NameTokenized = 'Sky.Excel.ExcelBook.TypeConvert';",codebase_comments,SELECT NameTokenized FROM Method WHERE Name = 'Sky.Excel.ExcelBook.TypeConvert',"CREATE TABLE `solution` (
  Id INTEGER,
  RepoId INTEGER,
  Path TEXT,
  ProcessedTime INTEGER,
  WasCompiled INTEGER
);

CREATE TABLE `method` (
  Id INTEGER,
  Name TEXT,
  FullComment TEXT,
  Summary TEXT,
  ApiCalls TEXT,
  CommentIsXml INTEGER,
  SampledAt INTEGER,
  SolutionId INTEGER,
  Lang TEXT,
  NameTokenized TEXT
);

",168,6.545477628707886,250,"['solution', 'method']"
1630,How many of the customer's reference ID that has a TRUE response? Hint: reference ID refers to REFID;,software_company,SELECT COUNT(REFID) FROM Mailings1_2 WHERE RESPONSE = 'true',"CREATE TABLE `mailings1_2` (
  REFID INTEGER REFERENCES Customers(None),
  REF_DATE DATETIME,
  RESPONSE TEXT
);

",144,6.520756721496582,250,['mailings1_2']
1631,"Name the customers from the Eastern region whose orders cost above 80000. Hint: cost above 80000 refers to SUTRACT(MULTIPLY(DIVIDE(Sales, SUTRACT(1, discount)), Quantity), Profit) > 80000",superstore,SELECT DISTINCT T2.`Customer Name` FROM east_superstore AS T1 INNER JOIN people AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.Region = 'East' AND T1.Sales / (1 - T1.Discount) * T1.Quantity - T1.Profit > 80000,"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `people` (
  Customer ID TEXT PRIMARY KEY,
  Customer Name TEXT,
  Segment TEXT,
  Country TEXT,
  City TEXT,
  State TEXT,
  Postal Code INTEGER,
  Region TEXT PRIMARY KEY
);

",195,6.598012924194336,250,"['central_superstore', 'people']"
1632,State the employee who are born in or after 1970 and with the least sick leave hour. Hint: born in or after 1970 refers to year(BirthDate) > = 1970;,works_cycles,"SELECT T2.FirstName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE STRFTIME('%Y', T1.BirthDate) > '1970' ORDER BY T1.SickLeaveHours LIMIT 1","CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",472,7.25053858757019,250,['employee']
1633,When the allergy starts for Angelo Buckridge.,synthea,SELECT T2.START FROM patients AS T1 INNER JOIN allergies AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Adolfo' AND T1.last = 'Schmitt' AND T2.STOP IS NOT NULL,"CREATE TABLE `allergies` (
  START TEXT,
  STOP TEXT,
  PATIENT TEXT PRIMARY KEY REFERENCES patients(patient),
  ENCOUNTER TEXT PRIMARY KEY REFERENCES encounters(ID),
  CODE INTEGER PRIMARY KEY,
  DESCRIPTION TEXT
);

",156,6.534043788909912,250,['allergies']
1634,"From 1975 to 1980, how much is the total amount CO2 emmission in kiloton of the the world? Indicate which year the world recorded its highest CO2 emmissions. Hint: from 1975 to 1980 refers to Year between 1975 and 1980; the total amount CO2 emmission in kiloton of the the world refers to sum(value where IndicatorName like 'CO2%'); the world recorded its highest CO2 emmissions refers to max(value where IndicatorName like 'CO2%')",world_development_indicators,"SELECT SUM(T1.Value), T1.Year FROM Indicators AS T1 INNER JOIN Country AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.IndicatorName = 'CO2 emissions (kt)' AND T1.Year >= 1975 AND T1.Year < 1981 AND T1.CountryCode = 'WLD' AND T2.SpecialNotes = 'World aggregate.'","CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",248,6.687561511993408,250,['indicators']
1635,"Among all the employees, how many percent more for the publishers than designers? Hint: publisher and designer are job descriptions which refers to job_desc; percentage more = 100*(SUBTRACT(SUM(CASE WHERE job_desc = 'publisher), SUM(CASE WHERE job_desc = 'designer'))",book_publishing_company,SELECT CAST(SUM(CASE WHEN T2.job_desc = 'publisher' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.job_desc = 'designer' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.job_id) FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id,"CREATE TABLE `titleauthor` (
  au_id TEXT PRIMARY KEY REFERENCES authors(au_id),
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id),
  au_ord INTEGER,
  royaltyper INTEGER
);

",210,6.620043754577637,250,"['job_desc', 'employee']"
1636,"What is the full name of the Vice President of Sales. Give me the URL of his/her photo. Hint: ""Vice Present of Sales"" refers to Title = 'Vice President, Sales'; full name refers to FirstName, LastName; url of photo refers to PhotoPath",retail_world,"SELECT FirstName, LastName FROM Employees WHERE Title = 'Vice President, Sales'","CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",195,6.596529006958008,250,['employees']
1637,"For the all donations to the project 'Bringing Drama to Life', what is the percentage of the donation is paid by credit card? Hint: Bringing Drama to Life' is the title; Percentage = Divide(Count(payment_method = 'creditcard'), Count(projectid))*100;",donor,SELECT CAST(SUM(CASE WHEN T2.payment_method LIKE 'creditcard' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(donationid) FROM essays AS T1 INNER JOIN donations AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Bringing Drama to Life',"CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",187,6.566773176193237,250,"['donations', 'projects']"
1638,How many male stuents do not have payment due? Hint: do not have payment due refers to bool = 'neg';,student_loan,SELECT COUNT(T1.name) FROM male AS T1 INNER JOIN no_payment_due AS T2 ON T1.name = T2.name WHERE T2.bool = 'neg',"CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

CREATE TABLE `bool` (
  name TEXT PRIMARY KEY
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",176,6.5547356605529785,250,"['no_payment_due', 'bool', 'male']"
1639,"For all phone numbers, what percentage of the total is cell phone? Hint: Cellphone referes to the name of the phone type, therefore PhoneNumberTypeID = 1; DIVIDE(COUNT(PhoneNumberTypeID = 1), (COUNT(PhoneNumberTypeID)) as percentage",works_cycles,SELECT CAST(SUM(CASE WHEN T2.Name = 'Cell' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.Name) FROM PersonPhone AS T1 INNER JOIN PhoneNumberType AS T2 ON T1.PhoneNumberTypeID = T2.PhoneNumberTypeID,"CREATE TABLE `PhoneNumberType` (
  PhoneNumberTypeID INTEGER,
  Name TEXT,
  ModifiedDate DATETIME
);

",483,7.272616386413574,250,['PhoneNumberType']
1640,"What is the difference in the number of goals scored by Pavel Brendl during the regular season versus the playoffs in the 1998-1999 season? Hint: difference = SUBTRACT(SUM(G WHERE GAMETYPE = 'Regular Season'), SUM(G WHERE GAMETYPE = 'Playoffs') WHERE SEASON = '1998-1999'); number of goals scored refers to G; regular season refers to GAMETYPE = 'Regular Season'; playoffs refers to GAMETYPE = 'Playoffs'; 1998-1999 season refers to SEASON = '1998-1999';",ice_hockey_draft,"SELECT T3.Rs_G - T4.Pf_G AS diff FROM ( SELECT T2.PlayerName, T1.G AS Rs_G FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Pavel Brendl' AND T1.SEASON = '1998-1999' AND T1.GAMETYPE = 'Regular Season' ) AS T3 INNER JOIN ( SELECT T2.PlayerName, T1.G AS Pf_G FROM SeasonStatus AS T1 INNER JOIN PlayerInfo AS T2 ON T1.ELITEID = T2.ELITEID WHERE T2.PlayerName = 'Pavel Brendl' AND T1.SEASON = '1998-1999' AND T1.GAMETYPE = 'Playoffs' ) AS T4 ON T3.PlayerName = T4.PlayerName","CREATE TABLE `seasonstatus` (
  ELITEID INTEGER REFERENCES PlayerInfo(ELITEID),
  SEASON TEXT,
  TEAM TEXT,
  LEAGUE TEXT,
  GAMETYPE TEXT,
  GP INTEGER,
  G INTEGER,
  A INTEGER,
  P INTEGER,
  PIM INTEGER,
  PLUSMINUS INTEGER
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",268,6.755504131317139,250,"['seasonstatus', 'playerinfo']"
1641,List down the MapLight ID of the representatives in Maine. Hint: representatives refers to type = 'rep'; Maine refers to state = 'ME';,legislator,SELECT T1.maplight_id FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'rep' AND T2.state = 'ME' GROUP BY T1.maplight_id,"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",148,6.524517059326172,250,['historical']
1642,What are the Wikipedia page names of all the anti-administration senators? Hint: Wikipedia page names refers to wikipedia_id; anti-administration refers to party = 'Anti-Administration'; senators refers to type = 'sen';,legislator,SELECT T1.wikipedia_id FROM historical AS T1 INNER JOIN `historical-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.type = 'sen' AND T2.party = 'Anti-Administration',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",173,6.551437616348267,250,"['historical', 'historical-terms']"
1643,List the names of business in AZ with a rating of 5. Hint: AZ refers to state = 'AZ'; rating refers to stars;,public_review_platform,SELECT business_id FROM Business WHERE state LIKE 'AZ' AND stars = 5,"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",193,6.591644287109375,250,['business']
1644,Which recipe needs the most frozen raspberries in light syrup? State its title. Hint: frozen raspberries in light syrup is a name of an ingredient; max_qty = min_qty,cookbook,SELECT T1.title FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T3.name = 'frozen raspberries in light syrup' AND T2.max_qty = T2.min_qty,"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",158,6.531506061553955,250,"['quantity', 'ingredient']"
1645,Please give more detailed information about the first three books that sell the best. Hint: qty is abbreviation for quantity; sells the best mean with the most sales quantity; MAX(qty),book_publishing_company,SELECT T1.notes FROM titles AS T1 INNER JOIN sales AS T2 ON T1.title_id = T2.title_id ORDER BY T2.qty DESC LIMIT 3,"CREATE TABLE `sales` (
  stor_id TEXT PRIMARY KEY REFERENCES stores(stor_id),
  ord_num TEXT PRIMARY KEY,
  ord_date DATETIME,
  qty INTEGER,
  payterms TEXT,
  title_id TEXT PRIMARY KEY REFERENCES titles(title_id)
);

CREATE TABLE `titles` (
  title_id TEXT PRIMARY KEY,
  title TEXT,
  type TEXT,
  pub_id TEXT REFERENCES publishers(pub_id),
  price REAL,
  advance REAL,
  royalty INTEGER,
  ytd_sales INTEGER,
  notes TEXT,
  pubdate DATETIME
);

",182,6.561243057250977,250,"['sales', 'titles']"
1646,How many community areas are there in Central Chicago? Hint: Central Chicago refers to side = 'Central',chicago_crime,SELECT COUNT(*) FROM Community_Area WHERE side = 'Central',"CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",152,6.525506258010864,250,['community_area']
1647,"Among the worst actresses, how many of them got a rating of more than 3 to the movies they starred? Hint: Worst actresses means a_quality is the least; The least a_quality is 0",movielens,SELECT COUNT(T1.userid) FROM u2base AS T1 INNER JOIN movies2actors AS T2 ON T1.movieid = T2.movieid INNER JOIN actors AS T3 ON T2.actorid = T3.actorid INNER JOIN users AS T4 ON T1.userid = T4.userid WHERE T3.a_quality = 0 AND T1.rating > 3 AND T4.u_gender = 'F',"CREATE TABLE `movies` (
  movieid INTEGER,
  year INTEGER,
  isEnglish TEXT,
  country TEXT,
  runningtime INTEGER
);

CREATE TABLE `movies2actors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  actorid INTEGER PRIMARY KEY REFERENCES actors(None),
  cast_num INTEGER
);

CREATE TABLE `actors` (
  actorid INTEGER,
  a_gender TEXT,
  a_quality INTEGER
);

",177,6.556790113449097,250,"['movies', 'movies2actors', 'actors']"
1648,"Which is the publisher for the game ""Prism: Light the Way""? Hint: publisher refers to publisher_name; game ""Prism: Light the Way"" refers to game_name = 'Prism: Light the Way'",video_games,SELECT T1.publisher_name FROM publisher AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.publisher_id INNER JOIN game AS T3 ON T2.game_id = T3.id WHERE T3.game_name = 'Prism: Light the Way',"CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

CREATE TABLE `publisher` (
  id INTEGER,
  publisher_name TEXT
);

",176,6.551951885223389,250,"['game_publisher', 'game', 'publisher']"
1649,What is the code of Mississippi Valley Airlines? Hint: Mississippi Valley Airlines refers to Description like 'Mississippi Valley Airlines%';,airline,SELECT Code FROM `Air Carriers` WHERE Description LIKE 'Mississippi Valley Airlines%',"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",136,6.508686065673828,250,['airlines']
1650,List out dates when haze is recorded in store 35. Hint: store 35 refers to store_nbr = 35; haze is recorded refers to codesum like '%'||'HZ'||'%',sales_in_weather,SELECT T1.`date` FROM weather AS T1 INNER JOIN relation AS T2 ON T1.station_nbr = T2.station_nbr WHERE T2.store_nbr = 35 AND T1.codesum LIKE '%' OR 'HZ' OR '%',"CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

",159,6.5328333377838135,250,['weather']
1651,"What was the max profit a user can make on Bitcoin on 2013/4/28? Hint: the max profit = subtract(high, low); on 2013/4/28 refers to date = '2013-04-28'",coinmarketcap,SELECT T2.high - T2.low FROM coins AS T1 INNER JOIN historical AS T2 ON T1.id = T2.coin_id WHERE T2.date = '2013-04-28' AND T1.name = 'Bitcoin',"CREATE TABLE `historical` (
  date DATE,
  coin_id INTEGER,
  cmc_rank INTEGER,
  market_cap REAL,
  price REAL,
  open REAL,
  high REAL,
  low REAL,
  close REAL,
  time_high TEXT,
  time_low TEXT,
  volume_24h REAL,
  percent_change_1h REAL,
  percent_change_24h REAL,
  percent_change_7d REAL,
  circulating_supply REAL,
  total_supply REAL,
  max_supply REAL,
  num_market_pairs INTEGER
);

CREATE TABLE `coins` (
  id INTEGER,
  name TEXT,
  slug TEXT,
  symbol TEXT,
  status TEXT,
  category TEXT,
  description TEXT,
  subreddit TEXT,
  notice TEXT,
  tags TEXT,
  tag_names TEXT,
  website TEXT,
  platform_id INTEGER,
  date_added TEXT,
  date_launched TEXT
);

",166,6.543792724609375,250,"['historical', 'coins']"
1652,Please list any three businesses with their IDs that are located in Dallas City. Hint: business with ther ID refers to BusinessEntityID,works_cycles,SELECT T2.BusinessEntityID FROM Address AS T1 INNER JOIN BusinessEntityAddress AS T2 ON T1.AddressID = T2.AddressID WHERE T1.City = 'Dallas' LIMIT 3,"CREATE TABLE `businessentityaddress` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES BusinessEntity(BusinessEntityID),
  AddressID INTEGER PRIMARY KEY REFERENCES Address(AddressID),
  AddressTypeID INTEGER PRIMARY KEY REFERENCES AddressType(AddressTypeID),
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `address` (
  AddressID INTEGER,
  AddressLine1 TEXT PRIMARY KEY,
  AddressLine2 TEXT PRIMARY KEY,
  City TEXT PRIMARY KEY,
  StateProvinceID INTEGER PRIMARY KEY REFERENCES StateProvince(None),
  PostalCode TEXT PRIMARY KEY,
  SpatialLocation TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",452,7.200400352478027,250,"['businessentityaddress', 'address']"
1653,Provide the country with its full name which has the most ethnic group? List them all ethnic group together with its percentage.,mondial_geo,"SELECT T1.Name, T2.Name, T2.Percentage FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country WHERE T1.Name = ( SELECT T1.Name FROM country AS T1 INNER JOIN ethnicGroup AS T2 ON T1.Code = T2.Country GROUP BY T1.Name ORDER BY COUNT(T2.Name) DESC LIMIT 1 ) GROUP BY T1.Name, T2.Name, T2.Percentage","CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

CREATE TABLE `ethnicGroup` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Name TEXT PRIMARY KEY,
  Percentage REAL
);

",271,6.7608911991119385,250,"['country', 'ethnicGroup']"
1654,List down the cities that belong to the country with a life expectancy of 66.4.,world,SELECT T2.Name FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T1.LifeExpectancy = 66.4,"CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",131,6.508403301239014,250,"['city', 'country']"
1655,"Among the current legislators who do not have accounts on OpenSecrets.org., how many of them do not have instagram accounts either? Hint: do not have accounts on OpenSecrets.org refers to opensecrets_ID is NULL OR opensecrets_id = ''; do not have instagram accounts refers to instagram is null",legislator,SELECT SUM(CASE WHEN T1.instagram IS NULL THEN 1 ELSE 0 END) AS count FROM `social-media` AS T1 INNER JOIN current AS T2 ON T1.bioguide = T2.bioguide_id WHERE T2.opensecrets_id IS NULL OR T2.opensecrets_id = '',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",190,6.575878143310547,250,"['historical', 'historical-terms', 'social-media']"
1656,What are the names of all the people who worked on episode 19 of season 9?,law_episode,SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.episode = 19 AND T1.season = 9,"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `person` (
  person_id TEXT PRIMARY KEY,
  name TEXT,
  birthdate DATE,
  birth_name TEXT,
  birth_place TEXT,
  birth_region TEXT,
  birth_country TEXT,
  height_meters REAL,
  nickname TEXT
);

",137,6.515954256057739,250,"['credit', 'episode', 'person']"
1657,"Among all attribute names, list down the ID and attribute name which start with ""music"". Hint: attribute name which start with ""music"" refers to attribute_name LIKE 'music%'",public_review_platform,"SELECT attribute_id, attribute_name FROM Attributes WHERE attribute_name LIKE 'music%'","CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

",203,6.609494209289551,250,['attributes']
1658,List the descriptions of movies under the category Travel. Hint: the category Travel refers to category.name = 'Travel',movie_3,SELECT T1.description FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.`name` = 'Travel',"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",189,6.573155403137207,250,"['film_text', 'category']"
1659,"Among all the incidents with no arrest made, what is the percentage of them having a generic description of ""BATTERY"" in the IUCR classification? Hint: incident with no arrest made refers to arrest = 'FALSE'; general description refers to primary_description; ""BATTERY"" is the primary_description; percentage = Divide (Count(iucr_no where primary_description = 'BATTERY'), Count(iucr_no)) * 100",chicago_crime,SELECT CAST(SUM(CASE WHEN T1.primary_description = 'BATTERY' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*)FROM IUCR AS T1 INNER JOIN Crime AS T2 ON T1.iucr_no = T2.iucr_no WHERE T2.arrest = 'FALSE',"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `iucr` (
  iucr_no TEXT PRIMARY KEY,
  primary_description TEXT,
  secondary_description TEXT,
  index_code TEXT
);

",233,6.6627678871154785,250,"['crime', 'iucr']"
1660,"What is the name of the state that the client with the email ""skylar.ramirez@gmail.com"" lives in?",retail_complains,SELECT T3.state FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T3.email = 'skylar.ramirez@gmail.com',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `state` (
  StateCode TEXT PRIMARY KEY,
  State TEXT,
  Region TEXT
);

",146,6.521980285644531,250,"['client', 'state']"
1661,Please list all the female students that have filed for bankruptcy. Hint: females students have filed for bankruptcy refers to name that appeared in both filed_for_bankrupcy and male tables,student_loan,SELECT name FROM filed_for_bankrupcy WHERE name NOT IN ( SELECT name FROM male ),"CREATE TABLE `filed_for_bankrupcy` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `male` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

",190,6.574816942214966,250,"['filed_for_bankrupcy', 'male']"
1662,Indicate the name of the products that have been shipped to the city of Paris. Hint: shipped to the city of Paris refers to ShipCity = 'Paris';,retail_world,SELECT T3.ProductName FROM Orders AS T1 INNER JOIN `Order Details` AS T2 ON T1.OrderID = T2.OrderID INNER JOIN Products AS T3 ON T2.ProductID = T3.ProductID WHERE T1.ShipCity = 'Paris',"CREATE TABLE `orders` (
  OrderID INTEGER,
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  EmployeeID INTEGER REFERENCES Employees(EmployeeID),
  OrderDate DATETIME,
  ShipperID INTEGER REFERENCES Shippers(ShipperID)
);

CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

",171,6.549279451370239,250,"['orders', 'products']"
1663,List the full name of all the 'Production Technician - WC50' Hint: full name = FirstName+MiddleName+LastName; Production Technician - WC50 is a job title;,works_cycles,"SELECT T2.FirstName, T2.MiddleName, T2.LastName FROM Employee AS T1 INNER JOIN Person AS T2 USING (BusinessEntityID) WHERE T1.JobTitle = 'Production Technician - WC50' GROUP BY T2.FirstName, T2.MiddleName, T2.LastName","CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",471,7.25103235244751,250,['person']
1664,"Where was the 'A context-based navigation paradigm for accessing Web data' paper published? State the name of the conference. Hint: A context-based navigation paradigm for accessing Web data' is the title of paper; name of conference refer to FullName
",authors,SELECT T2.FullName FROM Paper AS T1 INNER JOIN Conference AS T2 ON T1.ConferenceId = T2.Id WHERE T1.Title = 'A context-based navigation paradigm for accessing Web data',"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `conference` (
  Id INTEGER,
  ShortName TEXT,
  FullName TEXT,
  HomePage TEXT
);

",168,6.546586513519287,250,"['paper', 'conference']"
1665,"What is the percentage of coaches in 1969 who were awarded ""NBA Coach of the Year""? Hint: in 1969 refers to year = 1969; awarded ""NBA Coach of the Year"" refers to award = 'NBA Coach of the Year'; percentage = divide(count(coachID where year = 1969 and award = 'NBA Coach of the Year'), count(coachID)) * 100%",professional_basketball,SELECT CAST(SUM(CASE WHEN award = 'NBA Coach of the Year' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM awards_coaches WHERE year = 1969,"CREATE TABLE `awards_coaches` (
  id INTEGER,
  year INTEGER REFERENCES coaches(year),
  coachID TEXT REFERENCES coaches(coachID),
  award TEXT,
  lgID TEXT,
  note TEXT
);

",253,6.6987645626068115,250,['awards_coaches']
1666,List the name of employees who had left the company? When were they hired? Hint: employee that has left the company refers to EndDate is not null,works_cycles,"SELECT T1.FirstName, T1.LastName, T2.HireDate FROM Person AS T1 INNER JOIN Employee AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN EmployeeDepartmentHistory AS T3 ON T2.BusinessEntityID = T3.BusinessEntityID WHERE T3.EndDate IS NOT NULL","CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",455,7.208539247512817,250,['employee']
1667,List the PG-13 romantic comedy movie titles and their release dates. Hint: PG-13 refers to MPAA_rating = 'PG-13'; romantic comedy refers to genre = 'Romantic Comedy';,disney,"SELECT movie_title, release_date FROM movies_total_gross WHERE MPAA_rating = 'PG-13' AND genre = 'Romantic Comedy'","CREATE TABLE `movies_total_gross` (
  movie_title TEXT PRIMARY KEY REFERENCES characters(movie_title),
  release_date TEXT PRIMARY KEY,
  genre TEXT,
  MPAA_rating TEXT,
  total_gross TEXT,
  inflation_adjusted_gross TEXT
);

CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

CREATE TABLE `characters` (
  movie_title TEXT PRIMARY KEY,
  release_date TEXT,
  hero TEXT REFERENCES voice-actors(character),
  villian TEXT,
  song TEXT
);

",171,6.547810077667236,250,"['movies_total_gross', 'director', 'characters']"
1668,"What is the full address of the restaurant named ""Sanuki Restaurant""? Hint: full address refers to city, street_num, street_name; restaurant named ""Sanuki Restaurant"" refers to label = 'sanuki restaurant'",restaurant,"SELECT T2.city, T1.street_num, T1.street_name FROM location AS T1 INNER JOIN generalinfo AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.label = 'sanuki restaurant'","CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",153,6.527541637420654,250,"['location', 'generalinfo']"
1669,"Among the store contact employees, how many of them have a Vista credit card? Hint: store contact refers to PersonType = 'SC'; type of credit card refers to CardType; CardType = 'vista';",works_cycles,SELECT COUNT(T1.FirstName) FROM Person AS T1 INNER JOIN PersonCreditCard AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID INNER JOIN CreditCard AS T3 ON T2.CreditCardID = T3.CreditCardID WHERE T3.CardType = 'Vista' AND T1.PersonType = 'SC',"CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `personcreditcard` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES Person(BusinessEntityID),
  CreditCardID INTEGER PRIMARY KEY REFERENCES CreditCard(CreditCardID),
  ModifiedDate DATETIME
);

",469,7.246476411819458,250,"['person', 'personcreditcard']"
1670,Who has participated in the most Olympic Games in the database? Hint: Who refers to full_name; participated in the most Olympic Games refers to MAX(COUNT(games_id));,olympics,SELECT T1.full_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id GROUP BY T2.person_id ORDER BY COUNT(T2.person_id) DESC LIMIT 1,"CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",186,6.571853160858154,250,"['person', 'games_competitor']"
1671,"What percentage of sell orders on 04/04/2020 were for the state of New York? Hint: sales order on 04/04/2020 refers to OrderDate = '4/4/20'; 'New York' is  the City Name; percentage = Divide (Sum(OrderNumber where City Name = 'New York'), Count (OrderNumber)) * 100",regional_sales,SELECT CAST(SUM(CASE WHEN T2.State = 'New York' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.OrderNumber) FROM `Sales Orders` AS T1 INNER JOIN `Store Locations` AS T2 ON T2.StoreID = T1._StoreID WHERE T1.OrderDate = '4/4/20',"CREATE TABLE `sales orders` (
  OrderNumber TEXT PRIMARY KEY,
  Sales Channel TEXT,
  WarehouseCode TEXT,
  ProcuredDate TEXT,
  OrderDate TEXT,
  ShipDate TEXT,
  DeliveryDate TEXT,
  CurrencyCode TEXT,
  _SalesTeamID INTEGER REFERENCES Sales Team(SalesTeamID),
  _CustomerID INTEGER REFERENCES Customers(CustomerID),
  _StoreID INTEGER REFERENCES Store Locations(StoreID),
  _ProductID INTEGER REFERENCES Products(ProductID),
  Order Quantity INTEGER,
  Discount Applied REAL,
  Unit Price TEXT,
  Unit Cost TEXT
);

CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

",214,6.633292198181152,250,"['sales orders', 'store locations']"
1672,Which behavior category does user number 5902120154267990000 belong to? Hint: behavior category refers to category; number refers to app_id; app_id = 5902120154267990000;,talkingdata,SELECT T1.category FROM label_categories AS T1 INNER JOIN app_labels AS T2 ON T1.label_id = T2.label_id WHERE T2.app_id = 5902120154267990000,"CREATE TABLE `app_all` (
  app_id INTEGER
);

CREATE TABLE `app_labels` (
  app_id INTEGER REFERENCES app_all(app_id),
  label_id INTEGER REFERENCES label_categories(label_id)
);

CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",239,6.680577993392944,250,"['app_all', 'app_labels', 'label_categories']"
1673,List 10 cities with a median age over 40. Include their zip codes and area codes. Hint: median age over 40 refers to median_age > 40,address,"SELECT T2.city, T2.zip_code, T1.area_code FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.median_age >= 40 LIMIT 10","CREATE TABLE `zip_data` (
  zip_code INTEGER,
  city TEXT,
  state TEXT REFERENCES state(abbreviation),
  multi_county TEXT,
  type TEXT,
  organization TEXT,
  time_zone TEXT,
  daylight_savings TEXT,
  latitude REAL,
  longitude REAL,
  elevation INTEGER,
  state_fips INTEGER,
  county_fips INTEGER,
  region TEXT,
  division TEXT,
  population_2020 INTEGER,
  population_2010 INTEGER,
  households INTEGER,
  avg_house_value INTEGER,
  avg_income_per_household INTEGER,
  persons_per_household REAL,
  white_population INTEGER,
  black_population INTEGER,
  hispanic_population INTEGER,
  asian_population INTEGER,
  american_indian_population INTEGER,
  hawaiian_population INTEGER,
  other_population INTEGER,
  male_population INTEGER,
  female_population INTEGER,
  median_age REAL,
  male_median_age REAL,
  female_median_age REAL,
  residential_mailboxes INTEGER,
  business_mailboxes INTEGER,
  total_delivery_receptacles INTEGER,
  businesses INTEGER,
  1st_quarter_payroll INTEGER,
  annual_payroll INTEGER,
  employees INTEGER,
  water_area REAL,
  land_area REAL,
  single_family_delivery_units INTEGER,
  multi_family_delivery_units INTEGER,
  total_beneficiaries INTEGER,
  retired_workers INTEGER,
  disabled_workers INTEGER,
  parents_and_widowed INTEGER,
  spouses INTEGER,
  children INTEGER,
  over_65 INTEGER,
  monthly_benefits_all INTEGER,
  monthly_benefits_retired_workers INTEGER,
  monthly_benefits_widowed INTEGER,
  CBSA INTEGER REFERENCES CBSA(CBSA)
);

CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

",171,6.554198980331421,250,"['zip_data', 'area_code']"
1674,"How many users in Mubi give the movie ""White Night Wedding for 5""? Hint: White Night Wedding' is movie_title; for 5 refers to rating_score = 5;",movie_platform,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T2.movie_title = 'White Night Wedding',"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",157,6.534316539764404,250,"['movies', 'ratings']"
1675,How many short tips were left for the business with ID no.2? Hint: short tip refers to tip_length = 'Short'; business category refers to category_name,public_review_platform,SELECT COUNT(business_id) FROM Tips WHERE business_id = 2 AND tip_length = 'Short',"CREATE TABLE `tips` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  likes INTEGER,
  tip_length TEXT
);

CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

",196,6.601198196411133,250,"['tips', 'business', 'business_categories']"
1676,What is the minimum weight of all-star players coming from UCLA college? Hint: minimum weight refers to Min(weight),professional_basketball,SELECT MIN(T1.weight) FROM players AS T1 INNER JOIN player_allstar AS T2 ON T1.playerID = T2.playerID WHERE T1.college = 'UCLA',"CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",175,6.5580244064331055,250,['player_allstar']
1677,How many competitors were there who participated in 2000 Summer with age 31? Hint: in 2000 Summer refers to games_name = '2000 Summer'; age = 31,olympics,SELECT COUNT(T2.person_id) FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id WHERE T1.games_name = '2000 Summer' AND T2.age = 31,"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",194,6.601754426956177,250,"['games', 'games_competitor']"
1678,"Among the cars introduced in 1977, provide the names and the horse powers of cars from Europe. Hint: introduced in 1977 refers to model_year = 1977; car's name refers to car_name; from Europe refers to country = 'Europe'",cars,"SELECT T1.car_name, T1.horsepower FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T2.model_year = 1977 AND T3.country = 'Europe'","CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",169,6.54782772064209,250,"['data', 'country', 'production']"
1679,What are the Indicator names and aggregation methods when the topic is Economic Policy & Debt: Balance of payments: Capital & financial account?,world_development_indicators,"SELECT IndicatorName, AggregationMethod FROM Series WHERE Topic = 'Economic Policy & Debt: Balance of payments: Capital & financial account'","CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",148,6.521287202835083,250,['indicators']
1680,What is the name of the product stored in location 1 compartment L container 6? Hint: compartment refers to Shelf;,works_cycles,SELECT T2.Name FROM ProductInventory AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T1.LocationID = 1 AND T1.Shelf = 'L' AND T1.Bin = 6,"CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `location` (
  LocationID INTEGER,
  Name TEXT PRIMARY KEY,
  CostRate REAL,
  Availability REAL,
  ModifiedDate DATETIME
);

",452,7.2009053230285645,250,"['product', 'location']"
1681,Which non-playoffs team had the most points in the regular season in the year 1998? Hint: non-playoff refers to PostGP = 0; in the year 1998 refers to year = 1998; the most points refers to max(o_pts),professional_basketball,SELECT T2.tmID FROM players_teams AS T1 INNER JOIN teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 1998 AND T1.PostGP = 0 ORDER BY T1.points DESC LIMIT 1,"CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

CREATE TABLE `player_allstar` (
  playerID TEXT PRIMARY KEY REFERENCES players(playerID),
  last_name TEXT,
  first_name TEXT,
  season_id INTEGER PRIMARY KEY,
  conference TEXT,
  league_id TEXT,
  games_played INTEGER,
  minutes INTEGER,
  points INTEGER,
  o_rebounds INTEGER,
  d_rebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  personal_fouls INTEGER,
  fg_attempted INTEGER,
  fg_made INTEGER,
  ft_attempted INTEGER,
  ft_made INTEGER,
  three_attempted INTEGER,
  three_made INTEGER
);

",214,6.621185541152954,250,"['teams', 'player_allstar']"
1682,What is the customer's address for the shipment with ship ID 1117?,shipping,SELECT T2.address FROM shipment AS T1 INNER JOIN customer AS T2 ON T1.cust_id = T2.cust_id WHERE T1.ship_id = '1117',"CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",131,6.506273031234741,250,"['customer', 'shipment']"
1683,"Give the coordinate of the alleys where a crime was reported and an arrest was made. Hint: coordinate refers to latitude, longitude; alley refers to location_description = 'ALLEY'; an arrest was made refers to arrest = 'TRUE'",chicago_crime,"SELECT latitude, longitude FROM Crime WHERE location_description = 'ALLEY' AND arrest = 'TRUE' GROUP BY latitude, longitude","CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `ward` (
  ward_no INTEGER,
  alderman_first_name TEXT,
  alderman_last_name TEXT,
  alderman_name_suffix TEXT,
  ward_office_address TEXT,
  ward_office_zip TEXT,
  ward_email TEXT,
  ward_office_phone TEXT,
  ward_office_fax TEXT,
  city_hall_office_room INTEGER,
  city_hall_office_phone TEXT,
  city_hall_office_fax TEXT,
  Population INTEGER
);

",183,6.562252044677734,250,"['crime', 'ward']"
1684,How many universities had above 30% of international students in 2013? Hint: had above 30% of international students refers to pct_international_students > 30; in 2013 refers to year = 2013,university,SELECT COUNT(*) FROM university_year WHERE pct_international_students > 30 AND year = 2013,"CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

",188,6.572391748428345,250,['university_year']
1685,How many non-faculty members are not undergoing the phase of qualifications? Hint: non-faculty members refers to hasPosition = 0; are not undergoing the phase of qualifications refers to inPhase = 0,computer_student,SELECT COUNT(*) FROM person WHERE hasPosition = 0 AND inPhase = 0,"CREATE TABLE `person` (
  p_id INTEGER,
  professor INTEGER,
  student INTEGER,
  hasPosition TEXT,
  inPhase TEXT,
  yearsInProgram TEXT
);

",158,6.533552646636963,250,['person']
1686,What is the email address of the staff Jon Stephens?,movie_3,SELECT email FROM staff WHERE first_name = 'Jon' AND last_name = 'Stephens',"CREATE TABLE `staff` (
  staff_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address_id INTEGER REFERENCES address(None),
  picture BLOB,
  email TEXT,
  store_id INTEGER REFERENCES store(None),
  active INTEGER,
  username TEXT,
  password TEXT,
  last_update DATETIME
);

",175,6.55505633354187,250,['staff']
1687,"What is the full name of the actor who starred in most movies? Hint: full name refers to first_name, last_name; actor who starred in the most movies refers to actor_id where Max(Count(film_id))",movie_3,"SELECT T.first_name, T.last_name FROM ( SELECT T2.first_name, T2.last_name, COUNT(T1.film_id) AS num FROM film_actor AS T1 INNER JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.first_name, T2.last_name ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",216,6.628352880477905,250,"['actor', 'film_actor']"
1688,How many states are in the central time zone? Write their full names. Hint: central time zone refers to time_zone = 'Central',address,SELECT SUM(CASE WHEN T1.time_zone = 'Central' THEN 1 ELSE 0 END) AS count FROM zip_data AS T1 INNER JOIN state AS T2 ON T2.abbreviation = T1.state WHERE T1.time_zone = 'Central',"CREATE TABLE `state` (
  abbreviation TEXT PRIMARY KEY,
  name TEXT
);

",162,6.538213491439819,250,['state']
1689,How many businesses are registered in the database under 'Banks & Credit Unions' category? Hint: category refers to category_name,public_review_platform,SELECT COUNT(T2.business_id) FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id WHERE T1.category_name = 'Banks & Credit Unions',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",188,6.567556619644165,250,"['business', 'business_categories', 'categories']"
1690,How many unemployed students have payment due? Hint: have payment due refers to bool = 'pos';,student_loan,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN unemployed AS T2 ON T2.name = T1.name WHERE T1.bool = 'pos',"CREATE TABLE `unemployed` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

",172,6.557973384857178,250,"['unemployed', 'no_payment_due']"
1691,What are the complaint id of client who were born in 1931? Hint: in 1931 refers to year = 1931,retail_complains,SELECT T2.`Complaint ID` FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.year = 1931,"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",151,6.529720783233643,250,['client']
1692,"How many teams did the team with the most victories in 1915 play against?
Indicate the name of the team who won the most games in 1915, as well as the names of the opposing team. Hint: team playing refers to tmID; oppositng team refers to oppID; victories' and 'wins' are synonyms; most victories refers to max(w)",hockey,"SELECT COUNT(DISTINCT oppID), T2.tmID, T2.oppID FROM Teams AS T1 INNER JOIN TeamVsTeam AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID WHERE T2.year = 1915 GROUP BY T2.tmID, T2.oppID ORDER BY SUM(T2.W) DESC LIMIT 1","CREATE TABLE `teamvsTeam` (
  year INTEGER PRIMARY KEY REFERENCES Teams(year) REFERENCES Teams(year),
  lgID TEXT,
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  oppID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",307,6.826964378356934,250,"['teamvsTeam', 'teams']"
1693,"How many kinds of products are there in the the category of ""dairy products""? Hint: kinds of products refers to ProductID; category refers to CategoryName;",retail_world,SELECT COUNT(T1.ProductID) FROM Products AS T1 INNER JOIN Categories AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.CategoryName = 'Dairy Products',"CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `categories` (
  CategoryID INTEGER,
  CategoryName TEXT,
  Description TEXT
);

",169,6.546766042709351,250,"['products', 'categories']"
1694,How many action games are there in total? Hint: action game refers to genre_name = 'Action',video_games,SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Action',"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

CREATE TABLE `genre` (
  id INTEGER,
  genre_name TEXT
);

",151,6.5260374546051025,250,"['game', 'genre']"
1695,"What is the word id for title ""Sometent""? Hint: word id refers to wid",language_corpus,SELECT T2.wid FROM pages AS T1 INNER JOIN pages_words AS T2 ON T1.pid = T2.pid WHERE T1.title = 'Sometent',"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `words` (
  wid INTEGER,
  word TEXT PRIMARY KEY,
  occurrences INTEGER
);

",145,6.5193772315979,250,"['pages', 'words']"
1696,Lists all parts supplied by Supplier#000000034. Hint: part refers to p_name; Supplier#000000034 refers to s_name = 'Supplier#000000034',retails,SELECT T3.p_name FROM partsupp AS T1 INNER JOIN supplier AS T2 ON T1.ps_suppkey = T2.s_suppkey INNER JOIN part AS T3 ON T1.ps_partkey = T3.p_partkey WHERE T2.s_name = 'Supplier#000000034',"CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

",184,6.563011407852173,250,"['partsupp', 'supplier']"
1697,"What is the average of English books among all books published by Carole Marsh Mysteries? Hint: English book refers to language_name = 'English'; 'Carole Marsh Mysteries' is the publisher_name; average = Divide (Count(language_name = 'English'), Count(book_id))",books,SELECT CAST(SUM(CASE WHEN T1.language_name = 'English' THEN 1 ELSE 0 END) AS REAL) / COUNT(*) FROM book_language AS T1 INNER JOIN book AS T2 ON T1.language_id = T2.language_id INNER JOIN publisher AS T3 ON T3.publisher_id = T2.publisher_id WHERE T3.publisher_name = 'Carole Marsh Mysteries',"CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `book_language` (
  language_id INTEGER,
  language_code TEXT,
  language_name TEXT
);

CREATE TABLE `publisher` (
  publisher_id INTEGER,
  publisher_name TEXT
);

",235,6.6725122928619385,250,"['book', 'book_language', 'publisher']"
1698,How many transactions were paid through MasterCard in 2014? Hint: MasterCard refers to CreditCardType = 'MasterCard'; in 2014 refers to TransactionDate > = '2014-01-01' AND TransactionDate < = '2014-12-31';,beer_factory,SELECT COUNT(TransactionID) FROM `transaction` WHERE CreditCardType = 'MasterCard' AND TransactionDate LIKE '2014%',"CREATE TABLE `transaction` (
  TransactionID INTEGER,
  CreditCardNumber INTEGER,
  CustomerID INTEGER REFERENCES customers(CustomerID),
  TransactionDate DATE,
  CreditCardType TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  RootBeerID INTEGER REFERENCES rootbeer(RootBeerID),
  PurchasePrice REAL
);

",199,6.597577810287476,250,['transaction']
1699,"What are the sources for the data of children who finished primary school education in North American countries? Hint: North American is the name of the region; sources refer to Description; children who finished primary school education refer to IndicatorName = 'Out-of-school children of primary school age, both sexes (number)';",world_development_indicators,"SELECT DISTINCT T3.Description FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode INNER JOIN CountryNotes AS T3 ON T2.CountryCode = T3.Countrycode WHERE T1.Region = 'North America' AND T2.IndicatorName = 'Out-of-school children of primary school age, both sexes (number)'","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",185,6.560306549072266,250,"['country', 'indicators']"
1700,What number of words are there on revision page 27457362? Hint: This is not;,language_corpus,SELECT words FROM pages WHERE revision = 27457362,"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",151,6.5203163623809814,250,"['pages', 'pages_words']"
1701,How many women have apps from the game-Finding fault category installed on their device? Hint: women refers to gender = 'F'; installed refers to is_installed = 1;,talkingdata,SELECT COUNT(T1.device_id) FROM gender_age AS T1 INNER JOIN events_relevant AS T2 ON T1.device_id = T2.device_id INNER JOIN app_events_relevant AS T3 ON T2.event_id = T3.event_id WHERE T1.age < 23 AND T1.gender = 'F' AND T3.is_active = 0 AND T3.is_installed = 1,"CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

CREATE TABLE `app_all` (
  app_id INTEGER
);

CREATE TABLE `app_labels` (
  app_id INTEGER REFERENCES app_all(app_id),
  label_id INTEGER REFERENCES label_categories(label_id)
);

CREATE TABLE `label_categories` (
  label_id INTEGER,
  category TEXT
);

",208,6.608964681625366,250,"['gender_age', 'app_all', 'app_labels', 'label_categories']"
1702,"List the names of all the producers in the movie ""Pirates of the Caribbean: At World's End"". Hint: List the names refers to person_name; producers refers to job = 'Producer'; ""Pirates of the Caribbean: At World's End"" refers to title = 'Pirates of the Caribbean: The Curse of the Black Pearl'",movies_4,SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Pirates of the Caribbean: The Curse of the Black Pearl' AND T2.job = 'Producer',"CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

CREATE TABLE `movie_crew` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  department_id INTEGER REFERENCES department(department_id),
  job TEXT
);

",258,6.729358196258545,250,"['person', 'movie_crew']"
1703,How many shooter games are there? Hint: shooter games refers to game_name WHERE genre_name = 'shooter';,video_games,SELECT COUNT(T1.id) FROM game AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.id WHERE T2.genre_name = 'Shooter',"CREATE TABLE `game` (
  id INTEGER,
  genre_id INTEGER REFERENCES genre(id),
  game_name TEXT
);

CREATE TABLE `genre` (
  id INTEGER,
  genre_name TEXT
);

",157,6.531512975692749,250,"['game', 'genre']"
1704,"What is the GNP growth rate by the country of Shanghai? Hint: GNP growth rate = DIVIDE(SUBTRACT(GNP, GNPOld), GNPOld); Shanghai is a name of city;",world,SELECT CAST((T1.GNP - T1.GNPOld) AS REAL) / T1.GNPOld FROM Country AS T1 INNER JOIN City AS T2 ON T1.Code = T2.CountryCode WHERE T2.Name = 'Shanghai',"CREATE TABLE `city` (
  ID INTEGER,
  Name TEXT,
  CountryCode TEXT REFERENCES Country(Code),
  District TEXT,
  Population INTEGER
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",161,6.5360283851623535,250,"['city', 'country']"
1705,"In cities that do not implement daylight savings, what is the total number of cities? Hint: do not implement daylight savings refers to daylight_savings = 'No';",address,SELECT COUNT(T1.area_code) FROM area_code AS T1 INNER JOIN zip_data AS T2 ON T1.zip_code = T2.zip_code WHERE T2.daylight_savings = 'No',"CREATE TABLE `zip_congress` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  district TEXT PRIMARY KEY REFERENCES congress(cognress_rep_id)
);

",170,6.54892110824585,250,"['state', 'city']"
1706,Please give the highest product cost of a purchase order. Hint: product cost refers to ActualCost; purchase order refers to TransactionType = 'P';,works_cycles,SELECT ActualCost FROM TransactionHistory WHERE TransactionType = 'P' ORDER BY ActualCost DESC LIMIT 1,"CREATE TABLE `productcosthistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  StandardCost REAL,
  ModifiedDate DATETIME
);

CREATE TABLE `salesorderdetail` (
  SalesOrderID INTEGER REFERENCES SalesOrderHeader(SalesOrderID),
  SalesOrderDetailID INTEGER,
  CarrierTrackingNumber TEXT,
  OrderQty INTEGER,
  ProductID INTEGER REFERENCES SpecialOfferProduct(ProductID),
  SpecialOfferID INTEGER REFERENCES SpecialOfferProduct(SpecialOfferID),
  UnitPrice REAL,
  UnitPriceDiscount REAL,
  LineTotal REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",456,7.209176301956177,250,"['productcosthistory', 'salesorderdetail']"
1707,"In the parts supply by Supplier#000000654, list the top five parts with the most supply cost in descending order of supply cost. Hint: Supplier#000000654 is the name of the supplier which refers to s_name; parts with the most supply cost refer to ps_partkey where MAX(ps_supplycost);",retails,SELECT T2.ps_partkey FROM supplier AS T1 INNER JOIN partsupp AS T2 ON T1.s_suppkey = T2.ps_suppkey WHERE T1.s_name = 'Supplier#000000654' ORDER BY T2.ps_supplycost DESC LIMIT 5,"CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

",208,6.613484144210815,250,"['partsupp', 'supplier']"
1708,"Write down the author's name and IDs who are affiliated with Univeristiy of Oulu. Hint: ""University of Oulu"" is the Affiliation Organization",authors,"SELECT Name, id FROM Author WHERE Affiliation = 'University of Oulu'","CREATE TABLE `author` (
  Id INTEGER,
  Name TEXT,
  Affiliation TEXT
);

",152,6.526592493057251,250,['author']
1709,"How many ingredients must be rationed in the recipe ""Raspberry Chiffon Pie""? Hint: Raspberry Chiffon Pie refers to title; ingredient must be rationed refers to max_qty = min_qty",cookbook,SELECT COUNT(*) FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T2.max_qty = T2.min_qty,"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",164,6.539346218109131,250,"['quantity', 'recipe', 'ingredient']"
1710,Identify the number of movies rented by Maria Miller.,movie_3,SELECT COUNT(T2.rental_id) FROM customer AS T1 INNER JOIN rental AS T2 ON T1.customer_id = T2.customer_id WHERE T1.first_name = 'Maria' AND T1.last_name = 'Miller',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",175,6.547765016555786,250,"['actor', 'rental', 'customer']"
1711,What is the word id of the catalan language that was repeated no more than 10 times in the said language? Hint: word id refers to wid; repeated no more than 10 times refers to occurrences < = 10,language_corpus,SELECT wid FROM langs_words WHERE occurrences <= 10,"CREATE TABLE `langs` (
  lid INTEGER,
  lang TEXT PRIMARY KEY,
  locale TEXT PRIMARY KEY,
  pages INTEGER,
  words INTEGER
);

CREATE TABLE `langs_words` (
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",176,6.548124313354492,250,"['langs', 'langs_words']"
1712,"Among the universities in United States of America, what is the percentage of female students in year 2016? Hint: female students refers to DIVIDE(MULTIPLY(num_students, pct_female_students), 100); in United States of America refers to country_name = 'United States of America'; percentage refers to DIVIDE(SUM(DIVIDE(MULTIPLY(num_students, pct_female_students), 100)), SUM(num_students))",university,SELECT SUM(CAST(T2.pct_female_students * T2.num_students AS REAL) / 100) * 100 / SUM(T2.num_students) FROM university AS T1 INNER JOIN university_year AS T2 ON T1.id = T2.university_id INNER JOIN country AS T3 ON T3.id = T1.country_id WHERE T3.country_name = 'United States of America' AND T2.year = 2016,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_year` (
  university_id INTEGER REFERENCES university(id),
  year INTEGER,
  num_students INTEGER,
  student_staff_ratio REAL,
  pct_international_students INTEGER,
  pct_female_students INTEGER
);

CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

",250,6.6915953159332275,250,"['university', 'university_year', 'country']"
1713,"What is the average rating of all the movies starring Tom Cruise? Hint: starring Tom Cruise refers to name = 'Tom Cruise'; average rating = divide(sum(rating where name = 'Tom Cruise'), count(movieid where name = 'Tom Cruise'))",movie,SELECT AVG(T1.Rating) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise',"CREATE TABLE `movie` (
  MovieID INTEGER,
  Title TEXT,
  MPAA Rating TEXT,
  Budget INTEGER,
  Gross INTEGER,
  Release Date TEXT,
  Genre TEXT,
  Runtime INTEGER,
  Rating REAL,
  Rating Count INTEGER,
  Summary TEXT
);

CREATE TABLE `actor` (
  ActorID INTEGER,
  Name TEXT,
  Date of Birth DATE,
  Birth City TEXT,
  Birth Country TEXT,
  Height (Inches) INTEGER,
  Biography TEXT,
  Gender TEXT,
  Ethnicity TEXT,
  NetWorth TEXT
);

CREATE TABLE `characters` (
  MovieID INTEGER PRIMARY KEY REFERENCES movie(MovieID),
  ActorID INTEGER PRIMARY KEY REFERENCES actor(ActorID),
  Character Name TEXT,
  creditOrder INTEGER,
  pay TEXT,
  screentime TEXT
);

",166,6.542207479476929,250,"['movie', 'actor', 'characters']"
1714,State the publisher name for publisher ID 877? Calculate its average year to date sales. Hint: publisher id refers to pub_id; publisher name refers to pub_name; average year to date sales = AVG(ytd_sales),book_publishing_company,"SELECT T2.pub_name, AVG(T1.ytd_sales) FROM titles AS T1 INNER JOIN publishers AS T2 ON T1.pub_id = T2.pub_id WHERE T1.pub_id = '0877' GROUP BY T2.pub_name","CREATE TABLE `publishers` (
  pub_id TEXT PRIMARY KEY,
  pub_name TEXT,
  city TEXT,
  state TEXT,
  country TEXT
);

",195,6.596062660217285,250,['publishers']
1715,What is the age group of most OPPO users? Hint: age group refers to group; most OPPO users refers to MAX(COUNT(phone_brand = 'OPPO')); OPPO users refers to phone_brand = 'OPPO';,talkingdata,"SELECT T.`group` FROM ( SELECT T1.`group`, COUNT(T1.`group`) AS num FROM gender_age AS T1 INNER JOIN phone_brand_device_model2 AS T2 ON T1.device_id = T2.device_id WHERE T2.phone_brand = 'OPPO' GROUP BY T1.`group` ) AS T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

CREATE TABLE `phone_brand_device_model2` (
  device_id INTEGER PRIMARY KEY,
  phone_brand TEXT PRIMARY KEY,
  device_model TEXT PRIMARY KEY
);

",221,6.630979537963867,250,"['gender_age', 'phone_brand_device_model2']"
1716,Calculate the total number of sales closed by Michel E. DeFrance?,sales,SELECT COUNT(T1.SalesID) FROM Sales AS T1 INNER JOIN Employees AS T2 ON T1.SalesPersonID = T2.EmployeeID WHERE T2.FirstName = 'Michel' AND T2.MiddleInitial = 'e' AND T2.LastName = 'DeFrance',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

CREATE TABLE `sales` (
  SalesID INTEGER,
  SalesPersonID INTEGER REFERENCES Employees(EmployeeID),
  CustomerID INTEGER REFERENCES Customers(CustomerID),
  ProductID INTEGER REFERENCES Products(ProductID),
  Quantity INTEGER
);

",127,6.466853380203247,250,"['employees', 'sales']"
1717,"Of all the teams that played as a team away against Caen in the 2010 season, which one has the highest winning percentage? Hint: Caen refers to HomeTeam; which one refers to AwayTeam; the highest winning percentage = MAX(DIVIDE(COUNT(FTR = 'A' where HomeTeam = 'Caen', season = '2010')), COUNT(Div where HomeTeam = 'Caen', season = '2010')) as percentage;",european_football_1,SELECT AwayTeam FROM matchs WHERE HomeTeam = 'Caen' AND season = 2010 AND FTR = 'A' GROUP BY AwayTeam ORDER BY COUNT(AwayTeam) DESC LIMIT 1,"CREATE TABLE `matchs` (
  Div TEXT REFERENCES divisions(division),
  Date DATE,
  HomeTeam TEXT,
  AwayTeam TEXT,
  FTHG INTEGER,
  FTAG INTEGER,
  FTR TEXT,
  season INTEGER
);

",208,6.6101343631744385,250,['matchs']
1718,Which territories is the employee with a doctorate in charge of? List all of the territory descriptions. Hint: with a doctorate refers to TitleOfCourtesy = 'Dr.',retail_world,SELECT T3.TerritoryDescription FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T1.TitleOfCourtesy = 'Dr.',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",174,6.547212600708008,250,['employees']
1719,"List down the full name of clients who have disputed the response from company. Hint: full name refers to first, middle, last; disputed the response refers to Consumer disputed? = 'Yes'",retail_complains,"SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.`Consumer disputed?` = 'Yes'","CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `callcenterlogs` (
  Date received DATE,
  Complaint ID TEXT PRIMARY KEY,
  rand client TEXT REFERENCES client(client_id),
  phonefinal TEXT,
  vru+line TEXT,
  call_id INTEGER,
  priority INTEGER,
  type TEXT,
  outcome TEXT,
  server TEXT,
  ser_start TEXT,
  ser_exit TEXT,
  ser_time TEXT
);

",161,6.53311562538147,250,"['client', 'callcenterlogs']"
1720,Provide the homepage of the Bahasa Indonesia movies. Hint: Bahasa Indonesia movies refers to language_name = 'Bahasa indonesia',movies_4,SELECT DISTINCT T1.homepage FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Bahasa indonesia',"CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `language` (
  language_id INTEGER,
  language_code TEXT,
  language_name TEXT
);

",213,6.6174561977386475,250,"['movie', 'language']"
1721,On which streets in the city of San Francisco are there restaurants with a review of 1.7? Hint: street refers to street_name; review of 1.7 refers to review = 1.7,restaurant,SELECT T2.street_name FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T1.city = 'san francisco' AND T1.review = 1.7,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

CREATE TABLE `generalinfo` (
  id_restaurant INTEGER,
  label TEXT,
  food_type TEXT,
  city TEXT REFERENCES geographic(city),
  review REAL
);

",149,6.522649049758911,250,"['location', 'generalinfo']"
1722,"For each donation not from a teacher, state the donor account id and calculate the percentage of donation given for optional support. Hint: not from a teacher refers to is_teacher_acct = 'f'; donor account id refers to donor_acctid; percentage of donation = divide(donation_optional_support, donation_total)*100%",donor,"SELECT donor_acctid, donation_optional_support / donation_total FROM donations WHERE is_teacher_acct = 'f'","CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

CREATE TABLE `essays` (
  projectid TEXT,
  teacher_acctid TEXT,
  title TEXT,
  short_description TEXT,
  need_statement TEXT,
  essay TEXT
);

",194,6.595149755477905,250,"['donations', 'essays']"
1723,How many Yelp_Businesses are there in Arizona in total? Hint: Arizona refers to state = 'AZ';,public_review_platform,SELECT COUNT(business_id) FROM Business WHERE state LIKE 'AZ',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",187,6.563638925552368,250,['business']
1724,List the name of all New Zealand umpires. Hint: New Zealand umpires refers to Country_Name = 'New Zealand'; name of umpires refers to Umpire_Name,soccer_2016,SELECT T1.Umpire_Name FROM Umpire AS T1 INNER JOIN Country AS T2 ON T1.Umpire_Country = T2.Country_Id WHERE T2.Country_Name = 'New Zealand',"CREATE TABLE `Wicket_Taken` (
  Match_Id INTEGER PRIMARY KEY REFERENCES Match(Match_Id),
  Over_Id INTEGER PRIMARY KEY,
  Ball_Id INTEGER PRIMARY KEY,
  Player_Out INTEGER REFERENCES Player(Player_Id),
  Kind_Out INTEGER REFERENCES Out_Type(Out_Id),
  Fielders INTEGER REFERENCES Player(Player_Id),
  Innings_No INTEGER PRIMARY KEY
);

",239,6.67289924621582,250,"['umpires', 'country']"
1725,"Please list the area name of the communities in the Far north side, which has a population of more than 50000 but less than 70000. Hint: area name refers to community_area_name; the Far north side refers to side = 'Far North'; a population of more than 50000 but less than 70000 refers to population BETWEEN '50000' AND '70000'",chicago_crime,"SELECT community_area_name, side FROM Community_Area WHERE side = 'Far North ' AND population BETWEEN 50000 AND 70000","CREATE TABLE `community_area` (
  community_area_no INTEGER,
  community_area_name TEXT,
  side TEXT,
  population TEXT
);

",234,6.654464960098267,250,['community_area']
1726,How many businesses are actively running in Gilbert City? Hint: actively running refers to active = 'true';,public_review_platform,SELECT COUNT(business_id) FROM Business WHERE city LIKE 'Gilbert' AND active LIKE 'True',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

",183,6.560041904449463,250,['business']
1727,What are the categories of businesses that have opening time on Sunday? Hint: categories of businesses refer to category_name; Sunday refers to day_of_week where day_id = 1;,public_review_platform,SELECT DISTINCT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business_Hours AS T3 ON T2.business_id = T3.business_id INNER JOIN Days AS T4 ON T3.day_id = T4.day_id WHERE T4.day_of_week = 'Sunday' AND T3.opening_time <> '',"CREATE TABLE `business_hours` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  day_id INTEGER PRIMARY KEY REFERENCES Days(None),
  opening_time TEXT,
  closing_time TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",200,6.6056811809539795,250,"['business_hours', 'business_categories', 'categories']"
1728,"What is the education required for David Whitehead to reach his current position? Hint: David Whitehead is the full name of an employee; full name = firstname, lastname",human_resources,SELECT T2.educationrequired FROM employee AS T1  INNER JOIN position AS T2  ON T1.positionID = T2.positionID WHERE T1.firstname = 'David' AND T1.lastname = 'Whitehead' AND T1.gender = 'M',"CREATE TABLE `position` (
  positionID INTEGER,
  positiontitle TEXT,
  educationrequired TEXT,
  minsalary TEXT,
  maxsalary TEXT
);

CREATE TABLE `employee` (
  ssn TEXT PRIMARY KEY,
  lastname TEXT,
  firstname TEXT,
  hiredate TEXT,
  salary TEXT,
  gender TEXT,
  performance TEXT,
  positionID INTEGER REFERENCES position(positionID),
  locationID INTEGER REFERENCES location(locationID)
);

",141,6.520815134048462,250,"['position', 'employee']"
1729,"What's the average rating score of the movie ""A Way of Life""? Hint: A Way of Life' is movie_title; average rating score = Divide (Sum(rating_score), Count(rating_id));",movie_platform,SELECT AVG(T1.rating_score) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life',"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

",164,6.544333219528198,250,"['movies', 'ratings']"
1730,How many times was episode 20 of the Law and Order series nominated for the Primetime Emmy Awards in 1999? Hint: nominated refers to result = 'nominee'; the Law and Order series refers to series = 'Law and Order'; the Primetime Emmy Awards refers to organization = 'Primetime Emmy Awards'; in 1999 refers to year = 1999,law_episode,SELECT COUNT(T2.award_id) FROM Episode AS T1 INNER JOIN Award AS T2 ON T1.episode_id = T2.episode_id WHERE T2.year = 1999 AND T2.result = 'Nominee' AND T1.episode = 20 AND T2.organization = 'Primetime Emmy Awards' AND T1.series = 'Law and Order',"CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  series TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  person_id TEXT REFERENCES Person(person_id),
  role TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",206,6.613022089004517,250,"['award', 'episode']"
1731,"What is the long name of the country with the description ""Estimates are derived from data on foreign-born population."" on the series code SM.POP.TOTL?",world_development_indicators,SELECT T1.LongName FROM Country AS T1 INNER JOIN CountryNotes AS T2 ON T1.CountryCode = T2.Countrycode WHERE T2.Description = 'Estimates are derived FROM data on foreign-born population.' AND T2.Seriescode = 'SM.POP.TOTL',"CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `countrynotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Description TEXT
);

CREATE TABLE `series` (
  SeriesCode TEXT PRIMARY KEY,
  Topic TEXT,
  IndicatorName TEXT,
  ShortDefinition TEXT,
  LongDefinition TEXT,
  UnitOfMeasure TEXT,
  Periodicity TEXT,
  BasePeriod TEXT,
  OtherNotes INTEGER,
  AggregationMethod TEXT,
  LimitationsAndExceptions TEXT,
  NotesFromOriginalSource TEXT,
  GeneralComments TEXT,
  Source TEXT,
  StatisticalConceptAndMethodology TEXT,
  DevelopmentRelevance TEXT,
  RelatedSourceLinks TEXT,
  OtherWebLinks INTEGER,
  RelatedIndicators INTEGER,
  LicenseType TEXT
);

CREATE TABLE `seriesnotes` (
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Year TEXT PRIMARY KEY,
  Description TEXT
);

",155,6.533666610717773,250,"['country', 'countrynotes', 'series', 'seriesnotes']"
1732,Which year has the most number of video game releases? Hint: year that has the most number of video game releases refers to MAX(COUNT(release_year));,video_games,"SELECT T1.release_year FROM ( SELECT T.release_year, COUNT(id) FROM game_platform AS T GROUP BY T.release_year ORDER BY COUNT(T.id) DESC LIMIT 1 ) T1","CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

",162,6.536712884902954,250,['game_publisher']
1733,List the ingredients which measure in slices. Hint: slices refers to unit = 'slice(s)',cookbook,SELECT T1.name FROM Ingredient AS T1 INNER JOIN Quantity AS T2 ON T1.ingredient_id = T2.ingredient_id WHERE T2.unit = 'slice(s)',"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",134,6.505964040756226,250,"['quantity', 'ingredient']"
1734,How much did Petit Auto pay on 2004-08-09? Hint: Petit Auto is name of customer; paymentDate = '2004-08-09';,car_retails,SELECT t1.amount FROM payments AS t1 INNER JOIN customers AS t2 ON t1.customerNumber = t2.customerNumber WHERE t2.customerName = 'Petit Auto' AND t1.paymentDate = '2004-08-09',"CREATE TABLE `payments` (
  customerNumber INTEGER PRIMARY KEY REFERENCES customers(customerNumber),
  checkNumber TEXT PRIMARY KEY,
  paymentDate DATE,
  amount REAL
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",170,6.5449583530426025,250,"['payments', 'customers']"
1735,"Calculate the average game sales for the PS2 platform. Hint: average = AVG(MULTIPLY(num_sales), 100000); PS2 refers to platform_name = 'PS2';",video_games,SELECT SUM(T3.num_sales * 100000) / COUNT(T1.id) FROM platform AS T1 INNER JOIN game_platform AS T2 ON T1.id = T2.platform_id INNER JOIN region_sales AS T3 ON T2.id = T3.game_platform_id WHERE T1.platform_name = 'PS2',"CREATE TABLE `platform` (
  id INTEGER,
  platform_name TEXT
);

CREATE TABLE `region_sales` (
  region_id INTEGER REFERENCES region(id),
  game_platform_id INTEGER REFERENCES game_platform(id),
  num_sales REAL
);

CREATE TABLE `game_platform` (
  id INTEGER,
  game_publisher_id INTEGER REFERENCES game_publisher(id),
  platform_id INTEGER REFERENCES platform(id),
  release_year INTEGER
);

",178,6.554468631744385,250,"['platform', 'region_sales', 'game_platform']"
1736,State the country where the most positive sentiment tweets were posted. Hint: country with the most positive sentiment tweet refers to Country where Max(Count(Sentiment > 0)),social_media,"SELECT T.Country FROM ( SELECT T2.Country, SUM(T1.Sentiment) AS num FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.Sentiment > 0 GROUP BY T2.Country ) T ORDER BY T.num DESC LIMIT 1","CREATE TABLE `twitter` (
  TweetID TEXT PRIMARY KEY,
  Weekday TEXT,
  Hour INTEGER,
  Day INTEGER,
  Lang TEXT,
  IsReshare TEXT,
  Reach INTEGER,
  RetweetCount INTEGER,
  Likes INTEGER,
  Klout INTEGER,
  Sentiment REAL,
  text TEXT,
  LocationID INTEGER REFERENCES location(LocationID),
  UserID TEXT REFERENCES user(UserID)
);

CREATE TABLE `location` (
  LocationID INTEGER,
  Country TEXT,
  State TEXT,
  StateCode TEXT,
  City TEXT
);

",139,6.514512777328491,250,"['twitter', 'location']"
1737,"For the episode who won the award held by Jupiter Award, describe award name, aired date and rating of that episode. Hint: held by Jupiter Award refers to organization = 'Jupiter Award'; won the award refers to result = 'Winner'",simpson_episodes,"SELECT T1.award, T2.air_date, T2.rating FROM Award AS T1 INNER JOIN Episode AS T2 ON T1.episode_id = T2.episode_id WHERE T1.organization = 'Jupiter Award' AND T1.result = 'Winner';","CREATE TABLE `award` (
  award_id INTEGER,
  organization TEXT,
  year INTEGER,
  award_category TEXT,
  award TEXT,
  person TEXT REFERENCES Person(name),
  role TEXT,
  episode_id TEXT REFERENCES Episode(episode_id),
  season TEXT,
  song TEXT,
  result TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",177,6.557965278625488,250,"['award', 'episode']"
1738,"How many interactions did Lorri Simons have with medical professionals between 2010 and 2017? What percentage of encounters are attributed to prenatal visits? Hint: between 2010 and 2017 refers to substr(encounters.DATE, 1, 4) between '2010' and '2017'; percentage = MULTIPLY(DIVIDE(COUNT(encounters.ID WHERE DESCRIPTION = 'Prenatal visit'), count(encounters.ID)), 1.0); prenatal visits refers to encounters.DESCRIPTION = 'Prenatal visit';",synthea,"SELECT COUNT(T1.patient) , CAST(SUM(CASE WHEN T2.DESCRIPTION = 'Prenatal visit' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.patient) FROM patients AS T1 INNER JOIN encounters AS T2 ON T1.patient = T2.PATIENT WHERE T1.first = 'Lorri' AND T1.last = 'Simonis' AND strftime('%Y', T2.DATE) BETWEEN '2010' AND '2017'","CREATE TABLE `patients` (
  patient TEXT PRIMARY KEY,
  birthdate DATE,
  deathdate DATE,
  ssn TEXT,
  drivers TEXT,
  passport TEXT,
  prefix TEXT,
  first TEXT,
  last TEXT,
  suffix TEXT,
  maiden TEXT,
  marital TEXT,
  race TEXT,
  ethnicity TEXT,
  gender TEXT,
  birthplace TEXT,
  address TEXT
);

CREATE TABLE `encounters` (
  ID TEXT PRIMARY KEY,
  DATE DATE,
  PATIENT TEXT REFERENCES patients(patient),
  CODE INTEGER,
  DESCRIPTION TEXT,
  REASONCODE INTEGER,
  REASONDESCRIPTION TEXT
);

",286,6.7839741706848145,250,"['patients', 'encounters']"
1739,"With 100$, how many Cable Lock can you buy? Hint: number of products a $100 can buy = DIVIDE(100, ListPrice);",works_cycles,SELECT 100 / T2.ListPrice FROM Product AS T1 INNER JOIN ProductListPriceHistory AS T2 ON T1.ProductID = T2.ProductID WHERE T1.Name = 'Cable Lock',"CREATE TABLE `Product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `ProductListPriceHistory` (
  ProductID INTEGER PRIMARY KEY REFERENCES Product(ProductID),
  StartDate DATE PRIMARY KEY,
  EndDate DATE,
  ListPrice REAL,
  ModifiedDate DATETIME
);

",464,7.223186254501343,250,"['Product', 'ProductListPriceHistory']"
1740,"Calculate the percentage of total payment of MARGARET MOORE customers. Hint: percentage = divide(sum(amount where first_name = 'MARGARET' and last_name = 'MOORE'), sum(amount)) * 100%",movie_3,"SELECT CAST(SUM(IIF(T2.first_name = 'MARGARET' AND T2.last_name = 'MOORE', T1.amount, 0)) AS REAL) * 100 / SUM(T1.amount) FROM payment AS T1 INNER JOIN customer AS T2 ON T1.customer_id = T2.customer_id","CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",219,6.627718210220337,250,"['payment', 'customer']"
1741,In which Olympic Games have the largest number of women participation? Hint: the largest number of women participation refers to MAX(COUNT(gender = 'F')); In which Olympic Games refer to games_year;,olympics,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN person AS T3 ON T2.person_id = T3.id WHERE T3.gender = 'F' GROUP BY T1.games_name ORDER BY COUNT(T2.person_id) DESC LIMIT 1,"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",190,6.5644214153289795,250,"['games', 'games_competitor']"
1742,"What is the average profit of all the low class universal road frames? Indicate how many variety of sizes are there and the available colors. Hint: low class refers to Class = 'L'; universal refers to Style = 'U'; road frame is a name of product subcategory; average profit = AVG(SUBTRACT(ListPrice, StandardCost);",works_cycles,"SELECT AVG(T1.ListPrice - T1.StandardCost), COUNT(DISTINCT T1.Size) , COUNT(DISTINCT T1.Style) FROM Product AS T1 INNER JOIN ProductSubcategory AS T2 ON T1.ProductSubcategoryID = T2.ProductSubcategoryID WHERE T1.Class = 'L' AND T2.Name = 'Road Frames' GROUP BY T1.Class, T1.Color","CREATE TABLE `product` (
  ProductID INTEGER,
  Name TEXT PRIMARY KEY,
  ProductNumber TEXT PRIMARY KEY,
  MakeFlag INTEGER,
  FinishedGoodsFlag INTEGER,
  Color TEXT,
  SafetyStockLevel INTEGER,
  ReorderPoint INTEGER,
  StandardCost REAL,
  ListPrice REAL,
  Size TEXT,
  SizeUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  WeightUnitMeasureCode TEXT REFERENCES UnitMeasure(None),
  Weight REAL,
  DaysToManufacture INTEGER,
  ProductLine TEXT,
  Class TEXT,
  Style TEXT,
  ProductSubcategoryID INTEGER REFERENCES ProductSubcategory(None),
  ProductModelID INTEGER REFERENCES ProductModel(None),
  SellStartDate DATETIME,
  SellEndDate DATETIME,
  DiscontinuedDate DATETIME,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `productsubcategory` (
  ProductSubcategoryID INTEGER,
  ProductCategoryID INTEGER REFERENCES ProductCategory(ProductCategoryID),
  Name TEXT PRIMARY KEY,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",497,7.3003222942352295,250,"['product', 'productsubcategory']"
1743,List the languages used in the USA. Hint: USA refers to CountryCode = 'USA';,world,SELECT Language FROM CountryLanguage WHERE CountryCode = 'USA',"CREATE TABLE `countrylanguage` (
  CountryCode TEXT PRIMARY KEY REFERENCES Country(Code),
  Language TEXT PRIMARY KEY,
  IsOfficial TEXT,
  Percentage REAL
);

CREATE TABLE `country` (
  Code TEXT PRIMARY KEY,
  Name TEXT,
  Continent TEXT,
  Region TEXT,
  SurfaceArea REAL,
  IndepYear INTEGER,
  Population INTEGER,
  LifeExpectancy REAL,
  GNP REAL,
  GNPOld REAL,
  LocalName TEXT,
  GovernmentForm TEXT,
  HeadOfState TEXT,
  Capital INTEGER,
  Code2 TEXT
);

",131,6.502945423126221,250,"['countrylanguage', 'country']"
1744,"Name the goalie and the season he played where he had 5% shutouts among the number of goals recorded while the goalie was on the ice. Hint: shutouts refers to SHO; number of goals refers to GA; 5% shutouts among the number of goals refers to DIVIDE(SHO,GA)*100 = 5.00",hockey,"SELECT DISTINCT T1.firstName, T1.lastName, T2.year FROM Master AS T1 INNER JOIN ( SELECT playerID, year FROM Goalies WHERE CAST(SHO AS REAL) / GA > 0.05 ) AS T2 ON T2.playerID = T1.playerID","CREATE TABLE `goalies` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  stint INTEGER PRIMARY KEY,
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP TEXT,
  Min TEXT,
  W TEXT,
  L TEXT,
  T/OL TEXT,
  ENG TEXT,
  SHO TEXT,
  GA TEXT,
  SA TEXT,
  PostGP TEXT,
  PostMin TEXT,
  PostW TEXT,
  PostL TEXT,
  PostT TEXT,
  PostENG TEXT,
  PostSHO TEXT,
  PostGA TEXT,
  PostSA TEXT
);

CREATE TABLE `goaliessc` (
  playerID TEXT PRIMARY KEY REFERENCES Master(playerID),
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT REFERENCES Teams(tmID),
  lgID TEXT,
  GP INTEGER,
  Min INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  SHO INTEGER,
  GA INTEGER
);

CREATE TABLE `goaliesshootout` (
  playerID TEXT REFERENCES Master(playerID),
  year INTEGER REFERENCES Teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES Teams(tmID),
  W INTEGER,
  L INTEGER,
  SA INTEGER,
  GA INTEGER
);

",290,6.792529582977295,250,"['goalies', 'goaliessc', 'goaliesshootout']"
1745,"What is the category and itune url of the title ""Scaling Global""?",music_platform_2,"SELECT T1.category, T2.itunes_url FROM categories AS T1 INNER JOIN podcasts AS T2 ON T2.podcast_id = T1.podcast_id WHERE T2.title = 'Scaling Global'","CREATE TABLE `podcasts` (
  podcast_id TEXT PRIMARY KEY,
  itunes_id INTEGER,
  slug TEXT,
  itunes_url TEXT,
  title TEXT
);

CREATE TABLE `categories` (
  podcast_id TEXT PRIMARY KEY REFERENCES podcasts(None),
  category TEXT PRIMARY KEY
);

",127,6.467151880264282,250,"['podcasts', 'categories']"
1746,"What is the percentage of the payment amount in 2004 was made by Atelier graphique? Hint: DIVIDE(SUM(amount) where customerName = 'Atelier graphique'), (SUM(amount)) as percentage where year(paymentDate) = 2004;",car_retails,"SELECT SUM(CASE WHEN t1.customerName = 'Atelier graphique' THEN t2.amount ELSE 0 END) * 100 / SUM(t2.amount) FROM customers AS t1 INNER JOIN payments AS t2 ON t1.customerNumber = t2.customerNumber WHERE STRFTIME('%Y', t2.paymentDate) = '2004'","CREATE TABLE `payments` (
  customerNumber INTEGER PRIMARY KEY REFERENCES customers(customerNumber),
  checkNumber TEXT PRIMARY KEY,
  paymentDate DATE,
  amount REAL
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",191,6.568830728530884,250,"['payments', 'customers']"
1747,"In March 2014, which weather stations recorded the highest number of days whose temperature is below the 30-year normal? Hint: in March 2014 refers to substring (date, 1, 4) = '2014' and substring (date, 6, 2) = '03'; temperature is below the 30-year normal refers to depart < 0; highest number of days refers to Max(Count(date))",sales_in_weather,"SELECT station_nbr FROM weather WHERE SUBSTR(`date`, 1, 4) = '2014' AND SUBSTR(`date`, 6, 2) = '03' AND depart < 0 GROUP BY station_nbr HAVING COUNT(DISTINCT `date`) = ( SELECT COUNT(DISTINCT `date`) FROM weather WHERE SUBSTR(`date`, 1, 4) = '2014' AND SUBSTR(`date`, 6, 2) = '03' AND depart < 0 GROUP BY station_nbr ORDER BY COUNT(`date`) DESC LIMIT 1 )","CREATE TABLE `weather` (
  station_nbr INTEGER PRIMARY KEY,
  date DATE PRIMARY KEY,
  tmax INTEGER,
  tmin INTEGER,
  tavg INTEGER,
  depart INTEGER,
  dewpoint INTEGER,
  wetbulb INTEGER,
  heat INTEGER,
  cool INTEGER,
  sunrise TEXT,
  sunset TEXT,
  codesum TEXT,
  snowfall REAL,
  preciptotal REAL,
  stnpressure REAL,
  sealevel REAL,
  resultspeed REAL,
  resultdir INTEGER,
  avgspeed REAL
);

CREATE TABLE `relation` (
  store_nbr INTEGER REFERENCES sales_in_weather(store_nbr),
  station_nbr INTEGER REFERENCES weather(station_nbr)
);

",212,6.6222734451293945,250,"['weather', 'relation']"
1748,"What is the attribute value of an active business with a high review count and 3 stars which is located at Mesa, AZ? Hint: active business refers to active = 'true'; located at Mesa, AZ refers to city = 'Mesa', state = 'AZ'",public_review_platform,SELECT T2.attribute_value FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T1.state LIKE 'AZ' AND T1.review_count LIKE 'High' AND T1.active LIKE 'TRUE' AND T1.city LIKE 'Mesa' AND T1.stars = 3,"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

",219,6.627216339111328,250,"['business', 'business_attributes', 'attributes']"
1749,Enumerate the footnote narratives of The Bahamas under the series code SH.DTH.IMRT in the year 1984. Hint: narratives is Description; The Bahamas is the name of the country where Country = 'The Bahamas',world_development_indicators,SELECT DISTINCT T1.Description FROM FootNotes AS T1 INNER JOIN Country AS T2 ON T1.Countrycode = T2.CountryCode WHERE T1.Year = 'YR1984' AND T2.ShortName = 'The Bahamas' AND T1.Seriescode = 'SH.DTH.IMRT',"CREATE TABLE `footnotes` (
  Countrycode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  Seriescode TEXT PRIMARY KEY REFERENCES Series(SeriesCode),
  Year TEXT PRIMARY KEY,
  Description TEXT
);

CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

",176,6.5517613887786865,250,"['footnotes', 'country']"
1750,List the phone numbers of suppliers from Japan. Hint: phone number refers to s_phone; Japan refers to n_name = 'JAPAN',retails,SELECT T1.s_phone FROM supplier AS T1 INNER JOIN nation AS T2 ON T1.s_nationkey = T2.n_nationkey WHERE T2.n_name = 'JAPAN',"CREATE TABLE `supplier` (
  s_suppkey INTEGER,
  s_nationkey INTEGER REFERENCES nation(n_nationkey),
  s_comment TEXT,
  s_name TEXT,
  s_address TEXT,
  s_phone TEXT,
  s_acctbal REAL
);

CREATE TABLE `nation` (
  n_nationkey INTEGER,
  n_name TEXT,
  n_regionkey INTEGER REFERENCES region(r_regionkey),
  n_comment TEXT
);

",155,6.528301954269409,250,"['supplier', 'nation']"
1751,Please list all the categories of the Yelp_Business in Arizona. Hint: categories refers to category_name; in Arizona refers to state = 'AZ',public_review_platform,SELECT T1.category_name FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id WHERE T3.state LIKE 'AZ' GROUP BY T1.category_name,"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",195,6.596572399139404,250,"['business', 'business_categories', 'categories']"
1752,"Among the Olympic games held in Los Angeles, what is the name of the Olympic game that has the most number of competitors? Hint: Los Angeles refers to city_name = 'Lost Angeles'; the Olympic game refers to games_name; the most number of competitors refers to MAX(COUNT(games_name));",olympics,SELECT T1.games_name FROM games AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.games_id INNER JOIN games_city AS T3 ON T2.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id WHERE T4.city_name = 'Los Angeles' GROUP BY T1.id ORDER BY COUNT(T2.person_id) DESC LIMIT 1,"CREATE TABLE `games` (
  id INTEGER,
  games_year INTEGER,
  games_name TEXT,
  season TEXT
);

CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

",213,6.620036840438843,250,"['games', 'games_city', 'city']"
1753,Which teams did SC Ganguly join in season year 2008? Hint: SC Ganguly refers to Player_Name = 'SC Ganguly'; in season year 2008 refers to Season_Year = 2008,soccer_2016,SELECT T5.Team_Name FROM Player AS T1 INNER JOIN Match AS T2 ON T1.Player_Id = T2.Man_of_the_Match INNER JOIN Player_Match AS T3 ON T3.Player_Id = T1.Player_Id INNER JOIN Season AS T4 ON T2.Season_Id = T4.Season_Id INNER JOIN Team AS T5 ON T3.Team_Id = T5.Team_Id WHERE T4.Season_Year = 2008 AND T1.Player_Name = 'SC Ganguly' GROUP BY T5.Team_Name,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `season` (
  Season_Id INTEGER,
  Man_of_the_Series INTEGER,
  Orange_Cap INTEGER,
  Purple_Cap INTEGER,
  Season_Year INTEGER
);

",255,6.697015762329102,250,"['player', 'season']"
1754,How many of the users who rate the movie with the id '2462959' are female? Hint: Female users mean that u_gender = 'F',movielens,SELECT COUNT(T1.userid) FROM users AS T1 INNER JOIN u2base AS T2 ON T1.userid = T2.userid WHERE T2.userid = 2462959 AND T1.u_gender = 'F',"CREATE TABLE `u2base` (
  userid INTEGER PRIMARY KEY REFERENCES users(None),
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  rating TEXT
);

CREATE TABLE `users` (
  userid INTEGER,
  age TEXT,
  u_gender TEXT,
  occupation TEXT
);

",168,6.543110609054565,250,"['u2base', 'users']"
1755,Please list the names of all the games published by 10TACLE Studios. Hint: name refers to game_name; published by 10TACLE Studios refers to publisher_name = '10TACLE Studios',video_games,SELECT T1.game_name FROM game AS T1 INNER JOIN game_publisher AS T2 ON T1.id = T2.game_id INNER JOIN publisher AS T3 ON T2.publisher_id = T3.id WHERE T3.publisher_name = '10TACLE Studios',"CREATE TABLE `game_publisher` (
  id INTEGER,
  game_id INTEGER REFERENCES game(id),
  publisher_id INTEGER REFERENCES publisher(id)
);

CREATE TABLE `publisher` (
  id INTEGER,
  publisher_name TEXT
);

",182,6.558316230773926,250,"['game_publisher', 'publisher']"
1756,Which movie title has the lowest movie rental in the horror category? Hint: the lowest movie rental refers to min(rental_rate); the horror category refers to category.name = 'Horror',movie_3,SELECT T1.title FROM film AS T1 INNER JOIN film_category AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T2.category_id = T3.category_id WHERE T3.`name` = 'Horror' ORDER BY T1.rental_rate LIMIT 1,"CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",205,6.608806371688843,250,"['film', 'film_category', 'category']"
1757,"What's the average number of graduates for Central Alabama Community College in the 3 consecutive years from 2011 to 2013? Hint: graduates refers to grad_cohort; Central Alabama Community College refers to chronname = 'Central Alabama Community College'; average number of graduates for 3 consecutive years = DIVIDE(SUM(SUM(grad_cohort WHERE year = 2011), SUM(grad_cohort WHERE year = 2012), SUM(grad_cohort WHERE year = 2013)), 3);",college_completion,"SELECT AVG(T2.grad_cohort) FROM institution_details AS T1 INNER JOIN institution_grads AS T2 ON T2.unitid = T1.unitid WHERE T1.chronname = 'Central Alabama Community College' AND T2.year IN (2011, 2012, 2013) AND T2.gender = 'B' AND T2.race = 'X'","CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

",249,6.684860467910767,250,['institution_grads']
1758,Please give the title of the film starring PENELOPE GUINESS and has the highest replacement cost. Hint: highest replacement cost refers to Max (replacement_cost),movie_3,SELECT T3.title FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.first_name = 'PENELOPE' AND T1.last_name = 'GUINESS' ORDER BY T3.replacement_cost DESC LIMIT 1,"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",203,6.605218410491943,250,"['actor', 'film_actor', 'film']"
1759,"Among the coaches who are born in the USA, how many of them used to train the Philadelphia Flyers? Hint: born in the USA refers to birthCountry = 'USA'; Philadelphia Flyers is the name of team;",hockey,SELECT COUNT(DISTINCT T3.coachID) FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.year = T2.year AND T1.tmID = T2.tmID INNER JOIN Master AS T3 ON T1.coachID = T3.coachID WHERE T2.name = 'Philadelphia Flyers' AND T3.birthCountry = 'USA',"CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  notes TEXT,
  g INTEGER,
  w INTEGER,
  l INTEGER,
  t INTEGER,
  postg TEXT,
  postw TEXT,
  postl TEXT,
  postt TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  playoff TEXT,
  G INTEGER,
  W INTEGER,
  L INTEGER,
  T INTEGER,
  OTL TEXT,
  Pts INTEGER,
  SoW TEXT,
  SoL TEXT,
  GF INTEGER,
  GA INTEGER,
  name TEXT,
  PIM TEXT,
  BenchMinor TEXT,
  PPG TEXT,
  PPC TEXT,
  SHA TEXT,
  PKG TEXT,
  PKC TEXT,
  SHF TEXT
);

",259,6.732261657714844,250,"['coaches', 'teams']"
1760,List the full names of Republican legislators who have a nickname. Hint: full names refers to official_full_name; Republican refers to party = 'Republican'; nickname refers to nickname_name,legislator,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.party = 'Republican' AND T1.nickname_name IS NOT NULL GROUP BY T1.official_full_name,"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

CREATE TABLE `social-media` (
  bioguide TEXT PRIMARY KEY REFERENCES current(bioguide_id),
  facebook TEXT,
  facebook_id REAL,
  govtrack REAL,
  instagram TEXT,
  instagram_id REAL,
  thomas INTEGER,
  twitter TEXT,
  twitter_id REAL,
  youtube TEXT,
  youtube_id TEXT
);

",162,6.534215927124023,250,"['historical', 'historical-terms', 'social-media']"
1761,Count the active businesses that has an attribute of caters with low review count. Hint: active businesses refers to active = 'true'; attribute of caters refers to attribute_name = 'Caters',public_review_platform,SELECT COUNT(T1.business_id) FROM Business AS T1 INNER JOIN Business_Attributes AS T2 ON T1.business_id = T2.business_id INNER JOIN Attributes AS T3 ON T2.attribute_id = T3.attribute_id WHERE T3.attribute_name LIKE 'Caters' AND T1.review_count LIKE 'Low' AND T1.active LIKE 'TRUE',"CREATE TABLE `business_attributes` (
  attribute_id INTEGER PRIMARY KEY REFERENCES Attributes(None),
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  attribute_value TEXT
);

CREATE TABLE `attributes` (
  attribute_id INTEGER,
  attribute_name TEXT
);

",202,6.603386163711548,250,"['business_attributes', 'attributes']"
1762,List at least 10 films that the customers can rent for more than 5 days. Hint: film refers to title; rent for more than 5 days refers to rental_duration > 5,movie_3,"SELECT T.title FROM ( SELECT T1.title, COUNT(T3.customer_id) AS num FROM film AS T1 INNER JOIN inventory AS T2 ON T1.film_id = T2.film_id INNER JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id WHERE T1.rental_duration > 5 GROUP BY T1.title ) AS T WHERE T.num > 10","CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

CREATE TABLE `inventory` (
  inventory_id INTEGER,
  film_id INTEGER REFERENCES film(None),
  store_id INTEGER REFERENCES store(None),
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",204,6.609257221221924,250,"['film', 'inventory', 'rental']"
1763,What is the name of the coach whose team placed 4th in the 1969 game? Indicate their coachID. Hint: name of coach refers to coachID; placed 4th refers to rank = 4; 1969 game refers to year = 1969,hockey,SELECT T1.coachID FROM Coaches AS T1 INNER JOIN Teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 1969 AND T2.rank = 4,"CREATE TABLE `awardsCoaches` (
  coachID TEXT REFERENCES Coaches(coachID),
  award TEXT,
  year INTEGER,
  lgID TEXT,
  note TEXT
);

CREATE TABLE `coaches` (
  coachID TEXT PRIMARY KEY,
  year INTEGER PRIMARY KEY REFERENCES Teams(year),
  tmID TEXT PRIMARY KEY REFERENCES Teams(tmID),
  lgID TEXT,
  stint INTEGER PRIMARY KEY,
  notes TEXT,
  g INTEGER,
  w INTEGER,
  l INTEGER,
  t INTEGER,
  postg TEXT,
  postw TEXT,
  postl TEXT,
  postt TEXT
);

",275,6.76558780670166,250,"['awardsCoaches', 'coaches']"
1764,"How many orders has Aimee Bixby made? Hint: Aimee Bixby made refers to ""Customer Name"" = 'Aimee Bixby';",superstore,SELECT COUNT(DISTINCT T2.`Order ID`) FROM people AS T1 INNER JOIN central_superstore AS T2 ON T1.`Customer ID` = T2.`Customer ID` WHERE T1.`Customer Name` = 'Aimee Bixby',"CREATE TABLE `central_superstore` (
  Row ID INTEGER,
  Order ID TEXT,
  Order Date DATE,
  Ship Date DATE,
  Ship Mode TEXT,
  Customer ID TEXT REFERENCES people(Customer ID),
  Region TEXT REFERENCES product(Region) REFERENCES people(Region),
  Product ID TEXT REFERENCES product(Product ID),
  Sales REAL,
  Quantity INTEGER,
  Discount REAL,
  Profit REAL
);

CREATE TABLE `people` (
  Customer ID TEXT PRIMARY KEY,
  Customer Name TEXT,
  Segment TEXT,
  Country TEXT,
  City TEXT,
  State TEXT,
  Postal Code INTEGER,
  Region TEXT PRIMARY KEY
);

",163,6.539552927017212,250,"['central_superstore', 'people']"
1765,"Among the businesses with a category of Local Services, what is the percentage of the business with less than 3 stars? Hint: ""Local Services"" is the category_name; less than 3 stars refers to stars < 3; percentage = Divide(Count(business_id(stars < 3)), Count(business_id)) * 100",public_review_platform,"SELECT CAST(SUM(CASE WHEN T1.stars < 3 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.stars) AS ""percentage"" FROM Business AS T1 INNER JOIN Business_Categories ON T1.business_id = Business_Categories.business_id INNER JOIN Categories AS T3 ON Business_Categories.category_id = T3.category_id WHERE T3.category_name LIKE 'Local Services'","CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",235,6.66647744178772,250,"['business', 'business_categories', 'categories']"
1766,How many short cars are in the shape of hexagon? Hint: short cars refers to len = 'short'; in the shape of hexagon refers to shape = 'hexagon',trains,SELECT COUNT(id) FROM cars WHERE shape = 'hexagon' AND len = 'short',"CREATE TABLE `cars` (
  id INTEGER,
  train_id INTEGER REFERENCES trains(id),
  position INTEGER,
  shape TEXT,
  len TEXT,
  sides TEXT,
  roof TEXT,
  wheels INTEGER,
  load_shape TEXT,
  load_num INTEGER
);

",140,6.515817165374756,250,['cars']
1767,What is the height of David Bornhammar in inches? Hint: heigh in inches refers to height_in_inch;,ice_hockey_draft,SELECT T2.height_in_inch FROM PlayerInfo AS T1 INNER JOIN height_info AS T2 ON T1.height = T2.height_id WHERE T1.PlayerName = 'David Bornhammar',"CREATE TABLE `height_info` (
  height_id INTEGER,
  height_in_cm INTEGER,
  height_in_inch TEXT
);

CREATE TABLE `playerinfo` (
  ELITEID INTEGER,
  PlayerName TEXT,
  birthdate TEXT,
  birthyear DATE,
  birthmonth INTEGER,
  birthday INTEGER,
  birthplace TEXT,
  nation TEXT,
  height INTEGER REFERENCES height_info(height_id),
  weight INTEGER REFERENCES weight_info(weight_id),
  position_info TEXT,
  shoots TEXT,
  draftyear INTEGER,
  draftround INTEGER,
  overall INTEGER,
  overallby TEXT,
  CSS_rank INTEGER,
  sum_7yr_GP INTEGER,
  sum_7yr_TOI INTEGER,
  GP_greater_than_0 TEXT
);

",141,6.519385814666748,250,"['height_info', 'playerinfo']"
1768,"What is the full name of the team that has the most players from UCLA? Hint: ""UCLA"" is the college; team with most players refers to tmID where Max(Count(playerID))",professional_basketball,SELECT T3.name FROM players AS T1 INNER JOIN players_teams AS T2 ON T1.playerID = T2.playerID INNER JOIN teams AS T3 ON T3.tmID = T2.tmID WHERE T1.college = 'UCLA' GROUP BY T3.name ORDER BY COUNT(DISTINCT T1.playerID) DESC LIMIT 1,"CREATE TABLE `players_teams` (
  id INTEGER,
  playerID TEXT REFERENCES players(None),
  year INTEGER REFERENCES teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES teams(tmID),
  lgID TEXT,
  GP INTEGER,
  GS INTEGER,
  minutes INTEGER,
  points INTEGER,
  oRebounds INTEGER,
  dRebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  PF INTEGER,
  fgAttempted INTEGER,
  fgMade INTEGER,
  ftAttempted INTEGER,
  ftMade INTEGER,
  threeAttempted INTEGER,
  threeMade INTEGER,
  PostGP INTEGER,
  PostGS INTEGER,
  PostMinutes INTEGER,
  PostPoints INTEGER,
  PostoRebounds INTEGER,
  PostdRebounds INTEGER,
  PostRebounds INTEGER,
  PostAssists INTEGER,
  PostSteals INTEGER,
  PostBlocks INTEGER,
  PostTurnovers INTEGER,
  PostPF INTEGER,
  PostfgAttempted INTEGER,
  PostfgMade INTEGER,
  PostftAttempted INTEGER,
  PostftMade INTEGER,
  PostthreeAttempted INTEGER,
  PostthreeMade INTEGER,
  note TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",193,6.599022626876831,250,"['players_teams', 'teams']"
1769,How many volcanic mountains are there in countries whose population is no more than 5000000?,mondial_geo,SELECT COUNT(DISTINCT T3.Name) FROM country AS T1 INNER JOIN geo_mountain AS T2 ON T1.Code = T2.Country INNER JOIN mountain AS T3 ON T3.Name = T2.Mountain WHERE T3.Type = 'volcanic' AND T1.Population <= 5000000,"CREATE TABLE `mountain` (
  Name TEXT PRIMARY KEY,
  Mountains TEXT,
  Height REAL,
  Type TEXT,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `country` (
  Name TEXT PRIMARY KEY,
  Code TEXT PRIMARY KEY,
  Capital TEXT,
  Province TEXT,
  Area REAL,
  Population INTEGER
);

",271,6.750804424285889,250,"['mountain', 'country']"
1770,Please list the e-mails of the reviewers who have reviewed high class. Hint: high class refers to Class = 'H'; men's product refers to Style = 'M',works_cycles,SELECT T1.EmailAddress FROM ProductReview AS T1 INNER JOIN Product AS T2 ON T1.ProductID = T2.ProductID WHERE T2.Class = 'H',"CREATE TABLE `productreview` (
  ProductReviewID INTEGER,
  ProductID INTEGER REFERENCES Product(ProductID),
  ReviewerName TEXT,
  ReviewDate DATETIME,
  EmailAddress TEXT,
  Rating INTEGER,
  Comments TEXT,
  ModifiedDate DATETIME
);

",463,7.219464063644409,250,['productreview']
1771,List the last name of all current legislators who live in California. Hint: California refers to state = 'CA',legislator,SELECT T1.last_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.state = 'CA' GROUP BY T1.last_name,"CREATE TABLE `current` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  birthday_bio DATE,
  cspan_id REAL PRIMARY KEY,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id REAL,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id INTEGER,
  votesmart_id REAL,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

",142,6.512543439865112,250,['current']
1772,"What is the percentage of increase of the indicator on Adolescent fertility rate from 1960 to 1961 in the country whose Alpha2Code is 1A? Hint: the percentage of increase from 1960 to 1961 = divide(subtract(sum(value where Year = 1961), sum(Value where Year = 1960)), sum(Value where Year = 1960)) *100%; indicator on Adolescent fertility rate refers to IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)%'

",world_development_indicators,"SELECT (( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1961 ) - ( SELECT T2.Value FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1960 )) * 1.0 / ( SELECT SUM(T2.Value) FROM Country AS T1 INNER JOIN Indicators AS T2 ON T1.CountryCode = T2.CountryCode WHERE T1.Alpha2Code = '1A' AND T2.IndicatorName = 'Adolescent fertility rate (births per 1,000 women ages 15-19)' AND T2.Year = 1960 )","CREATE TABLE `country` (
  CountryCode TEXT PRIMARY KEY,
  ShortName TEXT,
  TableName TEXT,
  LongName TEXT,
  Alpha2Code TEXT,
  CurrencyUnit TEXT,
  SpecialNotes TEXT,
  Region TEXT,
  IncomeGroup TEXT,
  Wb2Code TEXT,
  NationalAccountsBaseYear TEXT,
  NationalAccountsReferenceYear TEXT,
  SnaPriceValuation TEXT,
  LendingCategory TEXT,
  OtherGroups TEXT,
  SystemOfNationalAccounts TEXT,
  AlternativeConversionFactor TEXT,
  PppSurveyYear TEXT,
  BalanceOfPaymentsManualInUse TEXT,
  ExternalDebtReportingStatus TEXT,
  SystemOfTrade TEXT,
  GovernmentAccountingConcept TEXT,
  ImfDataDisseminationStandard TEXT,
  LatestPopulationCensus TEXT,
  LatestHouseholdSurvey TEXT,
  SourceOfMostRecentIncomeAndExpenditureData TEXT,
  VitalRegistrationComplete TEXT,
  LatestAgriculturalCensus TEXT,
  LatestIndustrialData INTEGER,
  LatestTradeData INTEGER,
  LatestWaterWithdrawalData INTEGER
);

CREATE TABLE `indicators` (
  CountryName TEXT,
  CountryCode TEXT PRIMARY KEY REFERENCES Country(CountryCode),
  IndicatorName TEXT,
  IndicatorCode TEXT PRIMARY KEY,
  Year INTEGER PRIMARY KEY,
  Value INTEGER
);

",266,6.752204418182373,250,"['country', 'indicators']"
1773,How many models of Ford Maverick were produced? Hint: Ford Maverick refers to car_name = 'ford maverick',cars,SELECT COUNT(DISTINCT T2.model_year) FROM data AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID WHERE T1.car_name = 'ford maverick',"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",136,6.5104193687438965,250,"['data', 'production']"
1774,What river has the 17th-longest length overall? Specify it's length.,mondial_geo,"SELECT Name, Length FROM river ORDER BY Length DESC LIMIT 16, 1","CREATE TABLE `river` (
  Name TEXT PRIMARY KEY,
  River TEXT,
  Lake TEXT REFERENCES lake(None),
  Sea TEXT,
  Length REAL,
  SourceLongitude REAL,
  SourceLatitude REAL,
  Mountains TEXT,
  SourceAltitude REAL,
  EstuaryLongitude REAL,
  EstuaryLatitude REAL
);

",267,6.744620323181152,250,['river']
1775,What is the name of the item that is provided in the biggest amount by the vendor Lakeshore Learning Materials? Hint: lakeshore Learning Materials is vendor_name; biggest amount refers to Max(item_quantity);,donor,SELECT item_name FROM resources WHERE vendor_name = 'Lakeshore Learning Materials' ORDER BY item_quantity DESC LIMIT 1,"CREATE TABLE `donations` (
  donationid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  donor_acctid TEXT,
  donor_city TEXT,
  donor_state TEXT,
  donor_zip TEXT,
  is_teacher_acct TEXT,
  donation_timestamp DATETIME,
  donation_to_project REAL,
  donation_optional_support REAL,
  donation_total REAL,
  dollar_amount TEXT,
  donation_included_optional_support TEXT,
  payment_method TEXT,
  payment_included_acct_credit TEXT,
  payment_included_campaign_gift_card TEXT,
  payment_included_web_purchased_gift_card TEXT,
  payment_was_promo_matched TEXT,
  via_giving_page TEXT,
  for_honoree TEXT,
  donation_message TEXT
);

",166,6.5416419506073,250,['donations']
1776,"Identify the publisher of the book Girls' Night In. Hint: ""Girls' Night In"" is the title of the book; publisher is the publisher_name",books,SELECT T2.publisher_name FROM book AS T1 INNER JOIN publisher AS T2 ON T1.publisher_id = T2.publisher_id WHERE T1.title = 'Girls'' Night In',"CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `publisher` (
  publisher_id INTEGER,
  publisher_name TEXT
);

",202,6.603475093841553,250,"['book', 'publisher']"
1777,Which country has the least organization membership?,mondial_geo,SELECT country FROM organization WHERE country IN ( SELECT Code FROM country ) GROUP BY country ORDER BY COUNT(NAME) LIMIT 1,"CREATE TABLE `organization` (
  Abbreviation TEXT PRIMARY KEY,
  Name TEXT PRIMARY KEY,
  City TEXT REFERENCES city(None),
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT REFERENCES province(None) REFERENCES city(None),
  Established DATE
);

CREATE TABLE `islandIn` (
  Island TEXT REFERENCES island(None),
  Sea TEXT REFERENCES sea(None),
  Lake TEXT REFERENCES lake(None),
  River TEXT REFERENCES river(None)
);

",254,6.694499254226685,250,"['organization', 'islandIn']"
1778,Calculate the average payment amount per customer. Hint: average payment refers to AVG(amount),movie_3,SELECT AVG(amount) FROM payment GROUP BY customer_id,"CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",184,6.559927940368652,250,"['payment', 'customer']"
1779,"Lists all companies by BusinessEntityID that increased their current year sales by more than 60% over last year's sales and have a bonus greater than 3,000. Hint: increased their current year sales by more than 60% refers to
DIVIDE(SUBTRACT(SalesYTD, SalesLastYear),SalesLastYear)>0.6",works_cycles,SELECT BusinessEntityID FROM SalesPerson WHERE SalesYTD > SalesLastYear + SalesLastyear * 0.6 AND Bonus > 3000,"CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",507,7.322944164276123,250,['salesorderheader']
1780,How many suburban metros are there in Livingston Parish School District? Hint: suburban metros refer to metro = 'suburban'; Livingston Parish School District refer to school_district,donor,SELECT COUNT(projectid) FROM projects WHERE school_district = 'Livingston Parish School Dist' AND school_metro = 'suburban',"CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",159,6.53209924697876,250,['projects']
1781,"Please list the titles of the paper whose authors include Klaus Zimmermann. Hint: ""Klaus Zimmermann"" is the name of author",authors,SELECT T2.Title FROM PaperAuthor AS T1 INNER JOIN Paper AS T2 ON T1.PaperId = T2.Id WHERE T1.Name = 'Klaus Zimmermann',"CREATE TABLE `paper` (
  Id INTEGER,
  Title TEXT,
  Year INTEGER,
  ConferenceId INTEGER REFERENCES Conference(Id),
  JournalId INTEGER REFERENCES Journal(Id),
  Keyword TEXT
);

CREATE TABLE `paperauthor` (
  PaperId INTEGER REFERENCES Paper(Id),
  AuthorId INTEGER REFERENCES Author(Id),
  Name TEXT,
  Affiliation TEXT
);

",148,6.516829490661621,250,"['paper', 'paperauthor']"
1782,"How many films with the rental rate of $2.99 have the special feature of ""Deleted Scenes""? Hint: rental rate of $2.99 refers to rental_rate = 2.99; film refers to title",movie_3,SELECT COUNT(film_id) FROM film WHERE rental_rate = 2.99 AND special_features = 'Deleted Scenes',"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",213,6.618640661239624,250,"['film_text', 'film']"
1783,Is the oldest device user male or female? Hint: MAX(Age) AND gender = 'M' means that the oldest device user is male; MAX(Age) AND gender = 'F' means that the oldest device user is female;,talkingdata,SELECT gender FROM gender_age WHERE age = ( SELECT MAX(age) FROM gender_age ),"CREATE TABLE `gender_age` (
  device_id INTEGER REFERENCES phone_brand_device_model2(device_id),
  gender TEXT,
  age INTEGER,
  group TEXT
);

",222,6.62891411781311,250,['gender_age']
1784,What are the episodes that have the average rating with more than 20 of 2-star votes? Hint: 2-star refers to stars = 2; average rating refers to 5 < rating < = 7; more than 20 of 2-star votes refers to votes > 20,simpson_episodes,SELECT DISTINCT T1.episode_id FROM Episode AS T1 INNER JOIN Vote AS T2 ON T2.episode_id = T1.episode_id WHERE T2.stars = 2 AND T2.votes > 20 AND T1.rating > 5.0 AND T1.rating <= 7.0;,"CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date TEXT,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

CREATE TABLE `vote` (
  episode_id TEXT REFERENCES Episode(episode_id),
  stars INTEGER,
  votes INTEGER,
  percent REAL
);

",187,6.563524484634399,250,"['episode', 'vote']"
1785,Provide the list of product IDs and names under the meat/poultry category. Hint: meat/poultry category refers to CategoryName = 'Meat/Poultry';,retail_world,"SELECT T2.ProductName, T1.CategoryName FROM Categories AS T1 INNER JOIN Products AS T2 ON T1.CategoryID = T2.CategoryID WHERE T2.ReorderLevel = ( SELECT MAX(ReorderLevel) FROM Products )","CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `categories` (
  CategoryID INTEGER,
  CategoryName TEXT,
  Description TEXT
);

",176,6.552037477493286,250,"['products', 'categories']"
1786,What date did the project with he 'Lets Share Ideas essay' went live? Hint: date refer to date_posted; Lets Share Ideas refer to title,donor,SELECT T1.date_posted FROM projects AS T1 INNER JOIN essays AS T2 ON T1.projectid = T2.projectid WHERE T2.title LIKE 'Lets Share Ideas',"CREATE TABLE `essays` (
  projectid TEXT,
  teacher_acctid TEXT,
  title TEXT,
  short_description TEXT,
  need_statement TEXT,
  essay TEXT
);

CREATE TABLE `projects` (
  projectid TEXT PRIMARY KEY,
  teacher_acctid TEXT,
  schoolid TEXT,
  school_ncesid TEXT,
  school_latitude REAL,
  school_longitude REAL,
  school_city TEXT,
  school_state TEXT,
  school_zip INTEGER,
  school_metro TEXT,
  school_district TEXT,
  school_county TEXT,
  school_charter TEXT,
  school_magnet TEXT,
  school_year_round TEXT,
  school_nlns TEXT,
  school_kipp TEXT,
  school_charter_ready_promise TEXT,
  teacher_prefix TEXT,
  teacher_teach_for_america TEXT,
  teacher_ny_teaching_fellow TEXT,
  primary_focus_subject TEXT,
  primary_focus_area TEXT,
  secondary_focus_subject TEXT,
  secondary_focus_area TEXT,
  resource_type TEXT,
  poverty_level TEXT,
  grade_level TEXT,
  fulfillment_labor_materials REAL,
  total_price_excluding_optional_support REAL,
  total_price_including_optional_support REAL,
  students_reached INTEGER,
  eligible_double_your_impact_match TEXT,
  eligible_almost_home_match TEXT,
  date_posted DATE
);

",150,6.522416114807129,250,"['essays', 'projects']"
1787,"Give the full name of driver who transported the items on 3/2/2016. Hint: on 3/2/2016 refers to ship_date = '2016-02-03'; full name refers to first_name, last_name",shipping,"SELECT T2.first_name, T2.last_name FROM shipment AS T1 INNER JOIN driver AS T2 ON T1.driver_id = T2.driver_id WHERE T1.ship_date = '2016-03-02'","CREATE TABLE `driver` (
  driver_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip_code INTEGER,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",175,6.553425073623657,250,"['driver', 'shipment']"
1788,How many of the businesses are in Surprise? Hint: Surprise is a city,public_review_platform,SELECT COUNT(business_id) FROM Business WHERE city = 'Surprise',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",178,6.554721355438232,250,"['business', 'business_categories', 'categories']"
1789,"Show the alias for the county at coordinate (18.090875, -66.867756). Hint: coordinates refers to latitude, longitude; latitude = '18.090875; longitude = '-66.867756'",address,SELECT T2.alias FROM zip_data AS T1 INNER JOIN alias AS T2 ON T1.zip_code = T2.zip_code WHERE T1.latitude = 18.090875 AND T1.longitude = -66.867756,"CREATE TABLE `alias` (
  zip_code INTEGER REFERENCES zip_data(zip_code),
  alias TEXT
);

CREATE TABLE `area_code` (
  zip_code INTEGER PRIMARY KEY REFERENCES zip_data(zip_code),
  area_code INTEGER PRIMARY KEY
);

",201,6.599311828613281,250,"['alias', 'area_code']"
1790,"At least how many cups of graham cracker crumbs does the recipe ""Raspberry Chiffon Pie"" need? Hint: 'graham cracker crumbs' is a name of an ingredient; 'Raspberry Chiffon Pie' refers to title",cookbook,SELECT T2.min_qty FROM Recipe AS T1 INNER JOIN Quantity AS T2 ON T1.recipe_id = T2.recipe_id INNER JOIN Ingredient AS T3 ON T3.ingredient_id = T2.ingredient_id WHERE T1.title = 'Raspberry Chiffon Pie' AND T3.name = 'graham cracker crumbs',"CREATE TABLE `quantity` (
  quantity_id INTEGER,
  recipe_id INTEGER REFERENCES Nutrition(recipe_id) REFERENCES Recipe(recipe_id),
  ingredient_id INTEGER REFERENCES Ingredient(ingredient_id),
  max_qty REAL,
  min_qty REAL,
  unit TEXT,
  preparation TEXT,
  optional TEXT
);

CREATE TABLE `ingredient` (
  ingredient_id INTEGER,
  category TEXT,
  name TEXT,
  plural TEXT
);

",171,6.547187328338623,250,"['quantity', 'ingredient']"
1791,"Please calculate the average total price of shipped orders from German customers. Hint: average total price = DIVIDE(MULTIPLY(quantityOrdered, priceEach)), COUNT(orderNumber)); German is a nationality of country = 'Germany'; shipped orders refers to status = 'Shipped';",car_retails,SELECT SUM(T3.quantityOrdered * T3.priceEach) / COUNT(T2.orderNumber) FROM customers AS T1 INNER JOIN orders AS T2 ON T1.customerNumber = T2.customerNumber INNER JOIN orderdetails AS T3 ON T2.orderNumber = T3.orderNumber WHERE T2.status = 'Shipped' AND T1.country = 'Germany',"CREATE TABLE `orders` (
  orderNumber INTEGER,
  orderDate DATE,
  requiredDate DATE,
  shippedDate DATE,
  status TEXT,
  comments TEXT,
  customerNumber INTEGER REFERENCES customers(customerNumber)
);

CREATE TABLE `customers` (
  customerNumber INTEGER,
  customerName TEXT,
  contactLastName TEXT,
  contactFirstName TEXT,
  phone TEXT,
  addressLine1 TEXT,
  addressLine2 TEXT,
  city TEXT,
  state TEXT,
  postalCode TEXT,
  country TEXT,
  salesRepEmployeeNumber INTEGER REFERENCES employees(employeeNumber),
  creditLimit REAL
);

",190,6.567584991455078,250,"['orders', 'customers']"
1792,"Among the titles with royalty percentage, which title has the greatest royalty percentage. State it's minimum range to enjoy this royalty percentage. Hint: minimum range is synonym for low range which refers to lorange",book_publishing_company,"SELECT T1.title, T2.lorange FROM titles AS T1 INNER JOIN roysched AS T2 ON T1.title_id = T2.title_id ORDER BY T2.royalty DESC LIMIT 1","CREATE TABLE `roysched` (
  title_id TEXT REFERENCES titles(title_id),
  lorange INTEGER,
  hirange INTEGER,
  royalty INTEGER
);

",186,6.561131000518799,250,['roysched']
1793,How many employees in the UK takes charge of the sales in over 4 territories? Hint: UK refers to Country = 'UK'; employees with over 4 territories refers to EmployeeID WHERE TerritoryID > 4;,retail_world,SELECT COUNT(COUNTEID) FROM ( SELECT T1.EmployeeID AS COUNTEID FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.Country = 'UK' GROUP BY T1.EmployeeID HAVING COUNT(T2.TerritoryID) > 4 ) T1,"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",183,6.556963682174683,250,['employees']
1794,What is the risk level of the establishment that Bob Benson inspected?,food_inspection_2,SELECT DISTINCT T3.risk_level FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id INNER JOIN establishment AS T3 ON T2.license_no = T3.license_no WHERE T1.first_name = 'Bob' AND T1.last_name = 'Benson',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",133,6.506529092788696,250,"['inspection', 'violation', 'establishment']"
1795,What is the URL to the rating on Mubi of the Riff-Raff movie that was given the highest rating score by user 22030372? Hint: URL refer to rating_url; user 22030372 refer to user_id,movie_platform,SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 22030372 AND T2.rating_score = 5 AND T1.movie_title = 'Riff-Raff',"CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

",179,6.554172515869141,250,"['ratings', 'movies']"
1796,"How many calories on average does a recipe that comes from ""Produce for Better Health Foundation and 5 a Day"" contain? Hint: Produce for Better Health Foundation and 5 a Day is a source of recipe; calculation = DIVIDE(SUM(calories), COUNT(recipe_id))",cookbook,SELECT AVG(T2.calories) FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id WHERE T1.source = 'Produce for Better Health Foundation and 5 a Day',"CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `nutrition` (
  recipe_id INTEGER REFERENCES Recipe(recipe_id),
  protein REAL,
  carbo REAL,
  alcohol REAL,
  total_fat REAL,
  sat_fat REAL,
  cholestrl REAL,
  sodium REAL,
  iron REAL,
  vitamin_c REAL,
  vitamin_a REAL,
  fiber REAL,
  pcnt_cal_carb REAL,
  pcnt_cal_fat REAL,
  pcnt_cal_prot REAL,
  calories REAL
);

",178,6.553244352340698,250,"['recipe', 'nutrition']"
1797,How many games did the coach who received the first-ever Second Team All-Star award play before receiving such award? Hint: first-ever Second Team All-Star award refers to min(year(award = 'Second Team All-Star')); How many games before receiving such award = sum(g(coachID(min(year(award = 'Second Team All-Star')))): g(min(year))),hockey,"SELECT SUM(T1.g) FROM Coaches AS T1 INNER JOIN ( SELECT coachID, year FROM AwardsCoaches WHERE award = 'Second Team All-Star' ORDER BY year LIMIT 1 ) AS T2 ON T1.coachID = T2.coachID AND T1.year < T2.year","CREATE TABLE `awardsCoaches` (
  coachID TEXT REFERENCES Coaches(coachID),
  award TEXT,
  year INTEGER,
  lgID TEXT,
  note TEXT
);

",302,6.813753366470337,250,['awardsCoaches']
1798,"What percentage of the movies are PG-13? Hint: PG-13 is a rating; calculation = DIVIDE(SUM(rating = PG-13), SUM(rating)) * 100",movie_3,"SELECT CAST(SUM(IIF(rating = 'PG-13', 1, 0)) AS REAL) * 100 / COUNT(film_id) FROM film","CREATE TABLE `film` (
  film_id INTEGER,
  title TEXT,
  description TEXT,
  release_year TEXT,
  language_id INTEGER REFERENCES language(None),
  original_language_id INTEGER REFERENCES language(None),
  rental_duration INTEGER,
  rental_rate REAL,
  length INTEGER,
  replacement_cost REAL,
  rating TEXT,
  special_features TEXT,
  last_update DATETIME
);

",213,6.620031118392944,250,['film']
1799,How many of the inspections with serious point levels have no fines? Hint: serious point level refers to point_level = 'Serious'; no fines refers to fine = 0,food_inspection_2,SELECT COUNT(DISTINCT T2.inspection_id) FROM inspection_point AS T1 INNER JOIN violation AS T2 ON T1.point_id = T2.point_id WHERE T1.point_level = 'Serious ' AND T2.fine = 0,"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `violation` (
  inspection_id INTEGER PRIMARY KEY REFERENCES inspection(inspection_id),
  point_id INTEGER PRIMARY KEY REFERENCES inspection_point(point_id),
  fine INTEGER,
  inspector_comment TEXT
);

",157,6.530462026596069,250,"['inspection', 'violation']"
1800,How many shipments were ordered by a customer in Florida? Hint: customer in Florida refers to state = 'FL',shipping,SELECT COUNT(T1.cust_id) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.state = 'FL',"CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",136,6.508649587631226,250,"['customer', 'shipment']"
1801,Indicate the title of all the films that are in the Classics category. Hint: 'classics' is the name of category,movie_3,SELECT T2.title FROM film_category AS T1 INNER JOIN film AS T2 ON T1.film_id = T2.film_id INNER JOIN category AS T3 ON T1.category_id = T3.category_id WHERE T3.name = 'Classics',"CREATE TABLE `film_category` (
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  category_id INTEGER PRIMARY KEY REFERENCES category(None),
  last_update DATETIME
);

CREATE TABLE `category` (
  category_id INTEGER,
  name TEXT,
  last_update DATETIME
);

",191,6.580256462097168,250,"['film_category', 'category']"
1802,Which team had more than one player who grabbed more than 600 rebounds in 2011? Give the full name of the team. Hint: more than one player refers to count(playerID) > 1; grabbed more than 600 rebounds refers to rebounds > 600; in 2011 refers to 2011; full name refers to teams.name,professional_basketball,SELECT T1.tmID FROM teams AS T1 INNER JOIN players_teams AS T2 ON T1.tmID = T2.tmID AND T1.year = T2.year WHERE T1.year = 2011 AND T2.rebounds > 600,"CREATE TABLE `players_teams` (
  id INTEGER,
  playerID TEXT REFERENCES players(None),
  year INTEGER REFERENCES teams(year),
  stint INTEGER,
  tmID TEXT REFERENCES teams(tmID),
  lgID TEXT,
  GP INTEGER,
  GS INTEGER,
  minutes INTEGER,
  points INTEGER,
  oRebounds INTEGER,
  dRebounds INTEGER,
  rebounds INTEGER,
  assists INTEGER,
  steals INTEGER,
  blocks INTEGER,
  turnovers INTEGER,
  PF INTEGER,
  fgAttempted INTEGER,
  fgMade INTEGER,
  ftAttempted INTEGER,
  ftMade INTEGER,
  threeAttempted INTEGER,
  threeMade INTEGER,
  PostGP INTEGER,
  PostGS INTEGER,
  PostMinutes INTEGER,
  PostPoints INTEGER,
  PostoRebounds INTEGER,
  PostdRebounds INTEGER,
  PostRebounds INTEGER,
  PostAssists INTEGER,
  PostSteals INTEGER,
  PostBlocks INTEGER,
  PostTurnovers INTEGER,
  PostPF INTEGER,
  PostfgAttempted INTEGER,
  PostfgMade INTEGER,
  PostftAttempted INTEGER,
  PostftMade INTEGER,
  PostthreeAttempted INTEGER,
  PostthreeMade INTEGER,
  note TEXT
);

CREATE TABLE `teams` (
  year INTEGER PRIMARY KEY,
  lgID TEXT,
  tmID TEXT PRIMARY KEY,
  franchID TEXT,
  confID TEXT,
  divID TEXT,
  rank INTEGER,
  confRank INTEGER,
  playoff TEXT,
  name TEXT,
  o_fgm INTEGER,
  o_ftm INTEGER,
  o_pts INTEGER,
  d_pts INTEGER,
  homeWon INTEGER,
  homeLost INTEGER,
  awayWon INTEGER,
  awayLost INTEGER,
  won INTEGER,
  lost INTEGER,
  games INTEGER,
  arena TEXT
);

",238,6.67106556892395,250,"['players_teams', 'teams']"
1803,"In users yelping since 2009 to 2011, how many of them have low count of fans? Hint: users in yelping since 2009 to 2011 refers to user_yelping_since_year BETWEEN 2009 AND 2011; low count of fans refers to user_fans = 'Low'",public_review_platform,SELECT COUNT(user_id) FROM Users WHERE user_yelping_since_year >= 2009 AND user_yelping_since_year < 2012 AND user_fans = 'Low',"CREATE TABLE `users` (
  user_id INTEGER,
  user_yelping_since_year INTEGER,
  user_average_stars TEXT,
  user_votes_funny TEXT,
  user_votes_useful TEXT,
  user_votes_cool TEXT,
  user_review_count TEXT,
  user_fans TEXT
);

",249,6.687235116958618,250,['users']
1804,How many actors starred in the film id 508?,movie_3,SELECT COUNT(actor_id) FROM film_actor WHERE film_id = 508,"CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",177,6.551950216293335,250,['film_actor']
1805,"How many percent of customers were inactive? Hint: inactive refers to active = 0; percent = Divide (Count (customer_id where active = 0), Count(customer_id)) * 100",movie_3,"SELECT CAST(SUM(IIF(active = 0, 1, 0)) AS REAL) * 100 / COUNT(customer_id) FROM customer","CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

",209,6.6120758056640625,250,['customer']
1806,Which business in fashion category has the most review? Hint: 'Fashion' is the category_name; most review refers to Max(Count(user_id)),public_review_platform,SELECT T3.business_id FROM Categories AS T1 INNER JOIN Business_Categories AS T2 ON T1.category_id = T2.category_id INNER JOIN Business AS T3 ON T2.business_id = T3.business_id INNER JOIN Reviews AS T4 ON T3.business_id = T4.business_id WHERE T1.category_name LIKE 'Fashion' AND T1.category_id = 7 GROUP BY T3.business_id ORDER BY COUNT(T4.user_id) DESC LIMIT 1,"CREATE TABLE `reviews` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  review_stars INTEGER,
  review_votes_funny TEXT,
  review_votes_useful TEXT,
  review_votes_cool TEXT,
  review_length TEXT
);

CREATE TABLE `business_categories` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  category_id INTEGER PRIMARY KEY REFERENCES Categories(None)
);

CREATE TABLE `categories` (
  category_id INTEGER,
  category_name TEXT
);

",195,6.595966815948486,250,"['reviews', 'business_categories', 'categories']"
1807,What is the postal code of the address 692 Joliet Street?,movie_3,SELECT postal_code FROM address WHERE address = '692 Joliet Street',"CREATE TABLE `address` (
  address_id INTEGER,
  address TEXT,
  address2 TEXT,
  district TEXT,
  city_id INTEGER REFERENCES city(None),
  postal_code TEXT,
  phone TEXT,
  last_update DATETIME
);

",181,6.557709693908691,250,['address']
1808,"What is the fax number for the district with the most number of crimes in January, 2018? Hint: fax number refers to fax; the most number of crimes refers to max(count(case_number)); in January 2018 refers to date like '%1/2018%'",chicago_crime,SELECT T1.fax FROM District AS T1 INNER JOIN Crime AS T2 ON T1.district_no = T2.district_no WHERE T2.date LIKE '%1/2018%' GROUP BY T2.district_no ORDER BY COUNT(case_number) DESC LIMIT 1,"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `district` (
  district_no INTEGER,
  district_name TEXT,
  address TEXT,
  zip_code INTEGER,
  commander TEXT,
  email TEXT,
  phone TEXT,
  fax TEXT,
  tty TEXT,
  twitter TEXT
);

",199,6.603116273880005,250,"['crime', 'district']"
1809,"How many chapters are there in ""Midsummer Night's Dream""? Hint: in ""Midsummer Night's Dream"" refers to Title = 'Midsummer Night's Dream'",shakespeare,SELECT COUNT(T2.id) FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id WHERE T1.Title = 'Midsummer Night''s Dream',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `chapters` (
  id INTEGER,
  Act INTEGER,
  Scene INTEGER,
  Description TEXT,
  work_id INTEGER REFERENCES works(None)
);

",160,6.533510446548462,250,"['works', 'chapters']"
1810,"How many employees are there in the ""Miami"" office? Hint: Miami office refers to locationcity = 'Miami'",human_resources,SELECT COUNT(*) FROM employee AS T1  INNER JOIN location AS T2  ON T1.locationID = T2.locationID WHERE T2.locationcity = 'Miami',"CREATE TABLE `location` (
  locationID INTEGER,
  locationcity TEXT,
  address TEXT,
  state TEXT,
  zipcode INTEGER,
  officephone TEXT
);

",131,6.507606029510498,250,['location']
1811,What are the names of the cities where Carl Lewis Borack competed? Hint: name of the cities refers to city_name,olympics,SELECT T4.city_name FROM person AS T1 INNER JOIN games_competitor AS T2 ON T1.id = T2.person_id INNER JOIN games_city AS T3 ON T2.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id WHERE T1.full_name = 'Carl Lewis Borack',"CREATE TABLE `person` (
  id INTEGER,
  full_name TEXT,
  gender TEXT,
  height INTEGER,
  weight INTEGER
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

",174,6.552887916564941,250,"['person', 'games_competitor', 'city', 'games_city']"
1812,"What is the revision ID for the page on Catalan titled ""Arqueologia""? Hint: lid = 1 means it's Catalan language; Arqueologia refers to title = 'Arqueologia'; revision ID refers to revision",language_corpus,SELECT revision FROM pages WHERE lid = 1 AND title = 'Arqueologia',"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

",173,6.546613454818726,250,['pages']
1813,"Among the vendors with maximum orders betweeen 500 to 750, which vendor has the 10th highest profit on net? Hint: maximum orders refers to MaxOrderQty; MaxOrderQty BETWEEN '500' AND '750'; profit on net = SUBTRACT(LastReceiptCost, StandardPrice);",works_cycles,"SELECT T2.Name FROM ProductVendor AS T1 INNER JOIN Vendor AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.MaxOrderQty BETWEEN 500 AND 750 ORDER BY T1.LastReceiptCost - T1.StandardPrice DESC LIMIT 9, 1","CREATE TABLE `vendor` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  AccountNumber TEXT PRIMARY KEY,
  Name TEXT,
  CreditRating INTEGER,
  PreferredVendorStatus INTEGER,
  ActiveFlag INTEGER,
  PurchasingWebServiceURL TEXT,
  ModifiedDate DATETIME
);

CREATE TABLE `salesorderheader` (
  SalesOrderID INTEGER,
  RevisionNumber INTEGER,
  OrderDate DATETIME,
  DueDate DATETIME,
  ShipDate DATETIME,
  Status INTEGER,
  OnlineOrderFlag INTEGER,
  SalesOrderNumber TEXT PRIMARY KEY,
  PurchaseOrderNumber TEXT,
  AccountNumber TEXT,
  CustomerID INTEGER REFERENCES Customer(None),
  SalesPersonID INTEGER REFERENCES SalesPerson(None),
  TerritoryID INTEGER REFERENCES SalesTerritory(None),
  BillToAddressID INTEGER REFERENCES Address(None),
  ShipToAddressID INTEGER REFERENCES Address(None),
  ShipMethodID INTEGER REFERENCES Address(None),
  CreditCardID INTEGER REFERENCES CreditCard(None),
  CreditCardApprovalCode TEXT,
  CurrencyRateID INTEGER REFERENCES CurrencyRate(None),
  SubTotal REAL,
  TaxAmt REAL,
  Freight REAL,
  TotalDue REAL,
  Comment TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",504,7.318340539932251,250,"['vendor', 'salesorderheader']"
1814,"For businesses with long length reviews, which state are they located? Hint: businesses with long length tips refer to business_id where tip_length = 'Long';",public_review_platform,SELECT DISTINCT T1.state FROM Business AS T1 INNER JOIN Tips AS T2 ON T1.business_id = T2.business_id WHERE T2.tip_length = 'Long',"CREATE TABLE `business` (
  business_id INTEGER,
  active TEXT,
  city TEXT,
  state TEXT,
  stars REAL,
  review_count TEXT
);

CREATE TABLE `tips` (
  business_id INTEGER PRIMARY KEY REFERENCES Business(None),
  user_id INTEGER PRIMARY KEY REFERENCES Users(None),
  likes INTEGER,
  tip_length TEXT
);

",194,6.595569372177124,250,"['business', 'tips']"
1815,How many game publisher IDs have published games on the X360 platform? Hint: X360 refers to platform_name = 'X360';,video_games,SELECT COUNT(T1.game_publisher_id) FROM game_platform AS T1 INNER JOIN platform AS T2 ON T1.platform_id = T2.id WHERE T2.platform_name = 'X360',"CREATE TABLE `platform` (
  id INTEGER,
  platform_name TEXT
);

CREATE TABLE `game_platform` (
  id INTEGER,
  game_publisher_id INTEGER REFERENCES game_publisher(id),
  platform_id INTEGER REFERENCES platform(id),
  release_year INTEGER
);

",164,6.544511795043945,250,"['platform', 'game_platform']"
1816,"How much time does it take to update the status of order ""2398""? Hint: ""2398"" is the order_id; time =   Subtract(strftime('%Y', status_date), strftime('%Y', order_date)) AS ""year"" , Subtract(strftime('%m', status_date), strftime('%m', order_date)) AS ""month"", Subtract (strftime('%d', status_date), strftime('%d', order_date)) AS ""day""",books,"SELECT strftime('%J', T2.status_date) - strftime('%J', T1.order_date) FROM cust_order AS T1 INNER JOIN order_history AS T2 ON T1.order_id = T2.order_id WHERE T1.order_id = 2398","CREATE TABLE `order_history` (
  history_id INTEGER,
  order_id INTEGER REFERENCES cust_order(None),
  status_id INTEGER REFERENCES order_status(None),
  status_date DATETIME
);

CREATE TABLE `order_status` (
  status_id INTEGER,
  status_value TEXT
);

",293,6.797853946685791,250,"['order_history', 'order_status']"
1817,How many planes of Spirit Air Lines took off on 2018/8/7? Hint: Spirit Air Lines refers to Description = 'Spirit Air Lines: NK'; on 2018/8/7 refers to FL_DATE = '2018/8/7';,airline,SELECT COUNT(T2.Code) FROM Airlines AS T1 INNER JOIN `Air Carriers` AS T2 ON T1.OP_CARRIER_AIRLINE_ID = T2.Code WHERE T1.FL_DATE = '2018/8/7' AND T2.Description = 'Spirit Air Lines: NK',"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

CREATE TABLE `air carriers` (
  Code INTEGER,
  Description TEXT
);

",175,6.5462377071380615,250,"['airlines', 'air carriers']"
1818,What is the title of the movie with the most keywords? Hint: most keywords refers to max(count(keyword_id)),movies_4,SELECT T1.title FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id GROUP BY T1.title ORDER BY COUNT(T2.keyword_id) DESC LIMIT 1,"CREATE TABLE `movie_keywords` (
  movie_id INTEGER REFERENCES movie(None),
  keyword_id INTEGER REFERENCES keyword(None)
);

CREATE TABLE `keyword` (
  keyword_id INTEGER,
  keyword_name TEXT
);

",205,6.606396198272705,250,"['movie_keywords', 'keyword']"
1819,Which actor plays Optimus Prime? Hint: Which actor refers to person_name; Optimus Prime refers to character_name = 'Optimus Prime (voice)',movies_4,SELECT DISTINCT T1.person_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T2.character_name = 'Optimus Prime (voice)',"CREATE TABLE `person` (
  person_id INTEGER,
  person_name TEXT
);

CREATE TABLE `movie_cast` (
  movie_id INTEGER REFERENCES movie(movie_id),
  person_id INTEGER REFERENCES person(person_id),
  character_name TEXT,
  gender_id INTEGER REFERENCES gender(gender_id),
  cast_order INTEGER
);

",213,6.61716365814209,250,"['person', 'movie_cast']"
1820,Please give the description of the movie starring JENNIFER DAVIS.,movie_3,SELECT T3.description FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T3.film_id = T2.film_id WHERE T1.first_name = 'JOHNNY' AND T1.last_name = 'DAVIS',"CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

",181,6.556758403778076,250,['actor']
1821,Give the official full names of legislators representing Virginia. Hint: Virginia refers to state = 'VA',legislator,SELECT T1.official_full_name FROM current AS T1 INNER JOIN `current-terms` AS T2 ON T1.bioguide_id = T2.bioguide WHERE T2.state = 'VA' GROUP BY T1.official_full_name,"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",139,6.512725353240967,250,"['historical', 'historical-terms']"
1822,How many universities scored 0 in Awards between 2005 to 2015? Hint: between 2005 to 2015 refers to year BETWEEN 2005 AND 2015; scored 0 refers to score = 0; in Awards refers to criteria_name = 'Award',university,SELECT COUNT(*) FROM ranking_criteria AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.ranking_criteria_id WHERE T1.criteria_name = 'Award' AND T2.year BETWEEN 2005 AND 2015 AND T2.score = 0,"CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

",205,6.612788200378418,250,['university_ranking_year']
1823,"How many more movie lists were created by the user who created the movie list ""250 Favourite Films""? Hint: 250 Favourite Films refers to list_title;",movie_platform,SELECT COUNT(list_id) FROM lists_users WHERE user_id = ( SELECT user_id FROM lists WHERE list_title = '250 Favourite Films' ),"CREATE TABLE `lists` (
  user_id INTEGER REFERENCES lists_users(user_id),
  list_id INTEGER,
  list_title TEXT,
  list_movie_number INTEGER,
  list_update_timestamp_utc TEXT,
  list_creation_timestamp_utc TEXT,
  list_followers INTEGER,
  list_url TEXT,
  list_comments INTEGER,
  list_description TEXT,
  list_cover_image_url TEXT,
  list_first_image_url TEXT,
  list_second_image_url TEXT,
  list_third_image_url TEXT
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

",159,6.532000541687012,250,"['lists', 'lists_users']"
1824,"In 2007, which job position was hired the most? Hint: Job position and job title are synonyms; job position that was hired the most refers to MAX(COUNT(JobTitle); HireDate BETWEEN '2007-1-1' AND '2007-12-31';",works_cycles,"SELECT JobTitle FROM Employee WHERE STRFTIME('%Y', HireDate) = '2007' GROUP BY HireDate ORDER BY COUNT(JobTitle) DESC LIMIT 1","CREATE TABLE `JobCandidate` (
  JobCandidateID INTEGER,
  BusinessEntityID INTEGER REFERENCES Employee(None),
  Resume TEXT,
  ModifiedDate DATETIME
);

",497,7.3000500202178955,250,['JobCandidate']
1825,How many class 1 senators belong to the Republican party? Hint: senators refers to type = 'sen';,legislator,SELECT COUNT(bioguide) FROM `current-terms` WHERE class = 1 AND party = 'Republican',"CREATE TABLE `historical` (
  ballotpedia_id TEXT,
  bioguide_id TEXT PRIMARY KEY,
  bioguide_previous_id TEXT,
  birthday_bio TEXT,
  cspan_id TEXT,
  fec_id TEXT,
  first_name TEXT,
  gender_bio TEXT,
  google_entity_id_id TEXT,
  govtrack_id INTEGER,
  house_history_alternate_id TEXT,
  house_history_id REAL,
  icpsr_id REAL,
  last_name TEXT,
  lis_id TEXT,
  maplight_id TEXT,
  middle_name TEXT,
  nickname_name TEXT,
  official_full_name TEXT,
  opensecrets_id TEXT,
  religion_bio TEXT,
  suffix_name TEXT,
  thomas_id TEXT,
  votesmart_id TEXT,
  wikidata_id TEXT,
  wikipedia_id TEXT
);

CREATE TABLE `historical-terms` (
  address TEXT,
  bioguide TEXT PRIMARY KEY REFERENCES historical(bioguide_id),
  chamber TEXT,
  class REAL,
  contact_form TEXT,
  district REAL,
  end TEXT,
  fax TEXT,
  last TEXT,
  middle TEXT,
  name TEXT,
  office TEXT,
  party TEXT,
  party_affiliations TEXT,
  phone TEXT,
  relation TEXT,
  rss_url TEXT,
  start TEXT,
  state TEXT,
  state_rank TEXT,
  title TEXT,
  type TEXT,
  url TEXT
);

",142,6.51415491104126,250,"['historical', 'historical-terms']"
1826,What is the prefix for the teacher who handled the 'Reading About Other Cultures' project? Hint: Reading About Other Cultures' project refers to title = 'Reading About Other Cultures'; prefix for the teacher refers to teacher_prefix,donor,SELECT T2.teacher_prefix FROM essays AS T1 INNER JOIN projects AS T2 ON T1.projectid = T2.projectid WHERE T1.title LIKE 'Reading About Other Cultures',"CREATE TABLE `resources` (
  resourceid TEXT PRIMARY KEY,
  projectid TEXT REFERENCES projects(projectid),
  vendorid INTEGER,
  vendor_name TEXT,
  project_resource_type TEXT,
  item_name TEXT,
  item_number TEXT,
  item_unit_price REAL,
  item_quantity INTEGER
);

",167,6.548454999923706,250,"['projects', 'teachers']"
1827,Who is the hero character of the Disney movie directed by Will Finn? Hint: Will Finn refers to director = 'Will Finn';,disney,SELECT T1.hero FROM characters AS T1 INNER JOIN director AS T2 ON T2.name = T1.movie_title WHERE T2.director = 'Will Finn',"CREATE TABLE `characters` (
  movie_title TEXT PRIMARY KEY,
  release_date TEXT,
  hero TEXT REFERENCES voice-actors(character),
  villian TEXT,
  song TEXT
);

CREATE TABLE `director` (
  name TEXT PRIMARY KEY REFERENCES characters(movie_title),
  director TEXT
);

",151,6.5304059982299805,250,"['characters', 'director']"
1828,"Write down the call id of clients whose first name start with alphabet ""B"". Hint: first name start with alphabet ""B"" refers to first like 'B%'",retail_complains,SELECT T2.call_id FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first LIKE 'B%',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

",154,6.528418302536011,250,['client']
1829,"In Shakespeare's works before 1600, list down the title of the tragic story he had written that involved a character named ""Tybalt"". Hint: works before 1600 refers to DATE < 1600; tragic story refers to GenreType = 'Tragedy'; character named ""Tybalt"" refers to CharName = 'Tybalt'",shakespeare,SELECT DISTINCT T1.title FROM works AS T1 INNER JOIN chapters AS T2 ON T1.id = T2.work_id INNER JOIN paragraphs AS T3 ON T2.id = T3.chapter_id INNER JOIN characters AS T4 ON T3.character_id = T4.id WHERE T1.DATE < 1600 AND T1.GenreType = 'Tragedy' AND T4.CharName = 'Tybalt',"CREATE TABLE `works` (
  id INTEGER,
  Title TEXT,
  LongTitle TEXT,
  Date INTEGER,
  GenreType TEXT
);

CREATE TABLE `characters` (
  id INTEGER,
  CharName TEXT,
  Abbrev TEXT,
  Description TEXT
);

",201,6.60676908493042,250,"['works', 'characters']"
1830,List the address in Texas in the ascending order of city id. Hint: 'Texas' is a district,movie_3,SELECT address FROM address WHERE district = 'Texas' AND city_id = ( SELECT MIN(city_id) FROM address WHERE district = 'Texas' ),"CREATE TABLE `address` (
  address_id INTEGER,
  address TEXT,
  address2 TEXT,
  district TEXT,
  city_id INTEGER REFERENCES city(None),
  postal_code TEXT,
  phone TEXT,
  last_update DATETIME
);

CREATE TABLE `city` (
  city_id INTEGER,
  city TEXT,
  country_id INTEGER REFERENCES country(None),
  last_update DATETIME
);

",187,6.574563026428223,250,"['address', 'city']"
1831,List the educationnum and response of customers within the age of 20 to 30 that has the highest number of inhabitants among the group. Hint: age of 20 to 30 refers to age BETWEEN 20 AND 30; the highest number of inhabitants refers to MAX(INHABITANTS_K);,software_company,"SELECT T1.EDUCATIONNUM, T2.RESPONSE FROM Customers AS T1 INNER JOIN Mailings1_2 AS T2 ON T1.ID = T2.REFID INNER JOIN Demog AS T3 ON T1.GEOID = T3.GEOID WHERE T1.age >= 20 AND T1.age <= 30 ORDER BY T3.INHABITANTS_K DESC LIMIT 1","CREATE TABLE `demog` (
  GEOID INTEGER,
  INHABITANTS_K REAL,
  INCOME_K REAL,
  A_VAR1 REAL,
  A_VAR2 REAL,
  A_VAR3 REAL,
  A_VAR4 REAL,
  A_VAR5 REAL,
  A_VAR6 REAL,
  A_VAR7 REAL,
  A_VAR8 REAL,
  A_VAR9 REAL,
  A_VAR10 REAL,
  A_VAR11 REAL,
  A_VAR12 REAL,
  A_VAR13 REAL,
  A_VAR14 REAL,
  A_VAR15 REAL,
  A_VAR16 REAL,
  A_VAR17 REAL,
  A_VAR18 REAL
);

CREATE TABLE `customers` (
  ID INTEGER,
  SEX TEXT,
  MARITAL_STATUS TEXT,
  GEOID INTEGER REFERENCES Demog(None),
  EDUCATIONNUM INTEGER,
  OCCUPATION TEXT,
  age INTEGER
);

",193,6.598421096801758,250,"['demog', 'customers']"
1832,"How many trips made by a subscriber started in August, 2013 from a station that can hold more than 20 bikes? Hint: subscriber refers to subscription_type = 'Subscriber'; in August 2013 refers to start_date LIKE'8%' AND start_date LIKE'%2013%'; station that can hold more than 20 bikes refers to dock_count>20;",bike_share_1,SELECT COUNT(T2.id) FROM station AS T1 INNER JOIN trip AS T2 ON T1.id = T2.start_station_id WHERE T2.subscription_type = 'Subscriber' AND T2.start_date LIKE '8/%/2013%' AND T1.dock_count > 20,"CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",206,6.6183929443359375,250,"['trip', 'station']"
1833,Who is the sponsor of menu with ID 12463? Hint: FALSE;,menu,SELECT sponsor FROM Menu WHERE id = 12463,"CREATE TABLE `MenuItem` (
  id INTEGER,
  menu_page_id INTEGER REFERENCES MenuPage(id),
  price REAL,
  high_price REAL,
  dish_id INTEGER REFERENCES Dish(id),
  created_at TEXT,
  updated_at TEXT,
  xpos REAL,
  ypos REAL
);

",130,6.503763198852539,250,"['menu', 'sponsor']"
1834,"How many paragraphs are there in ""Ay, surely, mere the truth: I know his lady.""? Hint: ""Ay, surely, mere the truth: I know his lady."" refers to PlainText = 'Ay, surely, mere the truth: I know his lady.'",shakespeare,"SELECT ParagraphNum FROM paragraphs WHERE PlainText = 'Ay, surely, mere the truth: I know his lady.'","CREATE TABLE `paragraphs` (
  id INTEGER,
  ParagraphNum INTEGER,
  PlainText TEXT,
  character_id INTEGER REFERENCES characters(None),
  chapter_id INTEGER REFERENCES chapters(None)
);

",178,6.556488752365112,250,['paragraphs']
1835,"Provide the title and total time of the recipe which has the highest possibility of gaining weight. Hint: the highest possibility of gaining weight refers to MAX(total_fat); total time refers to recipe_id, total time refers to TOTAL(prep_min, cook_min, stnd_min)",cookbook,"SELECT T1.title, T1.prep_min + T1.cook_min + T1.stnd_min FROM Recipe AS T1 INNER JOIN Nutrition AS T2 ON T1.recipe_id = T2.recipe_id ORDER BY T2.total_fat DESC LIMIT 1","CREATE TABLE `recipe` (
  recipe_id INTEGER,
  title TEXT,
  subtitle TEXT,
  servings INTEGER,
  yield_unit TEXT,
  prep_min INTEGER,
  cook_min INTEGER,
  stnd_min INTEGER,
  source TEXT,
  intro TEXT,
  directions TEXT
);

CREATE TABLE `nutrition` (
  recipe_id INTEGER REFERENCES Recipe(recipe_id),
  protein REAL,
  carbo REAL,
  alcohol REAL,
  total_fat REAL,
  sat_fat REAL,
  cholestrl REAL,
  sodium REAL,
  iron REAL,
  vitamin_c REAL,
  vitamin_a REAL,
  fiber REAL,
  pcnt_cal_carb REAL,
  pcnt_cal_fat REAL,
  pcnt_cal_prot REAL,
  calories REAL
);

",178,6.556640625,250,"['recipe', 'nutrition']"
1836,"What is the percentage, by number of sales order units, for orders with quantities not greater than 3 and a discount of 0.2? Hint: quantities not greater than 3 refers to OrderQty<3; discount of 0.2 refers to UnitPriceDiscount = 0.2; percentage = DIVIDE(count(SalesOrderID(OrderQty<3 & UnitPriceDiscount = 0.2)), count(SalesOrderID))*100%",works_cycles,SELECT CAST(SUM(CASE WHEN OrderQty < 3 AND UnitPriceDiscount = 0.2 THEN 1 ELSE 0 END) AS REAL) / COUNT(SalesOrderID) FROM SalesOrderDetail,"CREATE TABLE `salesorderdetail` (
  SalesOrderID INTEGER REFERENCES SalesOrderHeader(SalesOrderID),
  SalesOrderDetailID INTEGER,
  CarrierTrackingNumber TEXT,
  OrderQty INTEGER,
  ProductID INTEGER REFERENCES SpecialOfferProduct(ProductID),
  SpecialOfferID INTEGER REFERENCES SpecialOfferProduct(SpecialOfferID),
  UnitPrice REAL,
  UnitPriceDiscount REAL,
  LineTotal REAL,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",527,7.421371936798096,250,['salesorderdetail']
1837,How long was the longest minute delay caused by a weather problem in airport id 12264? Hint: longest minute delay caused by a weather problem refers to MAX(WEATHER_DELAY); airport id refers to ORIGIN_AIRPORT_ID; ORIGIN_AIRPORT_ID = 12264;,airline,SELECT WEATHER_DELAY FROM Airlines WHERE ORIGIN_AIRPORT_ID = 12264 ORDER BY WEATHER_DELAY DESC LIMIT 1,"CREATE TABLE `airlines` (
  FL_DATE TEXT,
  OP_CARRIER_AIRLINE_ID INTEGER REFERENCES Air Carriers(Code),
  TAIL_NUM TEXT,
  OP_CARRIER_FL_NUM INTEGER,
  ORIGIN_AIRPORT_ID INTEGER,
  ORIGIN_AIRPORT_SEQ_ID INTEGER,
  ORIGIN_CITY_MARKET_ID INTEGER,
  ORIGIN TEXT REFERENCES Airports(Code),
  DEST_AIRPORT_ID INTEGER,
  DEST_AIRPORT_SEQ_ID INTEGER,
  DEST_CITY_MARKET_ID INTEGER,
  DEST TEXT REFERENCES Airports(Code),
  CRS_DEP_TIME INTEGER,
  DEP_TIME INTEGER,
  DEP_DELAY INTEGER,
  DEP_DELAY_NEW INTEGER,
  ARR_TIME INTEGER,
  ARR_DELAY INTEGER,
  ARR_DELAY_NEW INTEGER,
  CANCELLED INTEGER,
  CANCELLATION_CODE TEXT,
  CRS_ELAPSED_TIME INTEGER,
  ACTUAL_ELAPSED_TIME INTEGER,
  CARRIER_DELAY INTEGER,
  WEATHER_DELAY INTEGER,
  NAS_DELAY INTEGER,
  SECURITY_DELAY INTEGER,
  LATE_AIRCRAFT_DELAY INTEGER
);

",181,6.561293363571167,250,['airlines']
1838,Indicate the university's name with the highest ranking score in Teaching. Hint: university's name refers to university_name; highest ranking score refers to MAX(score); in Teaching refers to criteria_name = 'Teaching',university,SELECT T1.university_name FROM university AS T1 INNER JOIN university_ranking_year AS T2 ON T1.id = T2.university_id INNER JOIN ranking_criteria AS T3 ON T3.id = T2.ranking_criteria_id WHERE T3.criteria_name = 'Teaching' ORDER BY T2.score DESC LIMIT 1,"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `university_ranking_year` (
  university_id INTEGER REFERENCES university(id),
  ranking_criteria_id INTEGER REFERENCES ranking_criteria(id),
  year INTEGER,
  score INTEGER
);

CREATE TABLE `ranking_criteria` (
  id INTEGER,
  ranking_system_id INTEGER REFERENCES ranking_system(id),
  criteria_name TEXT
);

",180,6.556496620178223,250,"['university', 'university_ranking_year', 'ranking_criteria']"
1839,Which role has the most common contact among businesses? Hint: Most common contact among businesses refers to BusinessEntityContact with the most name,works_cycles,SELECT T1.Name FROM ContactType AS T1 INNER JOIN BusinessEntityContact AS T2 ON T1.ContactTypeID = T2.ContactTypeID GROUP BY T1.Name ORDER BY COUNT(T1.Name) DESC LIMIT 1,"CREATE TABLE `businessentitycontact` (
  BusinessEntityID INTEGER PRIMARY KEY REFERENCES BusinessEntity(BusinessEntityID),
  PersonID INTEGER PRIMARY KEY REFERENCES Person(BusinessEntityID),
  ContactTypeID INTEGER PRIMARY KEY REFERENCES ContactType(ContactTypeID),
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `person` (
  BusinessEntityID INTEGER REFERENCES BusinessEntity(BusinessEntityID),
  PersonType TEXT,
  NameStyle INTEGER,
  Title TEXT,
  FirstName TEXT,
  MiddleName TEXT,
  LastName TEXT,
  Suffix TEXT,
  EmailPromotion INTEGER,
  AdditionalContactInfo TEXT,
  Demographics TEXT,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",450,7.194056987762451,250,"['businessentitycontact', 'person']"
1840,"What is the percentage of severe cases that are related to sexual assault? Hint: related to sexual assault refers to primary_description = 'CRIME SEXUAL ASSAULT'; severe case refers to index_code = 'I'; percentage = Divide (Count (iucr_no where primary_description = 'CRIME SEXUAL ASSAULT'), Count (iucr_no)) * 100",chicago_crime,SELECT CAST(SUM(CASE WHEN primary_description = 'CRIM SEXUAL ASSAULT' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) FROM IUCR WHERE index_code = 'I',"CREATE TABLE `crime` (
  report_no INTEGER,
  case_number TEXT,
  date TEXT,
  block TEXT,
  iucr_no TEXT REFERENCES IUCR(iucr_no),
  location_description TEXT,
  arrest TEXT,
  domestic TEXT,
  beat INTEGER,
  district_no INTEGER REFERENCES District(district_no),
  ward_no INTEGER REFERENCES Ward(ward_no),
  community_area_no INTEGER REFERENCES Community_Area(community_area_no),
  fbi_code_no TEXT REFERENCES FBI_Code(fbi_code_no),
  latitude TEXT,
  longitude TEXT
);

CREATE TABLE `iucr` (
  iucr_no TEXT PRIMARY KEY,
  primary_description TEXT,
  secondary_description TEXT,
  index_code TEXT
);

",221,6.627734899520874,250,"['crime', 'iucr']"
1841,"What is the percentage of romance films among films produced in India in 2015? Hint: romance films refers to genre_name = 'Romance'; in India refers to country_name = 'India'; 2015 refers to release_date BETWEEN '2015-01-01' AND '2015-01-31'; percentage = divide(sum(movie_id) when genre_name = 'Romance', count(movie_id)) as percentage",movies_4,SELECT CAST(COUNT(CASE WHEN T4.genre_name = 'Romance' THEN T1.movie_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_COUNTry AS T3 ON T1.movie_id = T3.movie_id INNER JOIN genre AS T4 ON T2.genre_id = T4.genre_id INNER JOIN COUNTry AS T5 ON T3.COUNTry_id = T5.COUNTry_id WHERE T5.COUNTry_name = 'India' AND T1.release_date BETWEEN '2015-01-01' AND '2015-12-31',"CREATE TABLE `movie_genres` (
  movie_id INTEGER REFERENCES movie(movie_id),
  genre_id INTEGER REFERENCES genre(genre_id)
);

CREATE TABLE `genre` (
  genre_id INTEGER,
  genre_name TEXT
);

CREATE TABLE `movie` (
  movie_id INTEGER,
  title TEXT,
  budget INTEGER,
  homepage TEXT,
  overview TEXT,
  popularity REAL,
  release_date DATE,
  revenue INTEGER,
  runtime INTEGER,
  movie_status TEXT,
  tagline TEXT,
  vote_average REAL,
  vote_count INTEGER
);

CREATE TABLE `production_country` (
  movie_id INTEGER REFERENCES movie(movie_id),
  country_id INTEGER REFERENCES country(country_id)
);

",294,6.800992727279663,250,"['movie_genres', 'genre', 'movie', 'production_country']"
1842,List the first names of the people with more than 65 sick leave hours. Hint: SickLeaveHours>65;,works_cycles,SELECT T2.FirstName FROM Employee AS T1 INNER JOIN Person AS T2 ON T1.BusinessEntityID = T2.BusinessEntityID WHERE T1.SickLeaveHours > 65,"CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",453,7.204921245574951,250,['employee']
1843,"What is the average household income of Glendale? Hint: ""Glendale"" is the City Name; Average household income refers to avg(Household Income)",regional_sales,SELECT AVG(`Household Income`) FROM `Store Locations` WHERE `City Name` = 'Glendale',"CREATE TABLE `store locations` (
  StoreID INTEGER,
  City Name TEXT,
  County TEXT,
  StateCode TEXT REFERENCES Regions(StateCode),
  State TEXT,
  Type TEXT,
  Latitude REAL,
  Longitude REAL,
  AreaCode INTEGER,
  Population INTEGER,
  Household Income INTEGER,
  Median Income INTEGER,
  Land Area INTEGER,
  Water Area INTEGER,
  Time Zone TEXT
);

",160,6.535174608230591,250,['store locations']
1844,"How much percentage of the film did Mary Keitel perform more than Angela Witherspoon? Hint: 'Mary Keitel' AND 'Angela Witherspoon' are full name of actors; full name refers to FirstName, LastName; calculation = DIVIDE(SUBTRACT(SUM('Mary Keitel'), SUM('Angela Witherspoon')), SUM('Angela Witherspoon')) * 100",movie_3,"SELECT CAST((SUM(IIF(T1.first_name = 'ANGELA' AND T1.last_name = 'WITHERSPOON', 1, 0)) - SUM(IIF(T1.first_name = 'MARY' AND T1.last_name = 'KEITEL', 1, 0))) AS REAL) * 100 / SUM(IIF(T1.first_name = 'MARY' AND T1.last_name = 'KEITEL', 1, 0)) FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id","CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",260,6.740951776504517,250,"['actor', 'film_actor']"
1845,How many customers are located in London? Hint: London refers to City = 'London',retail_world,SELECT COUNT(CustomerID) FROM Customers WHERE City = 'London',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  CustomerName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT
);

",154,6.529362201690674,250,['customers']
1846,What is the relationship between object sample no. 25 and object sample no. 2 on image no. 1? Hint: relationship refers to PRED_CLASS; object sample no. 25 and object sample no. 2 refers to OBJ1_SAMPLE_ID = 25 and OBJ2_SAMPLE_ID = 2; image no. 1 refers to IMG_ID = 1,image_and_language,SELECT T2.PRED_CLASS FROM IMG_REL AS T1 INNER JOIN PRED_CLASSES AS T2 ON T1.PRED_CLASS_ID = T2.PRED_CLASS_ID WHERE T1.IMG_ID = 1 AND T1.OBJ1_SAMPLE_ID = 25 AND T1.OBJ2_SAMPLE_ID = 2,"CREATE TABLE `PRED_CLasSES` (
  PRED_CLASS_ID INTEGER,
  PRED_CLASS TEXT
);

CREATE TABLE `img_rel` (
  IMG_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(IMG_ID) REFERENCES IMG_OBJ(IMG_ID),
  PRED_CLASS_ID INTEGER PRIMARY KEY REFERENCES PRED_CLASSES(PRED_CLASS_ID),
  OBJ1_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID),
  OBJ2_SAMPLE_ID INTEGER PRIMARY KEY REFERENCES IMG_OBJ(OBJ_SAMPLE_ID)
);

",238,6.67155385017395,250,"['PRED_CLasSES', 'img_rel']"
1847,In which city was the game held where the oldest competitor participated? Hint: in which city refers to city_name; the oldest refers to MAX(age);,olympics,SELECT T4.city_name FROM games_competitor AS T1 INNER JOIN games AS T2 ON T1.games_id = T2.id INNER JOIN games_city AS T3 ON T1.games_id = T3.games_id INNER JOIN city AS T4 ON T3.city_id = T4.id ORDER BY T1.age DESC LIMIT 1,"CREATE TABLE `games_city` (
  games_id INTEGER REFERENCES games(id),
  city_id INTEGER REFERENCES city(id)
);

CREATE TABLE `city` (
  id INTEGER,
  city_name TEXT
);

CREATE TABLE `games_competitor` (
  id INTEGER,
  games_id INTEGER REFERENCES games(id),
  person_id INTEGER REFERENCES person(id),
  age INTEGER
);

",181,6.563211917877197,250,"['games_city', 'city', 'games_competitor']"
1848,"What is the percentage of employees who work the night shift? Hint: percentage = DIVIDE(SUM(Name = 'Night')), (COUNT(ShiftID)) as percentage;",works_cycles,SELECT CAST(SUM(CASE WHEN T1.Name = 'Night' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.BusinessEntityID) FROM Shift AS T1 INNER JOIN EmployeeDepartmentHistory AS T2 ON T1.ShiftId = T2.ShiftId,"CREATE TABLE `shift` (
  ShiftID INTEGER,
  Name TEXT PRIMARY KEY,
  StartTime TEXT PRIMARY KEY,
  EndTime TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

CREATE TABLE `employee` (
  BusinessEntityID INTEGER REFERENCES Person(BusinessEntityID),
  NationalIDNumber TEXT PRIMARY KEY,
  LoginID TEXT PRIMARY KEY,
  OrganizationNode TEXT,
  OrganizationLevel INTEGER,
  JobTitle TEXT,
  BirthDate DATE,
  MaritalStatus TEXT,
  Gender TEXT,
  HireDate DATE,
  SalariedFlag INTEGER,
  VacationHours INTEGER,
  SickLeaveHours INTEGER,
  CurrentFlag INTEGER,
  rowguid TEXT PRIMARY KEY,
  ModifiedDate DATETIME
);

",463,7.229741334915161,250,"['shift', 'employee']"
1849,"Among the students who took the course Machine Learning Theory, how many of them are undergraduates? Hint: UG is an abbreviated name of undergraduate student in which type = 'UG';",cs_semester,SELECT COUNT(T1.student_id) FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.name = 'Machine Learning Theory' AND T1.type = 'UG',"CREATE TABLE `course` (
  course_id INTEGER,
  name TEXT,
  credit INTEGER,
  diff INTEGER
);

CREATE TABLE `registration` (
  course_id INTEGER PRIMARY KEY REFERENCES course(course_id),
  student_id INTEGER PRIMARY KEY REFERENCES student(student_id),
  grade TEXT,
  sat INTEGER
);

CREATE TABLE `student` (
  student_id INTEGER,
  f_name TEXT,
  l_name TEXT,
  phone_number TEXT,
  email TEXT,
  intelligence INTEGER,
  gpa REAL,
  type TEXT
);

",155,6.531378984451294,250,"['course', 'registration', 'student']"
1850,What is the country ID of the University of Tokyo? Hint: University of Tokyo refers to university_name = 'University of Tokyo';,university,SELECT country_id FROM university WHERE university_name = 'University of Tokyo',"CREATE TABLE `university` (
  id INTEGER,
  country_id INTEGER REFERENCES country(id),
  university_name TEXT
);

CREATE TABLE `country` (
  id INTEGER,
  country_name TEXT
);

",161,6.535956144332886,250,"['university', 'country']"
1851,"How many clients who live in New York City submitted their complaints via fax? Hint: submitted complaints via fax refers to ""Submitted via"" = 'Fax';",retail_complains,SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.city = 'New York City' AND T2.`Submitted via` = 'Fax',"CREATE TABLE `client` (
  client_id TEXT PRIMARY KEY,
  sex TEXT,
  day INTEGER,
  month INTEGER,
  year INTEGER,
  age INTEGER,
  social TEXT,
  first TEXT,
  middle TEXT,
  last TEXT,
  phone TEXT,
  email TEXT,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  state TEXT,
  zipcode INTEGER,
  district_id INTEGER REFERENCES district(district_id)
);

CREATE TABLE `callcenterlogs` (
  Date received DATE,
  Complaint ID TEXT PRIMARY KEY,
  rand client TEXT REFERENCES client(client_id),
  phonefinal TEXT,
  vru+line TEXT,
  call_id INTEGER,
  priority INTEGER,
  type TEXT,
  outcome TEXT,
  server TEXT,
  ser_start TEXT,
  ser_exit TEXT,
  ser_time TEXT
);

",153,6.526611089706421,250,"['client', 'callcenterlogs']"
1852,What is the phone number for the employee in charge of the Portsmouth territory? Hint: phone refers to HomePhone; Portsmouth territory refers to TerritoryDescription = 'Portsmouth';,retail_world,SELECT T1.HomePhone FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID INNER JOIN Territories AS T3 ON T2.TerritoryID = T3.TerritoryID WHERE T3.TerritoryDescription = 'Portsmouth',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",176,6.551021575927734,250,['employees']
1853,"List the products whose supplier is Pavlova, Ltd. Please include the product ID and re-order level. Hint: ""Pavlova, Ltd"" is the CompanyName; products refers to ProductName",retail_world,"SELECT T1.ProductName, T1.ProductID, T1.ReorderLevel FROM Products AS T1 INNER JOIN Suppliers AS T2 ON T1.SupplierID = T2.SupplierID WHERE T2.CompanyName = 'Pavlova, Ltd.'","CREATE TABLE `products` (
  ProductID INTEGER,
  ProductName TEXT,
  SupplierID INTEGER REFERENCES Suppliers(SupplierID),
  CategoryID INTEGER REFERENCES Categories(CategoryID),
  Unit TEXT,
  Price REAL
);

CREATE TABLE `suppliers` (
  SupplierID INTEGER,
  SupplierName TEXT,
  ContactName TEXT,
  Address TEXT,
  City TEXT,
  PostalCode TEXT,
  Country TEXT,
  Phone TEXT
);

",179,6.553323030471802,250,"['products', 'suppliers']"
1854,How many disabled students have payment due? Hint: payment due refers to bool = 'pos';,student_loan,SELECT COUNT(T1.name) FROM no_payment_due AS T1 INNER JOIN disabled AS T2 ON T1.name = T2.name WHERE T1.bool = 'pos',"CREATE TABLE `disabled` (
  name TEXT PRIMARY KEY REFERENCES person(name)
);

CREATE TABLE `no_payment_due` (
  name TEXT PRIMARY KEY REFERENCES person(name),
  bool TEXT REFERENCES bool(name)
);

",169,6.543940305709839,250,"['disabled', 'no_payment_due']"
1855,List the top 5 shopping apps with the most reviews. Hint: shopping apps refers to Genre = 'Shopping'; most reviews refers to MAX(Reviews);,app_store,SELECT DISTINCT App FROM playstore WHERE Genres = 'Shopping' GROUP BY App ORDER BY COUNT(App) DESC LIMIT 5,"CREATE TABLE `playstore` (
  App TEXT,
  Category TEXT,
  Rating REAL,
  Reviews INTEGER,
  Size TEXT,
  Installs TEXT,
  Type TEXT,
  Price TEXT,
  Content Rating TEXT,
  Genres TEXT
);

",139,6.515506744384766,250,['playstore']
1856,Identify the total weight of shipments transported in 2016 by the newest Peterbilt. Hint: transported in 2016 refers to CAST(ship_date as DATE) = 2016; 'Peterbilt' is the make; newest refers to Max(model_year),shipping,"SELECT SUM(T2.weight) FROM truck AS T1 INNER JOIN shipment AS T2 ON T1.truck_id = T2.truck_id WHERE T1.make = 'Peterbilt' AND STRFTIME('%Y', T2.ship_date) = '2016' ORDER BY T1.model_year DESC LIMIT 1","CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

CREATE TABLE `truck` (
  truck_id INTEGER,
  make TEXT,
  model_year INTEGER
);

",181,6.5695960521698,250,"['shipment', 'truck']"
1857,What are the top 3 stations that have sold the highest quantities for an item in a single day? Hint: highest quantity refers to Max(units); station refers to station_nbr,sales_in_weather,SELECT T2.station_nbr FROM sales_in_weather AS T1 INNER JOIN relation AS T2 ON T1.store_nbr = T2.store_nbr ORDER BY T1.units DESC LIMIT 3,"CREATE TABLE `sales_in_weather` (
  date DATE PRIMARY KEY,
  store_nbr INTEGER PRIMARY KEY,
  item_nbr INTEGER PRIMARY KEY,
  units INTEGER
);

",148,6.5220046043396,250,['sales_in_weather']
1858,"List the actor's last name that starred the film with the description of ""A Thoughtful Drama of a Composer And a Feminist who must Meet a Secret Agent in The Canadian Rockies"".",movie_3,SELECT T1.last_name FROM actor AS T1 INNER JOIN film_actor AS T2 ON T1.actor_id = T2.actor_id INNER JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.description = 'A Thoughtful Drama of a Composer And a Feminist who must Meet a Secret Agent in The Canadian Rockies',"CREATE TABLE `film_text` (
  film_id INTEGER,
  title TEXT,
  description TEXT
);

CREATE TABLE `actor` (
  actor_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  last_update DATETIME
);

CREATE TABLE `film_actor` (
  actor_id INTEGER PRIMARY KEY REFERENCES actor(None),
  film_id INTEGER PRIMARY KEY REFERENCES film(None),
  last_update DATETIME
);

",208,6.610400199890137,250,"['film_text', 'actor', 'film_actor']"
1859,Name the station and city with the most borrowed bike. Hint: the station with the most borrowed bikes refers to MAX(start_station);,bike_share_1,"SELECT T2.start_station_name, T1.city FROM station AS T1 INNER JOIN trip AS T2 ON T2.start_station_name = T1.name GROUP BY T2.start_station_name ORDER BY COUNT(T2.start_station_name) DESC LIMIT 1","CREATE TABLE `trip` (
  id INTEGER,
  duration INTEGER,
  start_date TEXT,
  start_station_name TEXT,
  start_station_id INTEGER,
  end_date TEXT,
  end_station_name TEXT,
  end_station_id INTEGER,
  bike_id INTEGER,
  subscription_type TEXT,
  zip_code INTEGER
);

CREATE TABLE `station` (
  id INTEGER,
  name TEXT,
  lat REAL,
  long REAL,
  dock_count INTEGER,
  city TEXT,
  installation_date TEXT
);

",139,6.5135626792907715,250,"['trip', 'station']"
1860,Which team won by wickets in match ID 335993? Hint: team refers to Team_Name,soccer_2016,SELECT T1.Team_Name FROM Team AS T1 INNER JOIN Match AS T2 ON T1.team_id = T2.match_winner INNER JOIN Player_Match AS T3 ON T1.Team_Id = T3.Team_Id INNER JOIN Win_By AS T4 ON T2.Win_Type = T4.Win_Id WHERE T2.Match_Id = '335993' GROUP BY T1.Team_Name,"CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

CREATE TABLE `win_by` (
  Win_Id INTEGER,
  Win_Type TEXT
);

",227,6.648438930511475,250,"['team', 'win_by']"
1861,"How many kinds of violations did ""Stacks Restaurant"" have on 2016/10/4? Hint: ""Stacks Restaurant"" is the name of the business; date = '2016-10-04';",food_inspection,SELECT COUNT(DISTINCT T1.violation_type_id) FROM violations AS T1 INNER JOIN businesses AS T2 ON T1.business_id = T2.business_id WHERE T2.name = 'Stacks Restaurant' AND T1.`date` = '2016-10-04',"CREATE TABLE `violations` (
  business_id INTEGER REFERENCES businesses(business_id),
  date DATE,
  violation_type_id TEXT,
  risk_category TEXT,
  description TEXT
);

CREATE TABLE `businesses` (
  business_id INTEGER,
  name TEXT,
  address TEXT,
  city TEXT,
  postal_code TEXT,
  latitude REAL,
  longitude REAL,
  phone_number INTEGER,
  tax_code TEXT,
  business_certificate INTEGER,
  application_date DATE,
  owner_name TEXT,
  owner_address TEXT,
  owner_city TEXT,
  owner_state TEXT,
  owner_zip TEXT
);

",162,6.539729833602905,250,"['violations', 'businesses']"
1862,"What is the total number of pounds being transported for S K L Enterprises Inc? Hint: ""S K L Enterprises Inc"" is the cust_name; total number of pounds refers to Sum(weight)",shipping,SELECT SUM(T2.weight) FROM customer AS T1 INNER JOIN shipment AS T2 ON T1.cust_id = T2.cust_id WHERE T1.cust_name = 'S K L Enterprises Inc',"CREATE TABLE `customer` (
  cust_id INTEGER,
  cust_name TEXT,
  annual_revenue INTEGER,
  cust_type TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip REAL,
  phone TEXT
);

CREATE TABLE `shipment` (
  ship_id INTEGER,
  cust_id INTEGER REFERENCES customer(cust_id),
  weight REAL,
  truck_id INTEGER REFERENCES truck(truck_id),
  driver_id INTEGER REFERENCES driver(driver_id),
  city_id INTEGER REFERENCES city(city_id),
  ship_date TEXT
);

",156,6.5320210456848145,250,"['customer', 'shipment']"
1863,"Name the title of books written by author A.J.Ayer. Hint: ""A.J. Ayer"" is the author_name;",books,SELECT T3.title FROM book_author AS T1 INNER JOIN author AS T2 ON T1.author_id = T2.author_id INNER JOIN book AS T3 ON T3.book_id = T1.book_id WHERE T2.author_name = 'A.J. Ayer',"CREATE TABLE `book_author` (
  book_id INTEGER PRIMARY KEY REFERENCES book(book_id),
  author_id INTEGER PRIMARY KEY REFERENCES author(author_id)
);

CREATE TABLE `book` (
  book_id INTEGER,
  title TEXT,
  isbn13 TEXT,
  language_id INTEGER REFERENCES book_language(language_id),
  num_pages INTEGER,
  publication_date DATE,
  publisher_id INTEGER REFERENCES publisher(publisher_id)
);

CREATE TABLE `author` (
  author_id INTEGER,
  author_name TEXT
);

",198,6.598629713058472,250,"['book_author', 'book', 'author']"
1864,"Provide the names and locations of the facilities that failed inspections on 29th July 2013. Hint: name refers to dba_name; location refers to latitude, longitude; failed inspections refers to results = 'Fail'; on 29th July 2013 refers to inspection_date = '2013-07-29'",food_inspection_2,"SELECT T2.dba_name, T2.longitude, T2.latitude FROM inspection AS T1 INNER JOIN establishment AS T2 ON T1.license_no = T2.license_no WHERE T1.inspection_date = '2013-07-29' AND T1.results = 'Fail'","CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",203,6.60460352897644,250,"['inspection', 'establishment']"
1865,"Give the review of the restaurant at 430, Broadway. Hint: 430 Broadway refers to street_num = 430 and street_name = 'Broadway'",restaurant,SELECT T1.review FROM generalinfo AS T1 INNER JOIN location AS T2 ON T1.id_restaurant = T2.id_restaurant WHERE T2.street_name = 'Broadway' AND T2.street_num = 430,"CREATE TABLE `location` (
  id_restaurant INTEGER REFERENCES generalinfo(id_restaurant),
  street_num INTEGER,
  street_name TEXT,
  city TEXT REFERENCES geographic(city)
);

",146,6.5196592807769775,250,['location']
1866,What is the average price per car produced in Japan? Hint: produced in Japan refers to country = 'Japan'; average price per car = avg(price) where country = 'Japan',cars,SELECT AVG(T1.price) FROM price AS T1 INNER JOIN production AS T2 ON T1.ID = T2.ID INNER JOIN country AS T3 ON T3.origin = T2.country WHERE T3.country = 'Japan',"CREATE TABLE `data` (
  ID INTEGER REFERENCES price(ID),
  mpg REAL,
  cylinders INTEGER,
  displacement REAL,
  horsepower INTEGER,
  weight INTEGER,
  acceleration REAL,
  model INTEGER,
  car_name TEXT
);

CREATE TABLE `country` (
  origin INTEGER,
  country TEXT
);

CREATE TABLE `production` (
  ID INTEGER PRIMARY KEY REFERENCES price(ID) REFERENCES data(ID),
  model_year INTEGER PRIMARY KEY,
  country INTEGER REFERENCES country(origin)
);

",150,6.524614334106445,250,"['data', 'country', 'production']"
1867,How many users of the app were not active when event no.2 happened? Hint: not active refers to is_active = 0; event no. refers to event_id; event_id = 2;,talkingdata,SELECT COUNT(event_id) FROM app_events WHERE event_id = 2 AND is_active = 0,"CREATE TABLE `app_all` (
  app_id INTEGER
);

CREATE TABLE `app_events` (
  event_id INTEGER PRIMARY KEY REFERENCES events(event_id),
  app_id INTEGER PRIMARY KEY,
  is_installed INTEGER,
  is_active INTEGER
);

",214,6.618999719619751,250,"['app_all', 'app_events']"
1868,Please list the releases that have been downloaded for more than 20000 times. Hint: releases refer to groupName; downloaded for more than 20000 times refers to totalSnatched > 20000;,music_tracker,SELECT groupName FROM torrents WHERE totalSnatched > 20000,"CREATE TABLE `torrents` (
  groupName TEXT,
  totalSnatched INTEGER,
  artist TEXT,
  groupYear INTEGER,
  releaseType TEXT,
  groupId INTEGER,
  id INTEGER
);

",154,6.527684450149536,250,['torrents']
1869,Calculate the average rent amount paid by the customer with customer id 15. Hint: average rent amount refers to AVG(amount),movie_3,SELECT AVG(amount) FROM payment WHERE customer_id = 15,"CREATE TABLE `payment` (
  payment_id INTEGER,
  customer_id INTEGER REFERENCES customer(None),
  staff_id INTEGER REFERENCES staff(None),
  rental_id INTEGER REFERENCES rental(None),
  amount REAL,
  payment_date DATETIME,
  last_update DATETIME
);

",193,6.592171907424927,250,['payment']
1870,"Who was credited as ""technical advisor"" in the episode titled ""Cherished""? Hint: who refers to name; credited refers to credited = 'true'; as ""technical advisor"" refers to role = 'technical advisor'; titled ""Cherished"" refers to title = 'Cherished'",law_episode,SELECT T3.name FROM Episode AS T1 INNER JOIN Credit AS T2 ON T1.episode_id = T2.episode_id INNER JOIN Person AS T3 ON T3.person_id = T2.person_id WHERE T1.title = 'Cherished' AND T2.credited = 'true' AND T2.role = 'technical advisor',"CREATE TABLE `credit` (
  episode_id TEXT PRIMARY KEY REFERENCES Episode(episode_id),
  person_id TEXT PRIMARY KEY REFERENCES Person(person_id),
  category TEXT,
  role TEXT,
  credited TEXT
);

CREATE TABLE `episode` (
  episode_id TEXT PRIMARY KEY,
  series TEXT,
  season INTEGER,
  episode INTEGER,
  number_in_series INTEGER,
  title TEXT,
  summary TEXT,
  air_date DATE,
  episode_image TEXT,
  rating REAL,
  votes INTEGER
);

",187,6.566489934921265,250,"['credit', 'episode']"
1871,Which brewery does the most purchased root beer in 2016 belong to? Hint: most purchased root beer refers to MAX(COUNT(BrandID)); in 2016 refers to PurchaseDate > = '2016-01-01' AND PurchaseDate < = '2016-12-31';,beer_factory,SELECT T2.BreweryName FROM rootbeer AS T1 INNER JOIN rootbeerbrand AS T2 ON T1.BrandID = T2.BrandID WHERE T1.PurchaseDate BETWEEN '2016-01-01' AND '2016-12-31' GROUP BY T2.BrandID ORDER BY COUNT(T1.BrandID) DESC LIMIT 1,"CREATE TABLE `rootbeer` (
  RootBeerID INTEGER,
  BrandID INTEGER REFERENCES rootbeerbrand(BrandID),
  ContainerType TEXT,
  LocationID INTEGER REFERENCES location(LocationID) REFERENCES geolocation(LocationID),
  PurchaseDate DATE
);

CREATE TABLE `rootbeerbrand` (
  BrandID INTEGER,
  BrandName TEXT,
  FirstBrewedYear INTEGER,
  BreweryName TEXT,
  City TEXT,
  State TEXT,
  Country TEXT,
  Description TEXT,
  CaneSugar TEXT,
  CornSyrup TEXT,
  Honey TEXT,
  ArtificialSweetener TEXT,
  Caffeinated TEXT,
  Alcoholic TEXT,
  AvailableInCans TEXT,
  AvailableInBottles TEXT,
  AvailableInKegs TEXT,
  Website TEXT,
  FacebookPage TEXT,
  Twitter TEXT,
  WholesaleCost REAL,
  CurrentRetailPrice REAL
);

",204,6.606737852096558,250,"['rootbeer', 'rootbeerbrand']"
1872,What is the name of the team that won the first ever match? Hint: name of the team refers to Team_Name; won the first ever match refers to Match_Winner where max(Match_Date),soccer_2016,SELECT T1.Team_Name FROM team AS T1 INNER JOIN Match AS T2 ON T1.Team_Id = T2.Match_Winner WHERE T2.Season_Id = 1 ORDER BY T2.Match_Date LIMIT 1,"CREATE TABLE `match` (
  Match_Id INTEGER,
  Team_1 INTEGER REFERENCES Team(Team_Id),
  Team_2 INTEGER REFERENCES Team(Team_Id),
  Match_Date DATE,
  Season_Id INTEGER REFERENCES Season(Season_Id),
  Venue_Id INTEGER REFERENCES Venue(Venue_Id),
  Toss_Winner INTEGER REFERENCES Team(Team_Id),
  Toss_Decide INTEGER REFERENCES Toss_Decision(Toss_Id),
  Win_Type INTEGER REFERENCES Win_By(Win_Id),
  Win_Margin INTEGER,
  Outcome_type INTEGER REFERENCES Out_Type(Out_Id),
  Match_Winner INTEGER REFERENCES Team(Team_Id),
  Man_of_the_Match INTEGER REFERENCES Player(Player_Id)
);

CREATE TABLE `team` (
  Team_Id INTEGER,
  Team_Name TEXT
);

",246,6.6832358837127686,250,"['match', 'team']"
1873,In which Wikipedia page does the word ID No. 174 have the most appearances? Give the title. Hint: word ID No. 174 refers to wid = 174; appearances refers to pages_words_sampling.occurrences,language_corpus,SELECT title FROM pages WHERE pid = ( SELECT pid FROM pages_words WHERE wid = 174 ORDER BY occurrences DESC LIMIT 1 ),"CREATE TABLE `pages` (
  pid INTEGER,
  lid INTEGER PRIMARY KEY REFERENCES langs(lid),
  page INTEGER PRIMARY KEY,
  revision INTEGER,
  title TEXT PRIMARY KEY,
  words INTEGER
);

CREATE TABLE `pages_words` (
  pid INTEGER PRIMARY KEY REFERENCES pages(pid),
  wid INTEGER PRIMARY KEY REFERENCES words(wid),
  occurrences INTEGER
);

",183,6.564114809036255,250,"['pages', 'pages_words']"
1874,"What is the average number of pages of David Coward's books? Hint: number of pages refers to num_pages; average = Divide (Sum(num_pages), Count(book_id))",books,SELECT AVG(T1.num_pages) FROM book AS T1 INNER JOIN book_author AS T2 ON T1.book_id = T2.book_id INNER JOIN author AS T3 ON T3.author_id = T2.author_id WHERE T3.author_name = 'David Coward',"CREATE TABLE `book_author` (
  book_id INTEGER PRIMARY KEY REFERENCES book(book_id),
  author_id INTEGER PRIMARY KEY REFERENCES author(author_id)
);

CREATE TABLE `author` (
  author_id INTEGER,
  author_name TEXT
);

",210,6.616906642913818,250,"['book_author', 'author']"
1875,"In which city has the greatest population, what is its percentage to its country population?",mondial_geo,"SELECT T3.Name, CAST(T3.Population AS REAL) * 100 / T1.Population FROM country AS T1 INNER JOIN province AS T2 ON T1.Code = T2.Country INNER JOIN city AS T3 ON T3.Country = T2.Country ORDER BY T3.Population DESC LIMIT 1","CREATE TABLE `city` (
  Name TEXT PRIMARY KEY,
  Country TEXT REFERENCES province(None) REFERENCES country(None),
  Province TEXT PRIMARY KEY REFERENCES province(None),
  Population INTEGER,
  Longitude REAL,
  Latitude REAL
);

CREATE TABLE `population` (
  Country TEXT PRIMARY KEY REFERENCES country(None),
  Population_Growth REAL,
  Infant_Mortality REAL
);

",263,6.743936538696289,250,"['city', 'population']"
1876,"What is the full name of the customer who rented movies for 7 consecutive days? Hint: rented for 7 consecutive days refers to Subtract(return_date, rental_date) = 7; full name refers to first_name, last_name",movie_3,"SELECT T1.first_name, T1.last_name FROM customer AS T1 INNER JOIN ( SELECT customer_id, COUNT(*) AS num_days FROM ( SELECT *, date(days, '-' || rn || ' day') AS results FROM ( SELECT customer_id, days, row_number() OVER (PARTITION BY customer_id ORDER BY days) AS rn FROM ( SELECT DISTINCT customer_id, date(rental_date) AS days FROM rental ) ) ) GROUP BY customer_id, results HAVING num_days = 7 ) AS T2 ON T1.customer_id = T2.customer_id","CREATE TABLE `customer` (
  customer_id INTEGER,
  store_id INTEGER REFERENCES store(None),
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  address_id INTEGER REFERENCES address(None),
  active INTEGER,
  create_date DATETIME,
  last_update DATETIME
);

CREATE TABLE `rental` (
  rental_id INTEGER,
  rental_date DATETIME PRIMARY KEY,
  inventory_id INTEGER PRIMARY KEY REFERENCES inventory(None),
  customer_id INTEGER PRIMARY KEY REFERENCES customer(None),
  return_date DATETIME,
  staff_id INTEGER REFERENCES staff(None),
  last_update DATETIME
);

",219,6.630778074264526,250,"['customer', 'rental']"
1877,Indicate the name of the product that is close to being sold out and that has the lowest cost price. Hint: name of the product refers to p_name; close to being sold out refers to ps_availqty < 10; the lowest cost price refers to min(ps_supplycost),retails,SELECT T1.p_name FROM part AS T1 INNER JOIN partsupp AS T2 ON T1.p_partkey = T2.ps_partkey WHERE T2.ps_availqty < 10 ORDER BY T2.ps_supplycost LIMIT 1,"CREATE TABLE `partsupp` (
  ps_partkey INTEGER PRIMARY KEY REFERENCES part(p_partkey),
  ps_suppkey INTEGER PRIMARY KEY REFERENCES supplier(s_suppkey),
  ps_supplycost REAL,
  ps_availqty INTEGER,
  ps_comment TEXT
);

CREATE TABLE `part` (
  p_partkey INTEGER,
  p_type TEXT,
  p_size INTEGER,
  p_brand TEXT,
  p_name TEXT,
  p_container TEXT,
  p_mfgr TEXT,
  p_retailprice REAL,
  p_comment TEXT
);

",189,6.5679802894592285,250,"['partsupp', 'part']"
1878,Which facilities were inspected by Sarah Lindsey on 20th November 2012? Hint: facility name refers to dba_name; on 20th November 2012 refers to inspection_date = '2012-11-20',food_inspection_2,SELECT DISTINCT T1.dba_name FROM establishment AS T1 INNER JOIN inspection AS T2 ON T1.license_no = T2.license_no INNER JOIN employee AS T3 ON T2.employee_id = T3.employee_id WHERE T2.inspection_date = '2012-11-20' AND T3.first_name = 'Sarah' AND T3.last_name = 'Lindsey',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `establishment` (
  license_no INTEGER,
  dba_name TEXT,
  aka_name TEXT,
  facility_type TEXT,
  risk_level INTEGER,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  latitude REAL,
  longitude REAL,
  ward INTEGER
);

",179,6.559858798980713,250,"['inspection', 'establishment']"
1879,How many customers are named Madison?,sales,SELECT COUNT(CustomerID) FROM Customers WHERE FirstName = 'Madison',"CREATE TABLE `customers` (
  CustomerID INTEGER,
  FirstName TEXT,
  MiddleInitial TEXT,
  LastName TEXT
);

",118,6.463454484939575,250,['customers']
1880,Please list the names of the institutes with the percentage of male White students graduating in 2011 within 150 percent of normal/expected time over 20. Hint: names of the institutes refers to chronname; male refers to gender = 'M'; white refers to race = 'w'; in 2011 refers to year = 2011; percentage of students graduating within 150 percent of normal/expected time over 20 refers to grad_150>20;,college_completion,SELECT T FROM ( SELECT DISTINCT CASE WHEN T2.grad_150 > 20 THEN T1.chronname ELSE NULL END AS T FROM institution_details T1 INNER JOIN institution_grads T2 ON T2.unitid = T1.unitid WHERE T2.year = 2011 AND T2.gender = 'M' AND T2.race = 'W' ) WHERE T IS NOT NULL,"CREATE TABLE `institution_grads` (
  unitid INTEGER REFERENCES institution_details(unitid),
  year INTEGER,
  gender TEXT,
  race TEXT,
  cohort TEXT,
  grad_cohort TEXT,
  grad_100 TEXT,
  grad_150 TEXT,
  grad_100_rate TEXT,
  grad_150_rate TEXT
);

CREATE TABLE `institution_details` (
  unitid INTEGER,
  chronname TEXT,
  city TEXT,
  state TEXT,
  level TEXT,
  control TEXT,
  basic TEXT,
  hbcu TEXT,
  flagship TEXT,
  long_x REAL,
  lat_y REAL,
  site TEXT,
  student_count INTEGER,
  awards_per_value REAL,
  awards_per_state_value REAL,
  awards_per_natl_value REAL,
  exp_award_value INTEGER,
  exp_award_state_value INTEGER,
  exp_award_natl_value INTEGER,
  exp_award_percentile INTEGER,
  ft_pct REAL,
  fte_value INTEGER,
  fte_percentile INTEGER,
  med_sat_value TEXT,
  med_sat_percentile TEXT,
  aid_value INTEGER,
  aid_percentile INTEGER,
  endow_value TEXT,
  endow_percentile TEXT,
  grad_100_value REAL,
  grad_100_percentile INTEGER,
  grad_150_value REAL,
  grad_150_percentile INTEGER,
  pell_value REAL,
  pell_percentile INTEGER,
  retain_value REAL,
  retain_percentile INTEGER,
  ft_fac_value REAL,
  ft_fac_percentile INTEGER,
  vsa_year TEXT,
  vsa_grad_after4_first TEXT,
  vsa_grad_elsewhere_after4_first TEXT,
  vsa_enroll_after4_first TEXT,
  vsa_enroll_elsewhere_after4_first TEXT,
  vsa_grad_after6_first TEXT,
  vsa_grad_elsewhere_after6_first TEXT,
  vsa_enroll_after6_first TEXT,
  vsa_enroll_elsewhere_after6_first TEXT,
  vsa_grad_after4_transfer TEXT,
  vsa_grad_elsewhere_after4_transfer TEXT,
  vsa_enroll_after4_transfer TEXT,
  vsa_enroll_elsewhere_after4_transfer TEXT,
  vsa_grad_after6_transfer TEXT,
  vsa_grad_elsewhere_after6_transfer TEXT,
  vsa_enroll_after6_transfer TEXT,
  vsa_enroll_elsewhere_after6_transfer TEXT,
  similar TEXT,
  state_sector_ct INTEGER,
  carnegie_ct INTEGER,
  counted_pct TEXT,
  nicknames TEXT,
  cohort_size INTEGER
);

",238,6.672304153442383,250,"['institution_grads', 'institution_details']"
1881,List down the phone numbers of employees who did Canvass inspection. Hint: phone number refers to phone; Canvass inspection refers to inspection_type = 'Canvass',food_inspection_2,SELECT DISTINCT T1.phone FROM employee AS T1 INNER JOIN inspection AS T2 ON T1.employee_id = T2.employee_id WHERE T2.inspection_type = 'Canvass',"CREATE TABLE `inspection` (
  inspection_id INTEGER,
  inspection_date DATE,
  inspection_type TEXT,
  results TEXT,
  employee_id INTEGER REFERENCES employee(employee_id),
  license_no INTEGER REFERENCES establishment(license_no),
  followup_to INTEGER REFERENCES inspection(inspection_id)
);

CREATE TABLE `employee` (
  employee_id INTEGER,
  first_name TEXT,
  last_name TEXT,
  address TEXT,
  city TEXT,
  state TEXT,
  zip INTEGER,
  phone TEXT,
  title TEXT,
  salary INTEGER,
  supervisor INTEGER REFERENCES employee(employee_id)
);

",155,6.53685188293457,250,"['inspection', 'employee']"
1882,The sales of how many territories in total do the employees in London take charge of? Hint: London refers to city = 'London';,retail_world,SELECT COUNT(T2.TerritoryID) FROM Employees AS T1 INNER JOIN EmployeeTerritories AS T2 ON T1.EmployeeID = T2.EmployeeID WHERE T1.City = 'London',"CREATE TABLE `employees` (
  EmployeeID INTEGER,
  LastName TEXT,
  FirstName TEXT,
  BirthDate DATE,
  Photo TEXT,
  Notes TEXT
);

",164,6.541291236877441,250,['employees']
1883,"What is the total amount male and female actors who were casted in movie ID 1684910 and what is the proportion between the highest quality actors against the worst quality of actors? Indicate your answer in percentage. List the the director as well as the genre. Hint: Female actors mean that a_gender = 'F'; Male actors mean that a_gender = 'M'; a_quality = 5 refers to act the best, a_quality = 0 refers to act the worst",movielens,"SELECT SUM(IIF(a_gender = 'M', 1, 0)) , SUM(IIF(a_gender = 'F', 1, 0)) , CAST(SUM(IIF(a_quality = 5, 1, 0)) AS REAL) * 100 / COUNT(*) , CAST(SUM(IIF(a_quality = 0, 1, 0)) AS REAL) * 100 / COUNT(*), ( SELECT directorid FROM movies2directors WHERE movieid = 1684910 ) , ( SELECT genre FROM movies2directors WHERE movieid = 1684910 ) FROM actors WHERE actorid IN ( SELECT actorid FROM movies2actors WHERE movieid = 1684910 )","CREATE TABLE `actors` (
  actorid INTEGER,
  a_gender TEXT,
  a_quality INTEGER
);

CREATE TABLE `movies2actors` (
  movieid INTEGER PRIMARY KEY REFERENCES movies(None),
  actorid INTEGER PRIMARY KEY REFERENCES actors(None),
  cast_num INTEGER
);

",236,6.665125370025635,250,"['actors', 'movies2actors']"
1884,"How many users were trialists when they rated the movie ""A Way of Life""? Hint: A Way of Life' refers to movie_title; the user was a trialist when he rated the movie refers to user_trialist = 1;",movie_platform,SELECT COUNT(T1.user_id) FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'When Will I Be Loved' AND T1.user_trialist = 1,"CREATE TABLE `movies` (
  movie_id INTEGER,
  movie_title TEXT,
  movie_release_year INTEGER,
  movie_url TEXT,
  movie_title_language TEXT,
  movie_popularity INTEGER,
  movie_image_url TEXT,
  director_id TEXT,
  director_name TEXT,
  director_url TEXT
);

CREATE TABLE `ratings` (
  movie_id INTEGER REFERENCES movies(movie_id),
  rating_id INTEGER REFERENCES ratings(rating_id),
  rating_url TEXT,
  rating_score INTEGER,
  rating_timestamp_utc TEXT,
  critic TEXT,
  critic_likes INTEGER,
  critic_comments INTEGER,
  user_id INTEGER REFERENCES ratings_users(user_id) REFERENCES lists_users(user_id),
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_eligible_for_trial INTEGER,
  user_has_payment_method INTEGER
);

CREATE TABLE `lists_users` (
  user_id INTEGER PRIMARY KEY REFERENCES lists(user_id),
  list_id INTEGER PRIMARY KEY REFERENCES lists(list_id),
  list_update_date_utc TEXT,
  list_creation_date_utc TEXT,
  user_trialist INTEGER,
  user_subscriber INTEGER,
  user_avatar_image_url TEXT,
  user_cover_image_url TEXT,
  user_eligible_for_trial TEXT,
  user_has_payment_method TEXT
);

",168,6.545090436935425,250,"['movies', 'ratings', 'lists_users']"
1885,"List down the DOB of players who received the ""man of the match"" award.",soccer_2016,SELECT T2.DOB FROM Match AS T1 INNER JOIN Player AS T2 ON T2.Player_Id = T1.Man_of_the_Match,"CREATE TABLE `player` (
  Player_Id INTEGER,
  Player_Name TEXT,
  DOB DATE,
  Batting_hand INTEGER REFERENCES Batting_Style(Batting_Id),
  Bowling_skill INTEGER REFERENCES Bowling_Style(Bowling_Id),
  Country_Name INTEGER REFERENCES Country(Country_Id)
);

CREATE TABLE `rolee` (
  Role_Id INTEGER,
  Role_Desc TEXT
);

",219,6.63505744934082,250,"['player', 'rolee']"
